<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://sd-kin.github.io/instamart-academic-plan/feed.xml" rel="self" type="application/atom+xml" /><link href="https://sd-kin.github.io/instamart-academic-plan/" rel="alternate" type="text/html" /><updated>2018-11-24T19:35:12+03:00</updated><id>https://sd-kin.github.io/instamart-academic-plan/</id><title type="html">instamart acadenic plan</title><subtitle>academic plan 2018</subtitle><entry><title type="html">Тезисы</title><link href="https://sd-kin.github.io/instamart-academic-plan/2018/11/23/konnors-oz-principles.html" rel="alternate" type="text/html" title="Тезисы" /><published>2018-11-23T20:55:21+03:00</published><updated>2018-11-23T20:55:21+03:00</updated><id>https://sd-kin.github.io/instamart-academic-plan/2018/11/23/konnors-oz-principles</id><content type="html" xml:base="https://sd-kin.github.io/instamart-academic-plan/2018/11/23/konnors-oz-principles.html">&lt;h3 id=&quot;принцип-оз-достижение-результатов-через-персональную-ответственность&quot;&gt;Принцип Оз: достижение результатов через персональную ответственность&lt;/h3&gt;

&lt;p&gt;Большинство компаний терпят неудачи в результате управленческих ошибок, однако немногие руководители и топ-менеджеры готовы признать этот факт.
Только принятие на себя большей ответственности за результаты вернет отдельного человека, коллектив или организацию на путь к успеху.&lt;/p&gt;

&lt;p&gt;Успех приносят не новомодные увлечения, парадигмы, процессы или программы, а готовность сотрудников организации взять на себя полную ответственность за желаемые результаты&lt;/p&gt;

&lt;p&gt;Результаты, к которым вы стремитесь, зависят от того, насколько вы готовы взять на себя за них ответственность.&lt;/p&gt;

&lt;p&gt;Все общества в мире страдают от современного культа виктимизации, ибо его коварная догма убеждает: в достижении целей вам мешают обстоятельства и другие люди. Такое отношение не дает человеку расти и развиваться.&lt;/p&gt;

&lt;p&gt;Тонкая черта отделяет успех от провала, крупные компании от среднестатистических. Под этой чертой лежат придумывание оправданий, обвинение других, сумятица и беспомощная позиция, а над этой чертой мы осознаем реальность, собственную причастность, берем на себя обязательства, находим решение проблем и предпринимаем действия.&lt;/p&gt;

&lt;p&gt;Ключевой элемент индивидуальной и корпоративной ответственности должен быть вплетен в саму ткань бизнеса, процессов и культуры организационной жизни.&lt;/p&gt;

&lt;p&gt;Чтобы оказаться Над чертой и не искать виноватых, вам придется подняться по Ступеням к ответственности, пройдя через Восприятие, Причастность, Решение и Действие.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Восприятие — включает осознание и принятие всей реальности ситуации.&lt;/li&gt;
  &lt;li&gt;Причастность — означает принятие своей ответственности за опыт и реальность, которые вы создаете для себя и других.* Решение — ведет к изменению реальной ситуации через поиск и реализацию решений&lt;/li&gt;
  &lt;li&gt;Действие — предусматривает, что вы самоотверженно и смело будете следовать принятым решениям, даже если они связаны с высоким риском.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Большинство работы в мире выполняют люди, чувствующие себя не самым лучшим образом.&lt;/p&gt;

&lt;p&gt;Все мы в тот или иной момент поддаемся желанию снять с себя ответственность с помощью оправданий&lt;/p&gt;

&lt;p&gt;Все наши объяснения сосредоточены на том, «почему этого нельзя сделать», а не на том, «что еще я могу сделать»&lt;/p&gt;

&lt;p&gt;Провести грань между виктимизацией и ответственностью непросто, особенно в сложной структуре современного общества.&lt;/p&gt;

&lt;p&gt;Оказавшись в Порочном круге жертвы, вы не сможете оттуда выбраться, пока не осознаете, что находитесь Под чертой и платите за это высокую цену.&lt;/p&gt;

&lt;p&gt;Можно значительно улучшить способность распознавать неприятные ситуации с помощью следующих подсказок:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Вы чувствуете, что оказались заложником обстоятельств.&lt;/li&gt;
  &lt;li&gt;Вы ощущаете, что не можете полностью контролировать ситуацию, разворачивающуюся вокруг вас.&lt;/li&gt;
  &lt;li&gt;Вы не слушаете, когда другие говорят прямо или намекают, что, по их мнению, вам нужно делать больше для получения лучших результатов.&lt;/li&gt;
  &lt;li&gt;Вы обнаруживаете, что перекладываете вину с себя и ищете виноватых.&lt;/li&gt;
  &lt;li&gt;Обсуждая проблемы, вы делаете упор скорее на то, чего не можете сделать, а не на то, что можете.&lt;/li&gt;
  &lt;li&gt;Вы не хотите признавать сложные проблемы, стоящие перед вами.&lt;/li&gt;
  &lt;li&gt;Вы обнаруживаете, что ищете того, кто скажет, что вам делать на этот раз.&lt;/li&gt;
  &lt;li&gt;Вы не хотите задавать наводящие вопросы о собственной ответственности.&lt;/li&gt;
  &lt;li&gt;Вы чувствуете, что с вами поступают несправедливо, и думаете, что с этим ничего нельзя поделать.&lt;/li&gt;
  &lt;li&gt;Вы то и дело занимаете оборонительную позицию.&lt;/li&gt;
  &lt;li&gt;Вы тратите много времени на разговоры о том, чего не можете изменить (например, о вашем начальнике, акционерах, экономической деятельности, нормативных документах).&lt;/li&gt;
  &lt;li&gt;Вы оправдываете бездействие своей растерянностью.&lt;/li&gt;
  &lt;li&gt;Вы избегаете людей, встреч и ситуаций, которые потребуют от вас отчета о ваших обязанностях.&lt;/li&gt;
  &lt;li&gt;Вы говорите: «Это не моя работа», Я ничего не могу с этим поделать», «Кто-то должен ему сказать», «Посмотрим, что будет дальше», «Просто скажите, чего вы от меня хотите», «На его месте я бы сделал по-другому».&lt;/li&gt;
  &lt;li&gt;Вы часто впустую тратите время и силы на «перемывание косточек» начальству и коллегам.&lt;/li&gt;
  &lt;li&gt;Вы тратите драгоценное время, продумывая в деталях убедительные объяснения тому, почему это не ваша вина.&lt;/li&gt;
  &lt;li&gt;Вы постоянно рассказываете одну и ту же историю о том, как кто-то обвел вас вокруг пальца.&lt;/li&gt;
  &lt;li&gt;Вы пессимистично смотрите на мир.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Ответственность:&lt;/strong&gt; «Личный выбор человека в любых обстоятельствах сохранять причастность и делать все необходимое для достижения желаемых результатов».&lt;/p&gt;

&lt;p&gt;Вам никогда не побороть пагубное прошлое, если не выработать подход к ответственности, ориентированный на настоящее и будущее, чтобы получить от жизни намного больше.&lt;/p&gt;

&lt;p&gt;Если организация работает неэффективно, значит, неэффективно работает весь коллектив.&lt;/p&gt;

&lt;p&gt;Когда все вместе несут ответственность за достижение организационных результатов, а не просто выполняют свою работу, все, как правило, получается.&lt;/p&gt;

&lt;p&gt;Необходимо отказаться от игры в «кто-это-сделал» и иллюзии безопасности, возникающей при перекладывании вины на другого. Также необходимо более активно участвовать в обучении других и проверять себя, всегда помня о необходимости принятия как индивидуальной, так и совместной ответственности.&lt;/p&gt;

&lt;p&gt;Чаще всего люди не могут разглядеть реальность, потому что предпочитают игнорировать или принимать изменения внешней среды.&lt;/p&gt;

&lt;p&gt;Тем, кто томится в Порочном круге жертвы и не в состоянии вступить в борьбу с реальностью своих обстоятельств, необходимо много храбрости, чтобы:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;распознать, что они упали Под черту;&lt;/li&gt;
  &lt;li&gt;осознать, что пребывание Под чертой не просто игнорирует текущую проблему, но и ведет к росту неудовлетворительных результатов;&lt;/li&gt;
  &lt;li&gt;признать и принять реальность, сделав первый шаг к принятию на себя ответственности.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Успех после того, как вы действительно побывали в положении жертвы — вот лучший реванш за случившееся.&lt;/p&gt;

&lt;p&gt;Вы сможете гораздо лучше разобраться в происходящем, если обеспечите регулярную и постоянную обратную связь от других людей.&lt;/p&gt;

&lt;p&gt;Слишком часто люди рассматривают неудачные обстоятельства как случайные инциденты; когда же обстоятельства оказываются более благоприятными, они автоматически приписывают это себе в заслугу за хорошо выполненную работу.&lt;/p&gt;

&lt;p&gt;Общество наблюдателей — это не общество участников. Сидя в сторонке и наблюдая, как на ваших глазах разворачивается «игра всей вашей жизни», вы отказываете себе в способности влиять на ее окончательный счет, подобно зрителю, наблюдающему с трибуны игру в футбол или бейсбол.&lt;/p&gt;

&lt;p&gt;Принцип Причастности охватывает все культуры и компании: если погрузиться в проблему или ситуацию и рассматривать ее как свою собственную, результаты всегда намного лучше.&lt;/p&gt;

&lt;p&gt;Только лишь принятием реальности и признанием своей роли в создании собственных обстоятельств можно немногого добиться, если вы не в состоянии решать реальные проблемы и устранять истинные препятствия на пути к результату.&lt;/p&gt;

&lt;p&gt;надо не просто Действовать, а потом почивать на лаврах; надо продолжать Действовать 24 часа в сутки 7 дней в неделю.&lt;/p&gt;

&lt;p&gt;Действие дает ответственность, и не только за деятельность, обстоятельства или чувства, но и за будущие достижения.&lt;/p&gt;

&lt;p&gt;Любая добродетель или сила, доведенные до крайности, в конечном счете могут стать пороком.&lt;/p&gt;

&lt;p&gt;Если вы надеетесь создать ответственность в своей организации, вы должны стать эталоном, с которого остальные смогут брать пример.&lt;/p&gt;

&lt;p&gt;Хочется, чтобы нас любили, считали дальновидными и разумными. И это мешает двигаться с необходимой скоростью. Помимо того, что это наносит большой ущерб, это стоит вам конкурентоспособности&lt;/p&gt;

&lt;p&gt;В идеальном мире лидерам не было бы нужды обучать ответственности, потому что все признавали бы свою ответственность в любой ситуации. Но наш мир не идеален, и всем свойственно ошибаться, поэтому обучение должно стать у лидеров ежедневной привычкой.&lt;/p&gt;

&lt;p&gt;Правильное отношение к ответственности в прошлом может предоставить человеку возможность определить прогресс в достижении результатов, извлечь уроки из прошлого опыта, закрепить чувство удовлетворенности и понять, что еще можно сделать, чтобы получить желаемые результаты.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;четко формулируйте желаемый результат&lt;/li&gt;
  &lt;li&gt;определите время для отчета о прогрессе, приемлемое для обеих сторон&lt;/li&gt;
  &lt;li&gt;высказывайте похвалу или поддержку&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Принцип Оз: достижение результатов через персональную ответственность</summary></entry><entry><title type="html">Тезисы</title><link href="https://sd-kin.github.io/instamart-academic-plan/2018/11/16/fawler-fanatic-programmer-notes.html" rel="alternate" type="text/html" title="Тезисы" /><published>2018-11-16T20:55:21+03:00</published><updated>2018-11-16T20:55:21+03:00</updated><id>https://sd-kin.github.io/instamart-academic-plan/2018/11/16/fawler-fanatic-programmer-notes</id><content type="html" xml:base="https://sd-kin.github.io/instamart-academic-plan/2018/11/16/fawler-fanatic-programmer-notes.html">&lt;h4 id=&quot;ты-должен&quot;&gt;Ты должен&lt;/h4&gt;

&lt;p&gt;Нужно придерживаться своего плана, а не чьего-то еще.&lt;/p&gt;

&lt;p&gt;Цель бизнеса — делать деньги. Чтобы преуспеть в компании, ты должен четко представлять себе, как ты вписываешься в план добывания денег&lt;/p&gt;

&lt;p&gt;Четыре грани, на которых должен концентрироваться бизнес при проектировании, разработке и продаже продукта:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Выбери рынок.&lt;/li&gt;
  &lt;li&gt;Инвестируй в свой продукт.&lt;/li&gt;
  &lt;li&gt;Действуй.&lt;/li&gt;
  &lt;li&gt;Продавай!&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;найди-свой-рынок&quot;&gt;Найди свой рынок&lt;/h4&gt;

&lt;p&gt;Принимать решения по саморазвитию и построению карьеры нужно осмысленно.&lt;/p&gt;

&lt;p&gt;Что за услуги ты можешь оказать бизнесу? Кому ты собираешься их продавать? Возрастет или сократится спрос на них в будущем? Насколько ты готов рискнуть, делая выбор?&lt;/p&gt;

&lt;p&gt;Оценка рисков является необъемлемой частью выбора технологий и областей для будущих инвестиций.&lt;/p&gt;

&lt;p&gt;Выбор стабильной, используемой в промышленности по всему миру технологии является более безопасным, но потенциально менее выгодным, чем ставка на только что появившуюся и никем не освоенную технологию.&lt;/p&gt;

&lt;p&gt;Повышение спроса увеличивает конкуренцию по цене. Проверенная временем стратегия следования за рынком заставит тебя конкурировать по цене с иностранными разработчиками, потому что твои навыки будут соответствовать именно этому сегменту рынка. Для успешной конкуренции в области устоявшейся технологии нужен переход на более высокий уровень.&lt;/p&gt;

&lt;p&gt;Ты не сможешь расслабленно совершенствовать навыки программирования, оставив связанные с бизнесом аспекты специалистам. если ты хочешь стать незаменимым, придется детально разобраться в особенностях бизнеса, с которым связана твоя деятельность.&lt;/p&gt;

&lt;p&gt;Отказаться от развития в области бизнеса — все равно что оставить сбережения на сберегательном счету с низким процентом при наличии более доходных вариантов вложения средств.&lt;/p&gt;

&lt;p&gt;Изучи свою отрасль. С какими проблемами приходится бороться в вашей отрасли? Какая из них является наиболее актуальной на текущий момент? Обсуди это со своими заказчиками. Попроси их объяснить ситуацию и высказать свое мнение. Подумай, как эти вещи влияют на твою компанию, на твой отдел, на твою группу и в конечном счете на твою работу.&lt;/p&gt;

&lt;h4 id=&quot;будь-худшим&quot;&gt;Будь худшим&lt;/h4&gt;

&lt;p&gt;Улучшить или, наоборот, ухудшить свои навыки можно в зависимости от того, с кем приходится работать.&lt;/p&gt;

&lt;p&gt;Можно быть первоклассным музыкантом, но всю жизнь играть в заштатных коллективах просто потому, что ты боишься. Прямо признавая себя далеко не лучшим, мы избавляемся от страха, что на нашу недостаточную квалификацию укажет кто-то другой.&lt;/p&gt;

&lt;h4 id=&quot;инвестируй-в-интеллект&quot;&gt;Инвестируй в интеллект&lt;/h4&gt;

&lt;p&gt;Изучи новый язык программирования. Не имеет смысла переходить с Java на C# или с C на C++. Новый язык должен изменить тип твоего мышления.&lt;/p&gt;

&lt;p&gt;Если ты программист, работающий на Java или C#, попробуй освоить Smalltalk или Ruby, в которых отсутствует статическая типизация. А если ты долгое время занимаешься объектно-ориентированным программированием, обрати внимание на функциональные языки, например Haskell или Scheme.&lt;/p&gt;

&lt;h4 id=&quot;не-слушай-родителей&quot;&gt;Не слушай родителей&lt;/h4&gt;

&lt;p&gt;Родители хотят, чтобы с ребенком все было в порядке. А блистательная карьера и связанные с этим риски в такую схему не вписываются.&lt;/p&gt;

&lt;p&gt;Чем больше областей ты изучил, чем больше разных архитектур прошло через твои руки, тем проще тебе принимать решение в сложных случаях. Работа в одной и той же компании с постепенным продвижением по карьерной лестнице замедляет твой рост как разработчика.&lt;/p&gt;

&lt;p&gt;В карьерных вопросах нужно идти на обдуманный риск. Не позволяй страху завладеть тобой. И если ты не получаешь удовольствия от работы, ты никогда не достигнешь в ней совершенства.&lt;/p&gt;

&lt;p&gt;Определи свои самые серьезные страхи, связанные с карьерой. Вспомни последние принятые в этом направлении решения. Это могут быть взятые на себя дополнительные обязанности, заявление о смене работы или повышении. Когда список будет готов, честно оцени каждый из пунктов: насколько твоим решением в данной ситуации управлял страх? Что бы ты сделал, если бы страха не было?&lt;/p&gt;

&lt;h4 id=&quot;будь-универсалом&quot;&gt;Будь универсалом&lt;/h4&gt;

&lt;h4 id=&quot;будь-специалистом&quot;&gt;Будь специалистом&lt;/h4&gt;

&lt;p&gt;Если ты специалист по .NET, это вовсе не оправдывает тот факт, что ты не разбираешься ни в чем, кроме .NET. Это лишь означает, что ты являешься экспертом во всем, что касается .NET.&lt;/p&gt;

&lt;h4 id=&quot;не-клади-все-свои-яйца-в-чужую-корзину&quot;&gt;Не клади все свои яйца в чужую корзину&lt;/h4&gt;

&lt;p&gt;Карьера должна восприниматься, как бизнес. В принципе, построить бизнес, паразитирующий на другом бизнесе, возможно, но для отдельного человека это крайне рискованный путь. Фирма
сможет среагировать на изменение в расстановке сил на рынке, в то время как индивид вряд ли обладает способностями или излишками финансов, позволяющими резко изменить направление или фокус своей карьеры.&lt;/p&gt;

&lt;h4 id=&quot;полюби-или-уходи&quot;&gt;Полюби или уходи&lt;/h4&gt;

&lt;p&gt;Если ты хочешь достичь высот в своей работе, ты должен быть влюблен в нее. Если же тебе все равно, это непременно станет заметно.&lt;/p&gt;

&lt;h3 id=&quot;инвестируя-в-свой-продукт&quot;&gt;Инвестируя в свой продукт&lt;/h3&gt;

&lt;p&gt;Для получения отличного продукта, способного продаваться на рынке труда, тебе придется как следует потрудиться.&lt;/p&gt;

&lt;p&gt;Чтобы твой продукт действительно начал чего-то стоить, его придется полить кровью, потом, слезами и деньгами.&lt;/p&gt;

&lt;p&gt;Первым делом следует изучить инструменты, необходимые для выполнения непосредственных обязанностей.&lt;/p&gt;

&lt;p&gt;Не знакомый с особенностями конкретного бизнеса человек легко допускает глупые ошибки, которых легко можно было бы избежать, обладая базовыми представлениями о том, в какой сфере ты работаешь.&lt;/p&gt;

&lt;h4 id=&quot;разберись-как-работает-бизнес&quot;&gt;Разберись, как работает бизнес&lt;/h4&gt;

&lt;p&gt;Ты не сможешь помогать бизнесу творчески, если не знаешь, как он устроен.&lt;/p&gt;

&lt;h4 id=&quot;найди-наставника&quot;&gt;Найди наставника&lt;/h4&gt;

&lt;h4 id=&quot;стань-наставником&quot;&gt;Стань наставником&lt;/h4&gt;

&lt;p&gt;Если хочешь по-настоящему что-то изучить, попробуй научить этому кого-то другого.&lt;/p&gt;

&lt;p&gt;Знание фактов не означает понимания их причин и следствий. Именно такое, более глубокое понимание мы развиваем в себе, уча других.&lt;/p&gt;

&lt;h4 id=&quot;практика&quot;&gt;Практика&lt;/h4&gt;

&lt;p&gt;Важно понять, в каких именно вещах тебе требуется тренировка, и, разумеется, никогда не тренироваться на работе.&lt;/p&gt;

&lt;h4 id=&quot;подход-к-работе&quot;&gt;Подход к работе&lt;/h4&gt;

&lt;p&gt;При написании кода важно сосредоточиться не только на разрабатываемом продукте, но и на самом процессе разработки. Отвлекаясь от процесса, мы рискуем опоздать со сроками  выполнениязадания, получить некачественный продукт или не получить вообще ничего.&lt;/p&gt;

&lt;h4 id=&quot;на-плечах-гигантов&quot;&gt;На плечах гигантов&lt;/h4&gt;

&lt;p&gt;Изучение работ мастеров является важным компонентом становления нового мастера.&lt;/p&gt;

&lt;h4 id=&quot;автоматизация-задач&quot;&gt;Автоматизация задач&lt;/h4&gt;

&lt;p&gt;Для увеличения объемов производства программного обеспечения можно:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;нанять тех, кто будет работать быстрее&lt;/li&gt;
  &lt;li&gt;нанять дополнительных работников&lt;/li&gt;
  &lt;li&gt;автоматизировать работу&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;исполнение&quot;&gt;Исполнение&lt;/h3&gt;

&lt;p&gt;Нужно доводить начатое до конца.&lt;/p&gt;

&lt;p&gt;Всегда будь тем, кто спрашивает: «А что мы можем сделать прямо сейчас?»&lt;/p&gt;

&lt;h4 id=&quot;ежедневные-победы&quot;&gt;Ежедневные победы&lt;/h4&gt;

&lt;p&gt;Для попадания в список лучших достаточно превзойти ожидания руководства.&lt;/p&gt;

&lt;h4 id=&quot;будь-на-своем-месте&quot;&gt;Будь на своем месте&lt;/h4&gt;

&lt;p&gt;Будь честолюбив, но не показывай этого.&lt;/p&gt;

&lt;p&gt;Концентрация на настоящем позволяет получать удовольствия от маленьких побед в ежедневной рабочей рутине&lt;/p&gt;

&lt;h4 id=&quot;великолепная-задача-на-сегодня&quot;&gt;Великолепная задача на сегодня&lt;/h4&gt;

&lt;p&gt;Насколько интереснее стала бы твоя работа, если бы ты мог подойти к самым неинтересным и опостылевшим задачам с лихорадочным желанием сделать все правильно?&lt;/p&gt;

&lt;h4 id=&quot;сколько-ты-стоишь&quot;&gt;Сколько ты стоишь?&lt;/h4&gt;

&lt;p&gt;Насколько ты способствуешь росту прибыли предприятия?&lt;/p&gt;

&lt;h4 id=&quot;камешек-в-ведре-воды&quot;&gt;Камешек в ведре воды&lt;/h4&gt;

&lt;p&gt;Для фирмы твое присутствие на работе подобно камешку в ведре воды. Ты вносишь свой вклад. Но если убрать из ведра камешек и посмотреть на поверхность воды, вряд ли кто-то сможет увидеть разницу.&lt;/p&gt;

&lt;p&gt;Чем более незаменимым ты себя считаешь, тем менее незаменимым ты становишься&lt;/p&gt;

&lt;h4 id=&quot;возлюби-поддержку&quot;&gt;Возлюби поддержку&lt;/h4&gt;

&lt;p&gt;В режиме сопровождения надеются лишь на бесперебойную работу программного обеспечения при максимально низких затратах. Никто не ожидает от группы технической поддержки эффектных свершений.&lt;/p&gt;

&lt;h4 id=&quot;восьмичасовое-пламя&quot;&gt;Восьмичасовое пламя&lt;/h4&gt;

&lt;p&gt;Человек должен работать настолько интенсивно, что просто не сможет работать больше восьми часов.&lt;/p&gt;

&lt;p&gt;Распоряжайся своим рабочим временем аккуратно. Работай меньше, и ты начнешь больше успевать. Работа всегда приносит больше удовольствия, когда ты можешь от нее отдохнуть.&lt;/p&gt;

&lt;h4 id=&quot;научись-проигрывать&quot;&gt;Научись проигрывать&lt;/h4&gt;

&lt;p&gt;Правильная реакция на ошибку может сделать нас более лояльными клиентами, чем мы могли бы быть при отсутствии проблем с сервисом.&lt;/p&gt;

&lt;h4 id=&quot;умей-говорить-нет&quot;&gt;Умей говорить «нет»&lt;/h4&gt;

&lt;h4 id=&quot;не-паникуй&quot;&gt;Не паникуй&lt;/h4&gt;

&lt;p&gt;Если происходит что-то плохое и я начинаю ощущать это поглощающее чувство напряжения, ведущее к панике, то я сравниваю себя с расстроенным компьютерным «чайником» и начинаю смеяться над собой.&lt;/p&gt;

&lt;h4 id=&quot;скажи-это-сделай-это-покажи-это&quot;&gt;Скажи это, сделай это, покажи это&lt;/h4&gt;

&lt;p&gt;Если срок исполнения не указан, ничто не заставляет и не мотивирует тебя на трудовые подвиги.&lt;/p&gt;

&lt;p&gt;При наличии слишком большого количества дел именно планирование позволяет перейти от неопределенности, приводящей в замешательство в начале рабочего дня, к четкой уверенности в очередности решения задач.&lt;/p&gt;

&lt;h3 id=&quot;маркетинг-не-только-для-бизнесменов&quot;&gt;маркетинг… не только для бизнесменов&lt;/h3&gt;

&lt;p&gt;Ты можешь производить лучший в мире продукт, но если ты не сделаешь ему хоть какую-то рекламу, его никто не купит.&lt;/p&gt;

&lt;h4 id=&quot;восприятие-и-репутация&quot;&gt;Восприятие и репутация&lt;/h4&gt;

&lt;p&gt;Репутация — это реальность. Смирись с этой мыслью. Не существует объективной меры квалификации работника умственного труда и качества его работы.&lt;/p&gt;

&lt;h4 id=&quot;проводник-в-неведомое&quot;&gt;Проводник в неведомое&lt;/h4&gt;

&lt;p&gt;Для клиента ты должен стать проводником по суровым землям мира информационных технологий.&lt;/p&gt;

&lt;h4 id=&quot;разговор-с-бизнесменом&quot;&gt;Разговор с бизнесменом&lt;/h4&gt;

&lt;p&gt;Бизнесмены не интересуются гигагерцами и частотами. Им нравится, когда приложение работает быстро.&lt;/p&gt;

&lt;p&gt;Рекламируй свои достижения в терминах, понятных бизнесу.&lt;/p&gt;

&lt;h4 id=&quot;незаурядность&quot;&gt;Незаурядность&lt;/h4&gt;

&lt;p&gt;Маркетинг должен формировать связь между производителями и потребителями товаров или услуг. Эта связь начинается с наличия информации о продукте.&lt;/p&gt;

&lt;p&gt;Быть незаурядным означает каким-то образом привлекать внимание.&lt;/p&gt;

&lt;h4 id=&quot;заводи-знакомства&quot;&gt;Заводи знакомства&lt;/h4&gt;

&lt;h3 id=&quot;сохраняя-конкурентные-преимущества&quot;&gt;Сохраняя конкурентные преимущества&lt;/h3&gt;

&lt;h4 id=&quot;ты-уже-устарел&quot;&gt;Ты уже устарел&lt;/h4&gt;

&lt;h4 id=&quot;ты-уже-безработный&quot;&gt;Ты уже безработный&lt;/h4&gt;

&lt;p&gt;В наше время небезопасно слишком сильно отождествлять себя с работой, на которую тебя наняли.&lt;/p&gt;

&lt;h4 id=&quot;дорога-в-никуда&quot;&gt;Дорога в никуда&lt;/h4&gt;

&lt;p&gt;Концентрируйся на том, что делаешь, а не на том, что должно быть сделано.&lt;/p&gt;

&lt;h4 id=&quot;составь-план&quot;&gt;Составь план&lt;/h4&gt;

&lt;p&gt;Персональный план развития позволит тебе определить, двигаешься ли ты куда-нибудь или топчешься на месте.&lt;/p&gt;

&lt;h4 id=&quot;этот-толстяк-в-зеркале&quot;&gt;Этот толстяк в зеркале&lt;/h4&gt;

&lt;p&gt;Можно каждый день смотреться в воображаемое зеркало и не замечать изменений.&lt;/p&gt;

&lt;h4 id=&quot;ловушка-для-обезьян&quot;&gt;Ловушка для обезьян&lt;/h4&gt;

&lt;p&gt;Не все ценности, в которые мы верим, хорошие. Бывает и такое, что вещи, допустимые в одних обстоятельствах, оказываются совершенно недопустимыми в других.&lt;/p&gt;

&lt;h4 id=&quot;избегай-каскадного-планирования-карьеры&quot;&gt;Избегай каскадного планирования карьеры&lt;/h4&gt;

&lt;h4 id=&quot;лучше-чем-вчера&quot;&gt;Лучше, чем вчера&lt;/h4&gt;

&lt;p&gt;Карьерные изменения — это не строительство небоскреба, они не потребуют выкинуть на помойку весь наработанный ранее опыт.&lt;/p&gt;

&lt;p&gt;Ставь большие цели, но по пути постоянно вноси коррективы. Учись на собственном опыте и меняй цели при необходимости.&lt;/p&gt;

&lt;h4 id=&quot;стань-независимым&quot;&gt;Стань независимым&lt;/h4&gt;

&lt;p&gt;Самостоятельный поиск заказчиков и разработка продуктов лучший показатель квалификации&lt;/p&gt;</content><author><name></name></author><summary type="html">Ты должен</summary></entry><entry><title type="html">Тезисы</title><link href="https://sd-kin.github.io/instamart-academic-plan/2018/11/11/connor-qbq-notes.html" rel="alternate" type="text/html" title="Тезисы" /><published>2018-11-11T20:57:22+03:00</published><updated>2018-11-11T20:57:22+03:00</updated><id>https://sd-kin.github.io/instamart-academic-plan/2018/11/11/connor-qbq-notes</id><content type="html" xml:base="https://sd-kin.github.io/instamart-academic-plan/2018/11/11/connor-qbq-notes.html">&lt;p&gt;Самое большое преимущество личной ответственности - положительные изменения в мироощущении.
Вопросы, которые подразумевают что проблему должен решать кто-то другой, противоречат принципу личной ответственности
QBQ (question behind question) - инструмент, который позволяет человеку развить личную ответственность, путём принятия правильных решений в нужный момент
Принятие личной ответственности приносит пользу всем, от самого человека до компании в которой он работает и самих клиентов.
Выбор есть всегда, решение не делать выбор - тоже выбор&lt;/p&gt;

&lt;p&gt;Первая реакция на проблему чаще всего негативная, нужно учиться контролировать себя и задавать правильные вопросы
Правильные вопросы - вопросы которые мы задаём себе&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;начинаются со слова “что”, “как” а не “кто” и “почему”&lt;/li&gt;
  &lt;li&gt;содержат личное местоимение - “я” а не “вы”, “они”, “мы”&lt;/li&gt;
  &lt;li&gt;нацелены на совершение конкретных поступков
например - “что я могу сделать?”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;вопросы из серии “почему?” ставят спрашивающего в позицию жертвы обстоятельств, которая является непродуктивной
нужно избавляться от мышления жертвы&lt;/p&gt;

&lt;p&gt;Стресс это выбор, мы сами определяем свою реакцию на события
занимая позицию жертвы мы усиливаем стрес вместо преодаления сложностей&lt;/p&gt;

&lt;p&gt;Улучшить коммуникацию с окружающими можно только самостоятельно. Нужно сначала понять собеседника а не требовать чтобы тебя понялию&lt;/p&gt;

&lt;p&gt;Вопросы из серии “когда?” подразумевают что у нас нет другого выбора кроме как ждать. Это ведёт к промедлению и потере продуктивности.
Промедление повышает уровень стресса, теряется радость от работы, в конечном итоге приводит к неудаче.&lt;/p&gt;

&lt;p&gt;Решать проблемы нужно с помощью доступных ресурсов, не оправдывать себя недостатком инструментов
Зацикливаться на том, каких инструментов нехватает - непродуктивно&lt;/p&gt;

&lt;p&gt;Лучше учиться применять имеющиеся знания чем постоянно изучать что-то новое&lt;/p&gt;

&lt;p&gt;Поиск виноватых ничего не решает, только мешает продуктивной работе. Нужно искать пути решения проблем.&lt;/p&gt;

&lt;p&gt;Ответственные люди ищут решения а не виновных. Из своих ошибок нужно извлекать уроки а не винить себя.&lt;/p&gt;

&lt;p&gt;Команда должна работать вместе, перекладывать ответственность на часть команды или группу - непродуктивно.&lt;/p&gt;

&lt;p&gt;Повышать эффективность нужно несмотря на обстоятельства, не искать оправдания во внешних факторах, которые нельзя изменить&lt;/p&gt;

&lt;p&gt;Из любой неприятной ситуации нужно извлекать максимум пользы&lt;/p&gt;

&lt;p&gt;Коллективная ответственность - принимать ответственность за свой коллектив а не перекладывать свою ответственность на него&lt;/p&gt;

&lt;p&gt;Изменить можно только себя, нужно работать над собой а не ждать изменений от людей, компании или обстоятельств&lt;/p&gt;

&lt;p&gt;Ответственность начинается с честности, быть честным - быть тем, кем вы себя заявляете и отвечать за свои слова&lt;/p&gt;

&lt;p&gt;нужно верить в то, что делаешь или менять род деятельности&lt;/p&gt;

&lt;p&gt;продуктивные вопросы нацелены на поступки&lt;/p&gt;

&lt;p&gt;ошибка даёт опыт, бездействие только застой и атрофию&lt;/p&gt;

&lt;p&gt;скромность - основа лидерства&lt;/p&gt;

&lt;p&gt;Основные принципы:
• Никакого мышления жертвы, жалоб, отклады-
вания на потом и обвинений.
• Изменить можно только себя.
• Действовать.&lt;/p&gt;

&lt;p&gt;Обучение — это превращение знания о поступке в поступок, основанный на знании. Информация, которая не привела к изменениям, не может считаться изученной&lt;/p&gt;</content><author><name></name></author><summary type="html">Самое большое преимущество личной ответственности - положительные изменения в мироощущении. Вопросы, которые подразумевают что проблему должен решать кто-то другой, противоречат принципу личной ответственности QBQ (question behind question) - инструмент, который позволяет человеку развить личную ответственность, путём принятия правильных решений в нужный момент Принятие личной ответственности приносит пользу всем, от самого человека до компании в которой он работает и самих клиентов. Выбор есть всегда, решение не делать выбор - тоже выбор</summary></entry><entry><title type="html">Тезисы</title><link href="https://sd-kin.github.io/instamart-academic-plan/2018/11/11/martin-ideal-programmer-notes.html" rel="alternate" type="text/html" title="Тезисы" /><published>2018-11-11T20:56:22+03:00</published><updated>2018-11-11T20:56:22+03:00</updated><id>https://sd-kin.github.io/instamart-academic-plan/2018/11/11/martin-ideal-programmer-notes</id><content type="html" xml:base="https://sd-kin.github.io/instamart-academic-plan/2018/11/11/martin-ideal-programmer-notes.html">&lt;p&gt;проффесионализм = ответственность&lt;/p&gt;

&lt;p&gt;незначительные, с виду, изменения могут повлиять на напрямую не связанный с ними код, всегда нужно проверять последствия&lt;/p&gt;

&lt;p&gt;нельзя отдавать в тестировку код в котором не уверен&lt;/p&gt;

&lt;p&gt;структура кода должна быть гибкой, легко модифицируемой&lt;/p&gt;

&lt;p&gt;нужно тратить время на саморазвитие. непрерывное обучение - упражнения, тренироовка навыков&lt;/p&gt;

&lt;h5 id=&quot;нужно-знать&quot;&gt;нужно знать:&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;паттерны GoF&lt;/li&gt;
  &lt;li&gt;принципы проектирования - SOLID&lt;/li&gt;
  &lt;li&gt;TDD, ООП и пр дисциплины&lt;/li&gt;
  &lt;li&gt;структуры, диаграммы, блок-схемы&lt;/li&gt;
  &lt;li&gt;понимание предметной области в которой работаешь, бизнесс процессов&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;нельзя подписываться на невыполнимые сроки, нужно искать оптимальное решение&lt;/p&gt;

&lt;p&gt;не пытаться - делать&lt;/p&gt;

&lt;p&gt;на начальном этапе задача всегда кажется проще, со временем требования только увеличиваются&lt;/p&gt;

&lt;p&gt;неопределённые/неуверенные обещания - не стоит давать, нельзя полагаться&lt;/p&gt;

&lt;p&gt;выполненные обещания создают репутацию ответственного разработчика&lt;/p&gt;

&lt;p&gt;нужно оценивать свои возможности, не давать невыполнимых обещаний&lt;/p&gt;

&lt;p&gt;код, написанный уставшим, придётся переписывать&lt;/p&gt;

&lt;p&gt;в состоянии потока теряется общая картина - хорошо для тренировки, плохо для работы&lt;/p&gt;

&lt;p&gt;отладка - неизбежная часть процесса, но время на отладку стоит минимизировать с помощью TDD, изучения отладчиков&lt;/p&gt;

&lt;p&gt;нужно выбрать темп работы, не работать до последнего&lt;/p&gt;

&lt;p&gt;при оценки сроков стоит давать три даты оценки потраченного времени - лушая, наиболее вероятная и худшая&lt;/p&gt;

&lt;p&gt;нужно помогать коллегам и не стесняться просить о помощи&lt;/p&gt;

&lt;h5 id=&quot;tdd&quot;&gt;TDD&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;даёт уверенность&lt;/li&gt;
  &lt;li&gt;быстрый цикл разработки&lt;/li&gt;
  &lt;li&gt;не страшно рефакторить&lt;/li&gt;
  &lt;li&gt;документация&lt;/li&gt;
  &lt;li&gt;провоцируют модульность и лучшую архитектуру&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Тренировка программирования - упражнения и open source&lt;/p&gt;

&lt;p&gt;принцип неопределённости - реализация требований даёт новую информацию, которая может изменить требования&lt;/p&gt;

&lt;p&gt;неоднозначность требований - разные люди трактуют одну формулировку по разному&lt;/p&gt;

&lt;p&gt;приёмочные тесты - способ понять что задача выполнена. Приёмочные тесты должны писать не те же кто реализует функционал&lt;/p&gt;</content><author><name></name></author><summary type="html">проффесионализм = ответственность</summary></entry><entry><title type="html">Решения</title><link href="https://sd-kin.github.io/instamart-academic-plan/2018/11/11/hackerrank-solutions.html" rel="alternate" type="text/html" title="Решения" /><published>2018-11-11T20:55:22+03:00</published><updated>2018-11-11T20:55:22+03:00</updated><id>https://sd-kin.github.io/instamart-academic-plan/2018/11/11/hackerrank-solutions</id><content type="html" xml:base="https://sd-kin.github.io/instamart-academic-plan/2018/11/11/hackerrank-solutions.html">&lt;h2 id=&quot;basic-select&quot;&gt;BASIC SELECT&lt;/h2&gt;

&lt;h4 id=&quot;revising-the-select-query-i&quot;&gt;Revising the Select Query I&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query all columns for all American cities in CITY with populations larger than 100000. The CountryCode for America is USA.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COUNTRYCODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'USA'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;revising-the-select-query-ii&quot;&gt;Revising the Select Query II&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query the names of all American cities in CITY with populations larger than 120000. The CountryCode for America is USA.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COUNTRYCODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'USA'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;120000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;select-all&quot;&gt;Select All&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query all columns (attributes) for every row in the CITY table.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;select-by-id&quot;&gt;Select By ID&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query all columns for a city in CITY with the ID 1661.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1661&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;japanese-cities-attributes&quot;&gt;Japanese Cities’ Attributes&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query all attributes of every Japanese city in the CITY table. The COUNTRYCODE for Japan is JPN.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COUNTRYCODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'JPN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;japanese-cities-names&quot;&gt;Japanese Cities’ Names&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query the names of all the Japanese cities in the CITY table. The COUNTRYCODE for Japan is JPN.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COUNTRYCODE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'JPN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-1&quot;&gt;Weather Observation Station 1&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Query a list of CITY and STATE from the STATION table.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;STATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-3&quot;&gt;Weather Observation Station 3&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Query a list of CITY names from STATION with even ID numbers only. You may print the results in any order, but must exclude duplicates from your answer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-4&quot;&gt;Weather Observation Station 4&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Let N be the number of CITY entries in STATION, and let N1 be the number of distinct CITY names in STATION; query the value of N - N1  from STATION. In other words, find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-5&quot;&gt;Weather Observation Station 5&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LENGTH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-6&quot;&gt;Weather Observation Station 6&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^[aeiou].*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-7&quot;&gt;Weather Observation Station 7&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.*[aeiou]$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-8&quot;&gt;Weather Observation Station 8&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^[aeiou].*[aeiou]$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-9&quot;&gt;Weather Observation Station 9&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^[^aeiou].*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-10&quot;&gt;Weather Observation Station 10&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.*[^aeiou]$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-11&quot;&gt;Weather Observation Station 11&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'(^[^aeiou].*)|(.*[^aeiou]$)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-12&quot;&gt;Weather Observation Station 12&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^[^aeiou].*[^aeiou]$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;higher-than-75-marks&quot;&gt;Higher Than 75 Marks&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters of each name. If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STUDENTS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MARKS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUBSTRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;employee-names&quot;&gt;Employee Names&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Employee&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;employee-salaries&quot;&gt;Employee Salaries&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Write a query that prints a list of employee names (i.e.: the name attribute) for employees in Employee having a salary greater than 2000 per month who have been employees for less than 10  months. Sort your result by ascending employee_id.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Employee&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;months&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;employee_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;basic-join&quot;&gt;BASIC JOIN&lt;/h2&gt;

&lt;h4 id=&quot;ollivanders-inventory&quot;&gt;Ollivander’s Inventory&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Harry Potter and his friends are at Ollivander’s with Ron, finally replacing Charlie’s old broken wand. Hermione decides the best way to choose is by determining the minimum number of gold galleons needed to buy each non-evil wand of high power and age. Write a query to print the id, age, coins_needed, and power of the wands that Ron’s interested in, sorted in order of descending power. If more than one wand has same power, sort the result in order of descending age.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coins_needed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;power&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Wands&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Wands_Property&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_evil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coins_needed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coins_needed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Wands&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w1&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Wands_Property&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;power&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;power&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;power&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;challenges&quot;&gt;Challenges&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Julia asked her students to create some coding challenges. Write a query to print the hacker_id, name, and the total number of challenges created by each student. Sort your results by the total number of challenges in descending order. If more than one student created the same number of challenges, then sort the result by hacker_id. If more than one student created the same number of challenges and the count is less than the maximum number of challenges created, then exclude those students from the result.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
       &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
       &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;challenge_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_count&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Hackers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Challenges&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;challenge_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_max&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;challenges&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt; 
     &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt; 
     &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_max&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_count&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_compare&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_unique&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                  &lt;span class=&quot;n&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                  &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;challenge_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_compare&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Hackers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h2&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Challenges&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counts&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_compare&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_compare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_count&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;contest-leaderboard&quot;&gt;Contest Leaderboard&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;You did such a great job helping Julia with her last coding contest challenge that she wants you to work on this one, too! The total score of a hacker is the sum of their maximum scores for all of the challenges. Write a query to print the hacker_id, name, and total score of the hackers ordered by the descending score. If more than one hacker achieved the same total score, then sort the result by ascending hacker_id. Exclude all hackers with a total score of 0 from your result.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HACKER_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HACKER_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Hackers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;H&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Submissions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HACKER_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HACKER_ID&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HACKER_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;H&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CHALLENGE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HACKER_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCORE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HACKER_ID&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;asian-population&quot;&gt;Asian Population&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Given the CITY and COUNTRY tables, query the sum of the populations of all cities where the CONTINENT is ‘Asia’.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note: CITY.CountryCode and COUNTRY.Code are matching key columns.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COUNTRY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COUNTRYCODE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CODE&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTINENT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Asia'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;african-cities&quot;&gt;African Cities&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Given the CITY and COUNTRY tables, query the names of all cities where the CONTINENT is ‘Africa’.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note: CITY.CountryCode and COUNTRY.Code are matching key columns.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COUNTRY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CODE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COUNTRYCODE&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONTINENT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Africa'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;average-population-of-each-continent&quot;&gt;Average Population of Each Continent&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Given the CITY and COUNTRY tables, query the names of all the continents (COUNTRY.Continent) and their respective average city populations (CITY.Population) rounded down to the nearest integer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note: CITY.CountryCode and COUNTRY.Code are matching key columns.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CONTINENT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FLOOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;AVG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COUNTRY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CODE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;COUNTRYCODE&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CONTINENT&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;the-report&quot;&gt;The Report&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;You are given two tables: Students and Grades. Students contains three columns ID, Name and Marks. Ketty gives Eve a task to generate a report containing three columns: Name, Grade and Mark. Ketty doesn’t want the NAMES of those students who received a grade lower than 8. The report must be in descending order by grade – i.e. higher grades are entered first. If there is more than one student with the same grade (8-10) assigned to them, order those particular students by their name alphabetically. Finally, if the grade is lower than 8, use “NULL” as their name and list them by their grades in descending order. If there is more than one student with the same grade (1-7) assigned to them, order those particular students by their marks in ascending order.Write a query to help Eve.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Grade&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Grade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Marks&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Students&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Grades&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Marks&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Min_Mark&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Max_Mark&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Grade&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;top-competitors&quot;&gt;Top Competitors&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Julia just finished conducting a coding contest, and she needs your help assembling the leaderboard! Write a query to print the respective hacker_id and name of hackers who achieved full scores for more than one challenge. Order your output in descending order by the total number of challenges in which the hacker earned a full score. If more than one hacker received full scores in same number of challenges, then sort them by ascending hacker_id.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Hackers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Submissions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Challenges&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;challenge_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;challenge_id&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Difficulty&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;difficulty_level&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;difficulty_level&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;distinct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;challenge_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;advanced-select&quot;&gt;Advanced select&lt;/h2&gt;

&lt;h4 id=&quot;type-of-triangle&quot;&gt;Type of Triangle&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Write a query identifying the type of each record in the TRIANGLES table using its three side lengths. Output one of the following statements for each record in the table:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Equilateral: It’s a triangle with  sides of equal length.
Isosceles: It’s a triangle with  sides of equal length.
Scalene: It’s a triangle with  sides of differing lengths.
Not A Triangle: The given values of A, B, and C don’t form a triangle.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Not A Triangle'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Equilateral'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Isosceles'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Scalene'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRIANGLES&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;the-pads&quot;&gt;The PADS&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Generate the following two result sets:
Query an alphabetically ordered list of all names in OCCUPATIONS, immediately followed by the first letter of each profession as a parenthetical (i.e.: enclosed in parentheses). For example: AnActorName(A), ADoctorName(D), AProfessorName(P), and ASingerName(S).
Query the number of ocurrences of each occupation in OCCUPATIONS. Sort the occurrences in ascending order, and output them in the following format: There are a total of [occupation_count] [occupation]s.
where [occupation_count] is the number of occurrences of an occupation in OCCUPATIONS and [occupation] is the lowercase occupation name. If more than one Occupation has the same [occupation_count], they should be ordered alphabetically.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note: There will be at least two entries in the table for each type of occupation.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONCAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'('&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUBSTRING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Occupation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;')'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OCCUPATIONS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONCAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'There are a total of '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Occupation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LOWER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Occupation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OCCUPATIONS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Occupation&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Occupation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Occupation&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;occupations&quot;&gt;Occupations&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Pivot the Occupation column in OCCUPATIONS so that each Name is sorted alphabetically and displayed underneath its corresponding Occupation. The output column headers should be Doctor, Professor, Singer, and Actor, respectively.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note: Print NULL when there are no more names corresponding to an occupation.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prof_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sign_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;act_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doctors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;professors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;actors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;occupation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Doctor'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;occupation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Professor'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prof_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prof_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;occupation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Singer'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sign_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sign_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;occupation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Actor'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;act_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;act_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;occupation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Doctor'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doctors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;occupation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Professor'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;professors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;occupation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Singer'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;occupation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Actor'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actors&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OCCUPATIONS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ranked&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;binary-tree-nodes&quot;&gt;Binary Tree Nodes&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;You are given a table, BST, containing two columns: N and P, where N represents the value of a node in Binary Tree, and P is the parent of N. Write a query to find the node type of Binary Tree ordered by the value of the node. Output one of the following for each node:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Root: If node is root node.
Leaf: If node is leaf node.
Inner: If node is neither root nor leaf node.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Root'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BST&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;P&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Leaf'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Inner'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BST&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;new-companies&quot;&gt;New Companies&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Amber’s conglomerate corporation just acquired some new companies. Each of the companies follows this hierarchy: Founder -&amp;gt; Lead Manager -&amp;gt; Senior Manager -&amp;gt; Manager -&amp;gt; Employee
Given the table schemas below, write a query to print the company_code, founder name, total number of lead managers, total number of senior managers, total number of managers, and total number of employees. Order your output by ascending company_code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note:&lt;/p&gt;

&lt;p&gt;The tables may contain duplicate records.
The company_code is string, so the sorting should not be numeric. For example, if the company_codes are C_1, C_2, and C_10, then the ascending company_codes will be C_1, C_10, and C_2.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;company_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;founder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lead_manager_code&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Lead_Manager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LM&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;company_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;company_code&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;senior_manager_code&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Senior_Manager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sm&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;company_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;company_code&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manager_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Manager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;company_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;company_code&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;employee_code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Employee&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;company_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;company_code&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COMPANY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;C&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;company_code&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;advanced-join&quot;&gt;Advanced join&lt;/h2&gt;

&lt;h4 id=&quot;projects&quot;&gt;Projects&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;You are given a table, Projects, containing three columns: Task_ID, Start_Date and End_Date. It is guaranteed that the difference between the End_Date and the Start_Date is equal to 1 day for each row in the table. If the End_Date of the tasks are consecutive, then they are part of the same project. Samantha is interested in finding the total number of different projects completed.Write a query to output the start and end dates of projects listed by the number of days it took to complete the project in ascending order. If there is more than one project that have the same number of completion days, then order by the start date of the project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Start_Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;End_Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Start_Date&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Projects&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Projects&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;End_Date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Start_Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;End_Date&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Projects&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Projects&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Start_Date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;End_Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Start_Date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;End_Date&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Start_Date&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATEDIFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;End_Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Start_Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Start_Date&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;placements&quot;&gt;Placements&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;You are given three tables: Students, Friends and Packages. Students contains two columns: ID and Name. Friends contains two columns: ID and Friend_ID (ID of the ONLY best friend). Packages contains two columns: ID and Salary (offered salary in $ thousands per month).Write a query to output the names of those students whose best friends got offered a higher salary than them. Names must be ordered by the salary amount offered to the best friends. It is guaranteed that no two students got same salary offer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Students&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Friends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Students&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sf&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Friend_ID&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Packages&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Packages&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Salary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Salary&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Salary&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;symmetric-pairs&quot;&gt;Symmetric Pairs&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;You are given a table, Functions, containing two columns: X and Y. Two pairs (X1, Y1) and (X2, Y2) are said to be symmetric pairs if X1 = Y2 and X2 = Y1.Write a query to output all such symmetric pairs in ascending order by the value of X.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Functions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Y&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;interviews&quot;&gt;Interviews&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Samantha interviews many candidates from different colleges using coding challenges and contests. Write a query to print the contest_id, hacker_id, name, and the sums of total_submissions, total_accepted_submissions, total_views, and total_unique_views for each contest sorted by contest_id. Exclude the contest from the result if all four sums are 0.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note: A specific contest can be used to screen candidates at more than one college, but each college only holds 1 screening contest.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uv&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;contests&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colleges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contest_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asabs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uviews&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uv&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colleges&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;college_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asabs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tuv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uviews&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;challenges&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;challenge_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_submissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_accepted_submissions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tas&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submission_stats&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;challenge_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;challenges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;challenge_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;challenge_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;total_unique_views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tuv&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;view_stats&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;challenge_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vs&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;challenges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;challenge_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;college_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cr&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colleges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;college_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;college_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colleges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contest_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contest_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contest_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contest_id&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;15-days-of-learning-sql&quot;&gt;15 Days of Learning SQL&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Julia conducted a 15 days of learning SQL contest. The start date of the contest was March 01, 2016 and the end date was March 15, 2016.Write a query to print total number of unique hackers who made at least 1 submission each day (starting on the first day of the contest), and find the hacker_id and name of the hacker who made maximum number of submissions each day. If more than one such hacker has a maximum number of submissions, print the lowest hacker_id. The query should print this information for each day of the contest, sorted by the date.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day_rank&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mhid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uc&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day_rank&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;day_rank&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submissions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submissions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submissions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mhid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submission_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submissions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submission_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submissions&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submission_date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hackers&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mhid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hacker_id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;aggregation&quot;&gt;Aggregation&lt;/h2&gt;

&lt;h4 id=&quot;revising-aggregations---the-count-function&quot;&gt;Revising Aggregations - The Count Function&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query a count of the number of cities in CITY having a Population larger than 100 000.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;revising-aggregations---the-sum-function&quot;&gt;Revising Aggregations - The Sum Function&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query the total population of all cities in CITY where District is California.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DISTRICT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'California'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;revising-aggregations---averages&quot;&gt;Revising Aggregations - Averages&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query the average population of all cities in CITY where District is California.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AVG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DISTRICT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'California'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;average-population&quot;&gt;Average Population&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query the average population for all cities in CITY, rounded down to the nearest integer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;AVG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;japan-population&quot;&gt;Japan Population&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query the sum of the populations for all Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;COUNTRYCODE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'JPN'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;population-density-difference&quot;&gt;Population Density Difference&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query the difference between the maximum and minimum populations in CITY.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POPULATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CITY&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;the-blunder&quot;&gt;The Blunder&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Samantha was tasked with calculating the average monthly salaries for all employees in the EMPLOYEES table, but did not realize her keyboard’s  key was broken until after completing the calculation. She wants your help finding the difference between her miscalculation (using salaries with any zeroes removed), and the actual average salary.Write a query calculating the amount of error (i.e.:  average monthly salaries), and round it up to the next integer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CEIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;AVG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Salary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AVG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;REPLACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Salary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UNSIGNED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEES&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;top-earners&quot;&gt;Top Earners&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;We define an employee’s total earnings to be their monthly  worked, and the maximum total earnings to be the maximum total earnings for any employee in the Employee table. Write a query to find the maximum total earnings for all employees as well as the total number of employees who have maximum total earnings. Then print these values as  space-separated integers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SALARY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MONTHS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EMPLOYEE_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Employee&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INC&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INC&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-2&quot;&gt;Weather Observation Station 2&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query the following two values from the STATION table:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The sum of all values in LAT_N rounded to a scale of  decimal places.
The sum of all values in LONG_W rounded to a scale of  decimal places.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LONG_W&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-13&quot;&gt;Weather Observation Station 13&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Query the sum of Northern Latitudes (LAT_N) from STATION having values greater than 38.7880 and less than 137.2345 . Truncate your answer to 4 decimal places.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TRUNCATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BETWEEN&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7880&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;137&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2345&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-14&quot;&gt;Weather Observation Station 14&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Query the greatest value of the Northern Latitudes (LAT_N) from STATION that is less than 137.2345 . Truncate your answer to 4 decimal places.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TRUNCATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;137&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2345&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-15&quot;&gt;Weather Observation Station 15&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query the Western Longitude (LONG_W) for the largest Northern Latitude (LAT_N) in STATION that is less than 137.2345. Round your answer to 4 decimal places.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LONG_W&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;137&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2345&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-16&quot;&gt;Weather Observation Station 16&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Query the smallest Northern Latitude (LAT_N) from STATION that is greater than 38.7780. Round your answer to  decimal 4 places.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7780&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-17&quot;&gt;Weather Observation Station 17&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;p&gt;Query the Western Longitude (LONG_W)where the smallest Northern Latitude (LAT_N) in STATION is greater than 38.7780. Round your answer to 4 decimal places.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LONG_W&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7780&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ASC&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-18&quot;&gt;Weather Observation Station 18&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Consider P1(A,B) and P2(C,D) to be two points on a 2D plane.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;A happens to equal the minimum value in Northern Latitude (LAT_N in STATION).
B happens to equal the minimum value in Western Longitude (LONG_W in STATION).
C happens to equal the maximum value in Northern Latitude (LAT_N in STATION).
D happens to equal the maximum value in Western Longitude (LONG_W in STATION).
Query the Manhattan Distance between points  and  and round it to a scale of  decimal places.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LONG_W&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LONG_W&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ABS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-19&quot;&gt;Weather Observation Station 19&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Consider P1(A,C) and P2(B,D) to be two points on a 2D plane where (A,B) are the respective minimum and maximum values of Northern Latitude (LAT_N) and (C,D) are the respective minimum and maximum values of Western Longitude (LONG_W) in STATION.Query the Euclidean Distance between points  and  and format your answer to display 4 decimal digits.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TRUNCATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SQRT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POWER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POWER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LONG_W&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LONG_W&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;weather-observation-station-20&quot;&gt;Weather Observation Station 20&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;A median is defined as a number separating the higher half of a data set from the lower half. Query the median of the Northern Latitudes (LAT_N) from STATION and round your answer to 4 decimal places.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rownum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rownum&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rownum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LAT_N&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CEIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STATION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;alternative-queries&quot;&gt;Alternative queries&lt;/h2&gt;

&lt;h4 id=&quot;draw-the-triangle-1&quot;&gt;Draw The Triangle 1&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;P(R) represents a pattern drawn by Julia in R rows. The following pattern represents P(5):
    &lt;strong&gt;***
    **&lt;/strong&gt;
    ***
    **
    *
    Write a query to print the pattern P(20).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;DELIMITER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;Begin&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;Declare&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Default&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
      &lt;span class=&quot;n&quot;&gt;While&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DO&lt;/span&gt; 
            &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
      &lt;span class=&quot;k&quot;&gt;End&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;End&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;draw-the-triangle-2&quot;&gt;Draw The Triangle 2&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;P(R) represents a pattern drawn by Julia in R rows. The following pattern represents P(5):
    *
    **
    &lt;strong&gt;*
    **&lt;/strong&gt;
    *****
    Write a query to print the pattern P(20).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;WHILE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;PRINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REPLICATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'* '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
   &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;print-prime-numbers&quot;&gt;Print prime numbers&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Write a query to print all prime numbers less than or equal to 1000. Print your result on a single line, and use the ampersand (&amp;amp;) character as your separator (instead of a space).
For example, the output for all prime numbers  &amp;lt;= 10 would be: 2&amp;amp;3&amp;amp;5&amp;amp;7&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group_concat_max_len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2048&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GROUP_CONCAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nmb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SEPARATOR&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;amp;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nmb&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nmb&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information_schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tables&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">BASIC SELECT</summary></entry><entry><title type="html">Решения</title><link href="https://sd-kin.github.io/instamart-academic-plan/2018/11/11/pgexercises-solutions.html" rel="alternate" type="text/html" title="Решения" /><published>2018-11-11T20:55:21+03:00</published><updated>2018-11-11T20:55:21+03:00</updated><id>https://sd-kin.github.io/instamart-academic-plan/2018/11/11/pgexercises-solutions</id><content type="html" xml:base="https://sd-kin.github.io/instamart-academic-plan/2018/11/11/pgexercises-solutions.html">&lt;h2 id=&quot;simple-sql-queries&quot;&gt;Simple SQL Queries&lt;/h2&gt;

&lt;h4 id=&quot;retrieve-everything-from-a-table&quot;&gt;Retrieve everything from a table&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you retrieve all the information from the cd.facilities table?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;retrieve-specific-columns-from-a-table&quot;&gt;Retrieve specific columns from a table&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;You want to print out a list of all of the facilities and their cost to members. How would you retrieve a list of only facility names and costs?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;control-which-rows-are-retrieved&quot;&gt;Control which rows are retrieved&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you produce a list of facilities that charge a fee to members?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;basic-string-searches&quot;&gt;Basic string searches&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you produce a list of all facilities with the word ‘Tennis’ in their name?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%Tennis%'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;matching-against-multiple-possible-values&quot;&gt;Matching against multiple possible values&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you retrieve the details of facilities with ID 1 and 5? Try to do it without using the OR operator.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;classify-results-into-buckets&quot;&gt;Classify results into buckets&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you produce a list of facilities, with each labelled as ‘cheap’ or ‘expensive’ depending on if their monthly maintenance cost is more than $100? Return the name and monthly maintenance of the facilities in question.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monthlymaintenance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'expensive'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cheap'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;working-with-dates&quot;&gt;Working with dates&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you produce a list of members who joined after the start of September 2012? Return the memid, surname, &lt;strong&gt;firstname, and joindate of the members in question.:&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joindate&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joindate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-09-01'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;removing-duplicates-and-ordering-results&quot;&gt;Removing duplicates, and ordering results&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you produce an ordered list of the first 10 surnames in the members table? The list must not contain duplicates.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;combining-results-from-multiple-queries&quot;&gt;Combining results from multiple queries&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;You, for some reason, want a combined list of all surnames and all facility names. Yes, this is a contrived example :-). Produce that list!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;simple-aggregation&quot;&gt;Simple aggregation&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;You’d like to get the signup date of your last member. How can you retrieve this information?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joindate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;more-aggregation&quot;&gt;More aggregation&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;You’d like to get the first and last name of the last member(s) who signed up - not just the date. How can you do that?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joindate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joindate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;joindate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;joins-and-subqueries&quot;&gt;Joins and Subqueries&lt;/h2&gt;

&lt;h4 id=&quot;retrieve-the-start-times-of-members-bookings&quot;&gt;Retrieve the start times of members’ bookings&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you produce a list of the start times for bookings by members named ‘David Farrell’?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'David'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;'Farrell'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;work-out-the-start-times-of-bookings-for-tennis-courts&quot;&gt;Work out the start times of bookings for tennis courts&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you produce a list of the start times for bookings for tennis courts, for the date ‘2012-09-21’? Return a list of start time and facility name pairings, ordered by the time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-09-21'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Tennis Court%'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;produce-a-list-of-all-members-who-have-recommended-another-member&quot;&gt;Produce a list of all members who have recommended another member&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you output a list of all members who have recommended another member? Ensure that there are no duplicates in the list, and that results are ordered by (surname, firstname).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;produce-a-list-of-all-members-along-with-their-recommender&quot;&gt;Produce a list of all members, along with their recommender&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you output a list of all members, including the individual who recommended them (if any)? Ensure that results are ordered by (surname, firstname).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;LEFT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;produce-a-list-of-all-members-who-have-used-a-tennis-court&quot;&gt;Produce a list of all members who have used a tennis court&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you produce a list of all members who have used a tennis court? Include in your output the name of the court, and the name of the member formatted as a single column. Ensure no duplicate data, and order by the member name.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Tennis Court%'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mname&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;produce-a-list-of-costly-bookings&quot;&gt;Produce a list of costly bookings&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you produce a list of bookings on the day of 2012-09-14 which will cost the member (or guest) more than $30? Remember that guests have different costs to members (the listed costs are per half-hour ‘slot’), and the guest user is always ID 0. Include in your output the name of the facility, the name of the member formatted as a single column, and the cost. Order by descending cost, and do not use any subqueries.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guestcost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-09-14'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;produce-a-list-of-all-members-along-with-their-recommender-using-no-joins&quot;&gt;Produce a list of all members, along with their recommender, using no joins.&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;How can you output a list of all members, including the individual who recommended them (if any), without using any joins? Ensure that there are no duplicates in the list, and that each firstname + surname pairing is formatted as a column and ordered.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mm&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;produce-a-list-of-costly-bookings-using-a-subquery&quot;&gt;Produce a list of costly bookings, using a subquery&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The Produce a list of costly bookings exercise contained some messy logic: we had to calculate the booking cost in both the WHERE clause and the CASE statement. Try to simplify this calculation using subqueries. For reference, thequestion was:
How can you produce a list of bookings on the day of 2012-09-14 which will cost the member (or guest) more than $30? Remember that guests have different costs to members (the listed costs are per half-hour ‘slot’), and the guest user is always ID 0. Include in your output the name of the facility, the name of the member formatted as a single column, and the cost. Order by descending cost.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guestcost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-09-14'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;modifying-data&quot;&gt;Modifying data&lt;/h2&gt;

&lt;h4 id=&quot;insert-some-data-into-a-table&quot;&gt;Insert some data into a table&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The club is adding a new facility - a spa. We need to add it into the facilities table. Use the following values: facid: 9, Name: ‘Spa’, membercost: 20, guestcost: 30, initialoutlay: 100000, monthlymaintenance: 800.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Spa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;insert-multiple-rows-of-data-into-a-table&quot;&gt;Insert multiple rows of data into a table&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;In the previous exercise, you learned how to add a facility. Now you’re going to add multiple facilities in one command. Use the following values: facid: 9, Name: ‘Spa’, membercost: 20, guestcost: 30, initialoutlay: 100000, monthlymaintenance: 800.
facid: 10, Name: ‘Squash Court 2’, membercost: 3.5, guestcost: 17.5, initialoutlay: 5000, monthlymaintenance: 80.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Spa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Squash Court 2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;insert-calculated-data-into-a-table&quot;&gt;Insert calculated data into a table&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Let’s try adding the spa to the facilities table again. This time, though, we want to automatically generate the value for the next facid, rather than specifying it as a constant. Use the following values for everything else: Name: ‘Spa’, membercost: 20, guestcost: 30, initialoutlay: 100000, monthlymaintenance: 800.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Spa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;800&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;update-some-existing-data&quot;&gt;Update some existing data&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;We made a mistake when entering the data for the second tennis court. The initial outlay was 10000 rather than 8000: you need to alter the data to fix the error.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialoutlay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Tennis Court 2'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;update-multiple-rows-and-columns-at-the-same-time&quot;&gt;Update multiple rows and columns at the same time&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;We want to increase the price of the tennis courts for both members and guests. Update the costs to be 6 for members, and 30 for guests.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guestcost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Tennis Court%'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;update-a-row-based-on-the-contents-of-another-row&quot;&gt;Update a row based on the contents of another row&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;We want to alter the price of the second tennis court so that it costs 10% more than the first one. Try to do this without using constant values for the prices, so that we can reuse the statement if we want to.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;guestcost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guestcost&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;delete-all-bookings&quot;&gt;Delete all bookings&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;As part of a clearout of our database, we want to delete all bookings from the cd.bookings table. How can we accomplish this?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;delete-a-member-from-the-cdmembers-table&quot;&gt;Delete a member from the cd.members table&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;We want to remove member 37, who has never made a booking, from our database. How can we achieve that?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;37&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;delete-based-on-a-subquery&quot;&gt;Delete based on a subquery&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;In our previous exercises, we deleted a specific member who had never made a booking. How can we make that more general, to delete all members who have never made a booking?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;aggregation&quot;&gt;Aggregation&lt;/h2&gt;

&lt;h4 id=&quot;count-the-number-of-facilities&quot;&gt;Count the number of facilities&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;For our first foray into aggregates, we’re going to stick to something simple. We want to know how many facilities exist - simply produce a total count.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;count-the-number-of-expensive-facilities&quot;&gt;Count the number of expensive facilities&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a count of the number of facilities that have a cost to guests of 10 or more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guestcost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;count-the-number-of-recommendations-each-member-makes&quot;&gt;Count the number of recommendations each member makes.&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a count of the number of recommendations each member has made. Order by member ID.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;list-the-total-slots-booked-per-facility&quot;&gt;List the total slots booked per facility&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of the total number of slots booked per facility. For now, just produce an output table consisting of facility id and slots, sorted by facility id.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;list-the-total-slots-booked-per-facility-in-a-given-month&quot;&gt;List the total slots booked per facility in a given month&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of the total number of slots booked per facility in the month of September 2012. Produce an output table consisting of facility id and slots, sorted by the number of slots.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-9-01'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-10-01'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;list-the-total-slots-booked-per-facility-per-month&quot;&gt;List the total slots booked per facility per month&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of the total number of slots booked per facility per month in the year of 2012. Produce an output table consisting of facility id and slots, sorted by the id and month.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATE_PART&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;DATE_PART&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'year'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATE_PART&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATE_PART&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;find-the-count-of-members-who-have-made-at-least-one-booking&quot;&gt;Find the count of members who have made at least one booking&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Find the total number of members who have made at least one booking.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;list-facilities-with-more-than-1000-slots-booked&quot;&gt;List facilities with more than 1000 slots booked&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of facilities with more than 1000 slots booked. Produce an output table consisting of facility id and hours, sorted by facility id.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;find-the-total-revenue-of-each-facility&quot;&gt;Find the total revenue of each facility&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of facilities along with their total revenue. The output table should consist of facility name and revenue, sorted by revenue. Remember that there’s a different cost for guests and members!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guestcost&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;find-facilities-with-a-total-revenue-less-than-1000&quot;&gt;Find facilities with a total revenue less than 1000&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of facilities with a total revenue less than 1000. Produce an output table consisting of facility name and revenue, sorted by revenue. Remember that there’s a different cost for guests and members!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guestcost&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;HAVING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;output-the-facility-id-that-has-the-highest-number-of-slots-booked&quot;&gt;Output the facility id that has the highest number of slots booked&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Output the facility id that has the highest number of slots booked. For bonus points, try a version without a LIMIT clause. This version will probably look messy!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sslots&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sm&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sslots&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sslots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;list-the-total-slots-booked-per-facility-per-month-part-2&quot;&gt;List the total slots booked per facility per month, part 2&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of the total number of slots booked per facility per month in the year of 2012. In this version, include output rows containing totals for all months per facility, and a total for all months for all facilities. The output table should consist of facility id, month and slots, sorted by the id and month. When calculating the aggregated values for all months and all facids, return null values in the month and facid columns.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATE_PART&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DATE_PART&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'year'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLLUP&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;list-the-total-hours-booked-per-named-facility&quot;&gt;List the total hours booked per named facility&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of the total number of hours booked per facility, remembering that a slot lasts half an hour. The output table should consist of the facility id, name, and hours booked, sorted by facility id. Try formatting the hours to two decimal places.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;list-each-members-first-booking-after-september-1st-2012&quot;&gt;List each member’s first booking after September 1st 2012&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of each member name, id, and their first booking after September 1st 2012. Order by member ID.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DISTINCT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-09-01'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;produce-a-list-of-member-names-with-each-row-containing-the-total-member-count&quot;&gt;Produce a list of member names, with each row containing the total member count&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of member names, with each row containing the total member count. Order by join date.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joindate&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;produce-a-numbered-list-of-members&quot;&gt;Produce a numbered list of members&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a monotonically increasing numbered list of members, ordered by their date of joining. Remember that member IDs are not guaranteed to be sequential.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROW_NUMBER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joindate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;output-the-facility-id-that-has-the-highest-number-of-slots-booked-again&quot;&gt;Output the facility id that has the highest number of slots booked, again&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Output the facility id that has the highest number of slots booked. Ensure that in the event of a tie, all tieing results get output.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;rank-members-by-rounded-hours-used&quot;&gt;Rank members by (rounded) hours used&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of members, along with the number of hours they’ve booked in facilities, rounded to the nearest ten hours. Rank them by this rounded figure, producing output of first name, surname, rounded hours, rank. Sort by rank, surname, and first name.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hours&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;RANK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;find-the-top-three-revenue-generating-facilities&quot;&gt;Find the top three revenue generating facilities&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of the top three revenue generating facilities (including ties). Output facility name and rank, sorted by rank and facility name.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RANK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guestcost&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;classify-facilities-by-value&quot;&gt;Classify facilities by value&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Classify facilities into equally sized groups of high, average, and low based on their revenue. Order by classification and facility name.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revenues&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rev&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guestcost&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ranked_facilities&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DENSE_RANK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REV&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revenues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;classified_facilities&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ranked_facilities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'high'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'low'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'average'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classified_facilities&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;calculate-the-payback-time-for-each-facility&quot;&gt;Calculate the payback time for each facility&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Based on the 3 complete months of data so far, calculate the amount of time each facility will take to repay its cost of ownership. Remember to take into account ongoing monthly maintenance. Output facility name and payback time in months, order by facility name. Don’t worry about differences in month lengths, we’re only looking for a rough value here!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revenues&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rev&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guestcost&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialoutlay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;AVG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monthlymaintenance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revenues&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;calculate-a-rolling-average-of-total-revenue&quot;&gt;Calculate a rolling average of total revenue&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;For each day in August 2012, calculate a rolling average of total revenue over the previous 15 days. Output should contain date and revenue columns, sorted by the date. Remember to account for the possibility of a day having zero revenue. This one’s a bit tough, so don’t be afraid to check out the hint!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revenues&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rev&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guestcost&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;membercost&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;avg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;between&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PRECEDING&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CURRENT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revenues&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-08-01'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-09-01'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;working-with-timestamps&quot;&gt;Working with Timestamps&lt;/h2&gt;

&lt;h4 id=&quot;produce-a-timestamp-for-1-am-on-the-31st-of-august-2012&quot;&gt;Produce a timestamp for 1 a.m. on the 31st of August 2012&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a timestamp for 1 a.m. on the 31st of August 2012.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2012-08-31 01:00:00'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;subtract-timestamps-from-each-other&quot;&gt;Subtract timestamps from each other&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Find the result of subtracting the timestamp ‘2012-07-30 01:00:00’ from the timestamp ‘2012-08-31 01:00:00’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-08-31 01:00:00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-07-30 01:00:00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;timestamp&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;generate-a-list-of-all-the-dates-in-october-2012&quot;&gt;Generate a list of all the dates in October 2012&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a list of all the dates in October 2012. They can be output as a timestamp (with time set to midnight) or a date.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GENERATE_SERIES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2012-10-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-10-31'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1 day'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;timestamp&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;get-the-day-of-the-month-from-a-timestamp&quot;&gt;Get the day of the month from a timestamp&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Get the day of the month from the timestamp ‘2012-08-31’ as an integer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXTRACT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'day'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;'2012-08-31'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;work-out-the-number-of-seconds-between-timestamps&quot;&gt;Work out the number of seconds between timestamps&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Work out the number of seconds between the timestamps ‘2012-08-31 01:00:00’ and ‘2012-09-02 00:00:00’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'epoch'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2012-09-02 00:00:00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;timestamp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2012-08-31 01:00:00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;work-out-the-number-of-days-in-each-month-of-2012&quot;&gt;Work out the number of days in each month of 2012&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;For each month of the year in 2012, output the number of days in that month. Format the output as an integer column containing the month of the year, and a second column containing an interval data type.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;months&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GENERATE_SERIES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2012-01-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2013-01-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1 month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lead&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVER&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' days'&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;months&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;work-out-the-number-of-days-remaining-in-the-month&quot;&gt;Work out the number of days remaining in the month&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;For any given timestamp, work out the number of days remaining in the month. The current day should count as a whole day, regardless of the time. Use ‘2012-02-11 01:00:00’ as an example timestamp for the purposes of making the answer. Format the output as a single interval value.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_trunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;'2012-02-11 01:00:00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1 month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_trunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'day'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;'2012-02-11 01:00:00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;work-out-the-end-time-of-bookings&quot;&gt;Work out the end time of bookings&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Return a list of the start and end time of the last 10 bookings (ordered by the time at which they end, followed by the time at which they start) in the system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0.5 hour'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endtime&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endtime&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;return-a-count-of-bookings-for-each-month&quot;&gt;Return a count of bookings for each month&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Return a count of bookings for each month, sorted by month&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_trunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;work-out-the-utilisation-percentage-for-each-facility-by-month&quot;&gt;Work out the utilisation percentage for each facility by month&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Work out the utilisation percentage for each facility by month, sorted by name and month, rounded to 1 decimal place. Opening time is 8am, closing time is 8.30pm. You can treat every month as a full month, regardless of if there were some dates the club was not open.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'epoch'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1 month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GENERATE_SERIES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'2012-01-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2013-01-01'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1 month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sslots&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date_trunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'month'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;starttime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sslots&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facid&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmonth&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calendar&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bmonth&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmonth&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;string-operations&quot;&gt;String Operations&lt;/h2&gt;

&lt;h4 id=&quot;format-the-names-of-members&quot;&gt;Format the names of members&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Output the names of all members, formatted as ‘Surname, Firstname’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONCAT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;', '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;find-facilities-by-a-name-prefix&quot;&gt;Find facilities by a name prefix&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Find all facilities whose name begins with ‘Tennis’. Retrieve all columns.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Tennis%'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;perform-a-case-insensitive-search&quot;&gt;Perform a case-insensitive search&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Perform a case-insensitive search to find all facilities whose name begins with ‘tennis’. Retrieve all columns.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;facilities&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LOWER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tennis%'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;find-telephone-numbers-with-parentheses&quot;&gt;Find telephone numbers with parentheses&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;You’ve noticed that the club’s member table has telephone numbers with very inconsistent formatting. You’d like to find all the telephone numbers that contain parentheses, returning the member ID and telephone number sorted by member ID.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;telephone&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;telephone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'^&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;pad-zip-codes-with-leading-zeroes&quot;&gt;Pad zip codes with leading zeroes&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The zip codes in our example dataset have had leading zeroes removed from them by virtue of being stored as a numeric type. Retrieve all zip codes from the members table, padding any zip codes less than 5 characters long with leading zeroes. Order by the new zip code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LPAD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zipcode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;count-the-number-of-members-whose-surname-starts-with-each-letter-of-the-alphabet&quot;&gt;Count the number of members whose surname starts with each letter of the alphabet&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;You’d like to produce a count of how many members you have whose surname starts with each letter of the alphabet. Sort by the letter, and don’t worry about printing out a letter if the count is 0.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;clean-up-telephone-numbers&quot;&gt;Clean up telephone numbers&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The telephone numbers in the database are very inconsistently formatted. You’d like to print a list of member ids and numbers that have had ‘-‘,’(‘,’)’, and ‘ ‘ characters removed. Order by member id.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REGEXP_REPLACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;telephone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'[-, &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\)&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;recursive-queries&quot;&gt;Recursive Queries&lt;/h2&gt;

&lt;h4 id=&quot;find-the-upward-recommendation-chain-for-member-id-27&quot;&gt;Find the upward recommendation chain for member ID 27&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Find the upward recommendation chain for member ID 27: that is, the member who recommended them, and the member who recommended that member, and so on. Return member ID, first name, and surname. Order by descending member id.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RECURSIVE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommender&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;find-the-downward-recommendation-chain-for-member-id-1&quot;&gt;Find the downward recommendation chain for member ID 1&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Find the downward recommendation chain for member ID 1: that is, the members they recommended, the members those members recommended, and so on. Return member ID and name, and order by ascending member id.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RECURSIVE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommendations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ARRAY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommendations&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ANY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommendations&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;produce-a-cte-that-can-return-the-upward-recommendation-chain-for-any-member&quot;&gt;Produce a CTE that can return the upward recommendation chain for any member&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Question:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Produce a CTE that can return the upward recommendation chain for any member. You should be able to select recommender from recommenders where member=x. Demonstrate it by getting the chains for members 12 and 22. Results table should have member and recommender, ordered by member ascending, recommender descending.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RECURSIVE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommenders&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recommendedby&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommenders&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;surname&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recommenders&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;members&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;memid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DESC&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html">Simple SQL Queries</summary></entry><entry><title type="html">Тезисы</title><link href="https://sd-kin.github.io/instamart-academic-plan/2018/11/11/mollinaro-coockbook.html" rel="alternate" type="text/html" title="Тезисы" /><published>2018-11-11T20:55:21+03:00</published><updated>2018-11-11T20:55:21+03:00</updated><id>https://sd-kin.github.io/instamart-academic-plan/2018/11/11/mollinaro-coockbook</id><content type="html" xml:base="https://sd-kin.github.io/instamart-academic-plan/2018/11/11/mollinaro-coockbook.html">&lt;h2 id=&quot;mollinaro---sql-cookbook-notes&quot;&gt;Mollinaro - SQL Cookbook notes&lt;/h2&gt;

&lt;h3 id=&quot;группировка&quot;&gt;Группировка&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Способ организации подобных строк. Каждая строка результирующего множества представляет одну или более строк с одинаковыми значениями в одном или более заданных полях.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;В математике основным определением группы является тройка (G, •, e), где G – множество, • – бинарная операция над G, и e – член G. (бинарная операция — математическая операция, принимающая два аргумента и возвращающая один результат)&lt;/p&gt;

&lt;p&gt;SQL группа определяется как пара (G, e), где G – результирующее множество самостоятельного или самодостаточного запроса, в котором используется оператор GROUP BY, e – член G, и выполняются
  следующие аксиомы:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Для каждого e в G e является уникальным и представляет один или более экземпляров e.&lt;/li&gt;
  &lt;li&gt;Для каждого e в G агрегатная функция COUNT возвращает значение &amp;gt; 0.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(е можно считать строкой результирующего множества, поскольку фактически эти строки представляют собой группы)&lt;/p&gt;

&lt;p&gt;Следствия:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Группы не могут быть пустыми
* Группы уникальны
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;оконные-функции&quot;&gt;Оконные функции&lt;/h3&gt;

&lt;p&gt;выполняют агрегацию заданного набора (группы) строк, но вместо того чтобы возвращать по одному значению на группу могут возвращать несколько значений для каждой группы. Группа строк, подвергающаяся агрегации называется “окно”&lt;/p&gt;

&lt;p&gt;оконные функции выполняются как последний шаг в обработке SQL перед оператором &lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Для определения сегмента или группы строк, подвергающихся агрегации, используется оператор &lt;code class=&quot;highlighter-rouge&quot;&gt;PARTITION BY&lt;/code&gt;. Оператор &lt;code class=&quot;highlighter-rouge&quot;&gt;PARTITION BY&lt;/code&gt; можно рассматривать как «скользящий&lt;code class=&quot;highlighter-rouge&quot;&gt; GROUP BY&lt;/code&gt;», потому что в отличие от обычного &lt;code class=&quot;highlighter-rouge&quot;&gt;GROUP BY&lt;/code&gt; группы, создаваемые &lt;code class=&quot;highlighter-rouge&quot;&gt;PARTITION BY&lt;/code&gt;, в результирующем множестве не являются уникальными. &lt;code class=&quot;highlighter-rouge&quot;&gt;PARTITION BY&lt;/code&gt; может использоваться для вычисления агрегата заданной группы строк (отсчет начинается заново для каждой новой группы), и тогда будут представлены все экземпляры этого значения в таблице (все члены каждой группы), а не одна группа.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;    select ename, deptno, count(*) over(partition by deptno) as cnt
    from emp
    order by 2
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ENAME&lt;/th&gt;
      &lt;th&gt;DEPTNO&lt;/th&gt;
      &lt;th&gt;CNT&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;CLARK&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;KING&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SMITH&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;FORD&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SCOTT&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ALLEN&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BLAKE&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;JAMES&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TURNER&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;аналогичный результат можноа получить без оконных функций с помощью&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;    select e.ename,
           e.deptno,
           (select count(*) from emp d where e.deptno=d.deptno) as cnt
    from emp e
    order by 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Оператор &lt;code class=&quot;highlighter-rouge&quot;&gt;PARTITION BY&lt;/code&gt; выполняет вычисления независимо от других оконных функций, осуществляя сегментирование по другим столбцам в том же выражении &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;    select ename,
           deptno,
           count(*) over(partition by deptno) as dept_cnt,
           job,
           count(*) over(partition by job) as job_cnt
    from emp
    order by 2
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ENAME&lt;/th&gt;
      &lt;th&gt;DEPTNO&lt;/th&gt;
      &lt;th&gt;DEPT_CNT&lt;/th&gt;
      &lt;th&gt;JOB&lt;/th&gt;
      &lt;th&gt;JOB_CNT&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;MILLER&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;CLERK&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CLARK&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;MANAGER&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;KING&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;PRESIDENT&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SCOTT&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;ANALYST&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;FORD&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;ANALYST&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SMITH&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;CLERK&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;JONES&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;MANAGER&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ADAMS&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;CLERK&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;JAMES&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;CLERK&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MARTIN&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;SALESMAN&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TURNER&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;SALESMAN&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;WARD&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;SALESMAN&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ALLEN&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;SALESMAN&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BLAKE&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;MANAGER&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Оператор &lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt;, используемый в операторе &lt;code class=&quot;highlighter-rouge&quot;&gt;OVER&lt;/code&gt; оконной функции, определяет две вещи:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. Как упорядочены строки в сегменте.
2. Какие строки участвуют в вычислениях.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;    select deptno,
           ename,
           hiredate,
           sal,
           sum(sal)over(order by hiredate) as running_total
    from emp
    where deptno=10
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;DEPTNO&lt;/th&gt;
      &lt;th&gt;ENAME&lt;/th&gt;
      &lt;th&gt;HIREDATE&lt;/th&gt;
      &lt;th&gt;SAL&lt;/th&gt;
      &lt;th&gt;RUNNING_TOTAL&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;CLARK&lt;/td&gt;
      &lt;td&gt;09JUN1981&lt;/td&gt;
      &lt;td&gt;2450&lt;/td&gt;
      &lt;td&gt;2450&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;KING&lt;/td&gt;
      &lt;td&gt;17NOV1981&lt;/td&gt;
      &lt;td&gt;5000&lt;/td&gt;
      &lt;td&gt;7450&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;MILLER&lt;/td&gt;
      &lt;td&gt;23JAN1982&lt;/td&gt;
      &lt;td&gt;1300&lt;/td&gt;
      &lt;td&gt;8750&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;считается сумма от начала окна до текущей строки&lt;/p&gt;

&lt;p&gt;Следующий запрос аналогичен предыдущему, но в нем поведение по умолчанию, являющееся результатом применения &lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY HIRE DATE&lt;/code&gt;, явно задается оператором &lt;code class=&quot;highlighter-rouge&quot;&gt;RANGE BETWEEN&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;    select deptno,
           ename,
           hiredate,
           sal,
           sum(sal)over(order by hiredate range between unbounded preceding and current row) as running_total
    from emp
    where deptno=10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Оператор &lt;code class=&quot;highlighter-rouge&quot;&gt;RANGE BETWEEN&lt;/code&gt; ANSI называет оператором кадрирования&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt; определяет порядок вычисления и также подразумевает кадрирование по умолчанию&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;    select deptno,
           ename,
           sal,
           sum(sal)over(order by hiredate range between unbounded preceding and current row) as run_total1,
           sum(sal)over(order by hiredate rows between 1 preceding and current row) as run_total2,
           sum(sal)over(order by hiredate range between current row and unbounded following) as run_total3,
           sum(sal)over(order by hiredate rows between current row and 1 following) as run_total4
    from emp
    where deptno=10
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;DEPTNO&lt;/th&gt;
      &lt;th&gt;ENAME&lt;/th&gt;
      &lt;th&gt;SAL&lt;/th&gt;
      &lt;th&gt;RUN_TOTAL1&lt;/th&gt;
      &lt;th&gt;RUN_TOTAL2&lt;/th&gt;
      &lt;th&gt;RUN_TOTAL3&lt;/th&gt;
      &lt;th&gt;RUN_TOTAL4&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;CLARK&lt;/td&gt;
      &lt;td&gt;2450&lt;/td&gt;
      &lt;td&gt;2450&lt;/td&gt;
      &lt;td&gt;2450&lt;/td&gt;
      &lt;td&gt;8750&lt;/td&gt;
      &lt;td&gt;7450&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;KING&lt;/td&gt;
      &lt;td&gt;5000&lt;/td&gt;
      &lt;td&gt;7450&lt;/td&gt;
      &lt;td&gt;7450&lt;/td&gt;
      &lt;td&gt;6300&lt;/td&gt;
      &lt;td&gt;6300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;MILLER&lt;/td&gt;
      &lt;td&gt;1300&lt;/td&gt;
      &lt;td&gt;8750&lt;/td&gt;
      &lt;td&gt;6300&lt;/td&gt;
      &lt;td&gt;1300&lt;/td&gt;
      &lt;td&gt;1300&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;RUN_TOTAL2&lt;/strong&gt; - Вместо ключевого слова &lt;code class=&quot;highlighter-rouge&quot;&gt;RANGE&lt;/code&gt; в данном операторе кадрирования используется &lt;code class=&quot;highlighter-rouge&quot;&gt;ROWS&lt;/code&gt;; это означает, что кадр, или окно, будет создано из некоторого количества строк. &lt;code class=&quot;highlighter-rouge&quot;&gt;1 PRECEDING&lt;/code&gt; говорит о том, что кадр будет начинаться со строки, стоящей непосредственно перед текущей строкой. Диапазон распространяется до &lt;code class=&quot;highlighter-rouge&quot;&gt;CURRENT ROW&lt;/code&gt;. Таким образом, &lt;strong&gt;RUN_TOTAL2&lt;/strong&gt; – это сумма заработных плат текущего и предыдущего, на основании &lt;code class=&quot;highlighter-rouge&quot;&gt;HIREDATE&lt;/code&gt;, сотрудников.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RUN_TOTAL3&lt;/strong&gt; - Оконная функция для вычисления &lt;strong&gt;RUN_TOTAL3&lt;/strong&gt; выполняет обратное тому, что делалось для &lt;strong&gt;RUN_TOTAL1&lt;/strong&gt;. Суммирование начинается с текущей строки и включает не все предыдущие строки, а все последующие строки.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RUN_TOTAL4&lt;/strong&gt; - Инверсия &lt;strong&gt;RUN_TOTAL2&lt;/strong&gt;. Суммирование начинается с текущей строки и включает не одну предыдущую, а одну следующую строку.&lt;/p&gt;

&lt;h3 id=&quot;1-извлечение-записей-стр-33&quot;&gt;1 Извлечение записей (стр. 33)&lt;/h3&gt;

&lt;h4 id=&quot;извлечение-всех-строк-и-столбцов-из-таблицы&quot;&gt;Извлечение всех строк и столбцов из таблицы&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select * from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;извлечение-подмножества-строк-из-таблицы-стр-34&quot;&gt;Извлечение подмножества строк из таблицы (стр. 34)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select * from emp where deptno = 10
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;выбор-строк-по-нескольким-условиям-стр-34&quot;&gt;Выбор строк по нескольким условиям (стр. 34)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select * from emp where deptno = 10 or comm is not null or sal &amp;lt;= 2000 and deptno = 20
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;извлечение-подмножества-столбцов-из-таблицы-стр-35&quot;&gt;Извлечение подмножества столбцов из таблицы (стр. 35)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename, deptno, sal from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;как-задать-столбцам-значимые-имена-стр-36&quot;&gt;Как задать столбцам значимые имена (стр. 36)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select sal as salary, comm as commission from emp 
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;SALARY&lt;/th&gt;
      &lt;th&gt;COMMISSION&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;800&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1600&lt;/td&gt;
      &lt;td&gt;300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1250&lt;/td&gt;
      &lt;td&gt;500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2975&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1250&lt;/td&gt;
      &lt;td&gt;1300&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2850&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2450&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3000&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5000&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1500&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1100&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;950&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3000&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1300&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;обращение-к-столбцу-в-предикате-where-по-псевдониму-стр-37&quot;&gt;Обращение к столбцу в предикате WHERE по псевдониму (стр. 37)&lt;/h4&gt;

&lt;p&gt;Чтобы обратиться к столбцу по псевдониму, необходимо использовать вложенный запрос:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select *
  from (
    select sal as salary, comm as commission
    from emp
  ) x
  where salary &amp;lt; 5000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Предикат &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; обрабатывается раньше оператора &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;, оператор &lt;code class=&quot;highlighter-rouge&quot;&gt;FROM&lt;/code&gt; выполняется до предиката &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;. Размещение исходного запроса в операторе &lt;code class=&quot;highlighter-rouge&quot;&gt;FROM&lt;/code&gt; обеспечивает формирование его результатов до обработки самого внешнего &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;конкатенация-значений-столбцов-стр-38&quot;&gt;Конкатенация значений столбцов (стр. 38)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select concat(ename, ' WORKS AS A ',job) as msg
  from
  where deptno=10
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;использование-условной-логики-в-выражении-select-стр-39&quot;&gt;Использование условной логики в выражении SELECT (стр. 39)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename,
         sal,
         case 
           when sal &amp;lt;= 2000 then 'UNDERPAID'
           when sal &amp;gt;= 4000 then 'OVERPAID'
           else 'OK'
         end as status
  from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;ограничение-числа-возвращаемых-строк-стр-40&quot;&gt;Ограничение числа возвращаемых строк (стр. 40)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select * from emp limit 5
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;возвращение-n-случайных-записей-таблицы-стр-42&quot;&gt;Возвращение n случайных записей таблицы (стр. 42)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename,job
  from emp
  order by rand()
  limit 5
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;поиск-значений-null-стр-44&quot;&gt;Поиск значений NULL (стр. 44)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select * from emp where comm is null
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;преобразование-значений-null-в-неnull-значения-стр-44&quot;&gt;Преобразование значений NULL в неNULL значения (стр. 44)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select coalesce(comm,0) from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Функция COALESCE принимает в качестве аргументов одно или более значений. Функция возвращает первое не NULL значение из списка.&lt;/p&gt;

&lt;h4 id=&quot;поиск-по-шаблону-стр-45&quot;&gt;Поиск по шаблону (стр. 45)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename, job
  from emp
  where deptno in (10,20)
  and (ename like '%I%' or job like '%ER')
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;2-сортировка-результатов-запроса-стр-47&quot;&gt;2 Сортировка результатов запроса (стр. 47)&lt;/h3&gt;

&lt;h4 id=&quot;возвращение-результатов-запроса-в-заданном-порядке&quot;&gt;Возвращение результатов запроса в заданном порядке&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename,job,sal
  from emp
  where deptno = 10
  order by sal asc
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;сортировка-по-нескольким-полям-стр-48&quot;&gt;Сортировка по нескольким полям (стр. 48)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select empno,deptno,sal,ename,job
  from emp
  order by deptno, sal desc
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;сортировка-по-подстрокам-стр-49&quot;&gt;Сортировка по подстрокам (стр. 49)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename,job
  from emp
   order by substr(job,length(job)-2,2)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;сортировка-смешанных-буквенноцифровых-данных-стр-50&quot;&gt;Сортировка смешанных буквенноцифровых данных (стр. 50)&lt;/h4&gt;

&lt;p&gt;Требуется сортировать смешанные буквенно-цифровые данные по числовой или символьной части.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;DATA&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SMITH 20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ALLEN 30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;WARD 30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;JONES 20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MARTIN 30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BLAKE 30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CLARK 10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SCOTT 20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;KING 10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TURNER 30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ADAMS 20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;JAMES 30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;FORD 20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MILLER 10&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Oracle и PostgreSQL&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  /* СОРТИРУЕМ ПО DEPTNO */
  select data
  from V
  order by replace(data, /* убираем строковую часть, остаётся только номер */
    replace( /* убираем все #, остаётся строковая часть */
      translate( /* замена цифр на # */
        data,'0123456789','##########'),
        '#',
        ''
      ),
    '')
  
  /* СОРТИРУЕМ ПО ENAME */
  select data
  from emp
  order by replace(translate(data,'0123456789','##########'),'#','')
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;MySQL и SQL Server&lt;/p&gt;

&lt;p&gt;В настоящее время данные платформы не поддерживают функцию
TRANSLATE, таким образом, решения для этой задачи нет.&lt;/p&gt;

&lt;h4 id=&quot;обработка-значений-null-при-сортировке-стр-53&quot;&gt;Обработка значений NULL при сортировке (стр. 53)&lt;/h4&gt;

&lt;p&gt;В зависимости от того, как должны быть представлены данные (и как конкретная СУБД сортирует значения &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;), столбцы, допускающие неопределенные значения, можно сортировать по возврастанию или по убыванию:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename,sal,comm
  from emp
  order by 3

  select ename,sal,comm
  from emp
  order by 3 desc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Если необходимо сортировать неопределенные значения иначе, чем определенные, например расположить определенные значения по убыванию или возрастанию, а все значения &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; вывести поcле&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename,sal,comm
  from (
    select ename,sal,comm,
    case when comm is null then 0 else 1 end as is null
    from emp
  ) x
  order by is_null desc, comm
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;сортировка-по-зависящему-от-данных-ключу-стр-60&quot;&gt;Сортировка по зависящему от данных ключу (стр. 60)&lt;/h4&gt;

&lt;p&gt;если значение JOB – «SALESMAN», сортировка должна осуществляться по столбцу COMM; в противном случае сортируем по SAL.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename,sal,job,comm
  from emp
  order by case when job = 'SALESMAN' then comm else sal end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;3-работа-с-несколькими-таблицами-стр-62&quot;&gt;3 Работа с несколькими таблицами (стр. 62)&lt;/h3&gt;

&lt;h4 id=&quot;размещение-одного-набора-строк-под-другим-стр-62&quot;&gt;Размещение одного набора строк под другим (стр. 62)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename as ename_and_dname, deptno
  from emp
  where deptno = 10
  
  union all
  
  select '-----------', null from t1
  
  union all
  select dname, deptno
  from dept
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ENAME_AND_DNAME&lt;/th&gt;
      &lt;th&gt;DEPTNO&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;CLARK&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;KING&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MILLER&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;ACCOUNTING&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RESEARCH&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SALES&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OPERATIONS&lt;/td&gt;
      &lt;td&gt;40&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;объединение-взаимосвязанных-строк-стр-64&quot;&gt;Объединение взаимосвязанных строк (стр. 64)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select e.ename, d.loc
  from emp e, dept d
  where e.deptno = d.deptno
  and e.deptno = 10
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select e.ename, d.loc
  from emp e
    inner join dept d on (e.deptno = d.deptno)
  where e.deptno = 10
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;Объединение – это операция, в результате которой строки двух таблиц соединяются в одну.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Эквиобъединение – это объединение, в котором условием объединения является равенство&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;поиск-одинаковых-строк-в-двух-таблицах-стр-66&quot;&gt;Поиск одинаковых строк в двух таблицах (стр. 66)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select * from V
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ENAME&lt;/th&gt;
      &lt;th&gt;JOB&lt;/th&gt;
      &lt;th&gt;SAL&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SMITH&lt;/td&gt;
      &lt;td&gt;CLERK&lt;/td&gt;
      &lt;td&gt;800&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ADAMS&lt;/td&gt;
      &lt;td&gt;CLERK&lt;/td&gt;
      &lt;td&gt;1100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;JAMES&lt;/td&gt;
      &lt;td&gt;CLERK&lt;/td&gt;
      &lt;td&gt;950&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MILLER&lt;/td&gt;
      &lt;td&gt;CLERK&lt;/td&gt;
      &lt;td&gt;1300&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select e.empno,e.ename,e.job,e.sal,e.deptno
  from emp e, V
  where e.ename = v.ename
    and e.job = v.job
    and e.sal = v.sal
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select e.empno,e.ename,e.job,e.sal,e.deptno
  from emp e join V
    on ( e.ename = v.ename
      and e.job = v.job
      and e.sal = v.sal )
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;db2-oracle-и-postgresql&quot;&gt;DB2, Oracle и PostgreSQL&lt;/h5&gt;

&lt;p&gt;Если нет необходимости возвращать столбцы представления V, можно использовать операцию над множествами INTERSECT в сочетании с предикатом IN:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select empno,ename,job,sal,deptno
  from emp
  where (ename,job,sal) in (
    select ename,job,sal from emp
    intersect
    select ename,job,sal from V
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;извлечение-из-одной-таблицы-значений-которых-нет-в-другой-таблице-стр-68&quot;&gt;Извлечение из одной таблицы значений, которых нет в другой таблице (стр. 68)&lt;/h4&gt;

&lt;h5 id=&quot;db2-and-postgresql&quot;&gt;DB2 and PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select deptno from dept
  except
  select deptno from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;oracle&quot;&gt;Oracle&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select deptno from dept
  minus
  select deptno from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;mysql-и-sql-server&quot;&gt;MySQL и SQL Server&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select deptno
  from dept
  where deptno not in (select deptno from emp)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;При использовании оператора &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT IN&lt;/code&gt; не забывайте о значениях &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;. По сути, &lt;code class=&quot;highlighter-rouge&quot;&gt;IN&lt;/code&gt; и &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT IN&lt;/code&gt; – операции логического ИЛИ. Формируемый ими результат зависит от того, как интерпретируются значения &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; при вычислении логического ИЛИ. В SQL выражению «&lt;code class=&quot;highlighter-rouge&quot;&gt;TRUE or NULL&lt;/code&gt;» соответствует &lt;code class=&quot;highlighter-rouge&quot;&gt;TRUE&lt;/code&gt;, а «&lt;code class=&quot;highlighter-rouge&quot;&gt;FALSE or NULL&lt;/code&gt;» – &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;! Полученный результат &lt;code class=&quot;highlighter-rouge&quot;&gt;NUL&lt;/code&gt;L обеспечит &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; при последующих вычислениях. Во избежание проблем с &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT IN&lt;/code&gt; и значениями &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; применяются связанные подзапросы в сочетании с предикатом &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT EXISTS&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select d.deptno
  from dept d
  where not exists ( 
    select null
    from emp e
    where d.deptno = e.deptno )
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;извлечение-из-таблицы-строк-для-которых-нет-соответствия-в-другой-таблице-стр-72&quot;&gt;Извлечение из таблицы строк, для которых нет соответствия в другой таблице (стр. 72)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;select d.*
from dept d
  left outer join emp e on (d.deptno = e.deptno)
where e.deptno is null
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;независимое-добавление-объединений-в-запрос-стр-74&quot;&gt;Независимое добавление объединений в запрос (стр. 74)&lt;/h4&gt;

&lt;p&gt;Для получения дополнительной информации без утраты данных, возвращенных в результате исходного запроса, можно использовать внешнее объединение.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select e.ename, d.loc, eb.received
  from emp e 
    join dept d on (e.deptno=d.deptno)
    left join emp_bonus eb on (e.empno=eb.empno)
  order by 2
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;выявление-одинаковых-данных-в-двух-таблицах-стр-76&quot;&gt;Выявление одинаковых данных в двух таблицах (стр. 76)&lt;/h4&gt;

&lt;p&gt;Функции, осуществляющие вычитание множеств (&lt;code class=&quot;highlighter-rouge&quot;&gt;MINUS&lt;/code&gt; или &lt;code class=&quot;highlighter-rouge&quot;&gt;EXCEPT&lt;/code&gt;, в зависимости от СУБД), существенно упрощают задачу по сравнению таблиц. Если ваша СУБД не поддерживает таких функций, можно использовать связанный подзапрос.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select * from V
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;EMPNO&lt;/th&gt;
      &lt;th&gt;ENAME&lt;/th&gt;
      &lt;th&gt;JOB&lt;/th&gt;
      &lt;th&gt;MGR&lt;/th&gt;
      &lt;th&gt;HIREDATE&lt;/th&gt;
      &lt;th&gt;SAL&lt;/th&gt;
      &lt;th&gt;COMM&lt;/th&gt;
      &lt;th&gt;DEPTNO&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;7369&lt;/td&gt;
      &lt;td&gt;SMITH&lt;/td&gt;
      &lt;td&gt;CLERK&lt;/td&gt;
      &lt;td&gt;7902&lt;/td&gt;
      &lt;td&gt;17DEC1980&lt;/td&gt;
      &lt;td&gt;800&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7499&lt;/td&gt;
      &lt;td&gt;ALLEN&lt;/td&gt;
      &lt;td&gt;SALESMAN&lt;/td&gt;
      &lt;td&gt;7698&lt;/td&gt;
      &lt;td&gt;20FEB1981&lt;/td&gt;
      &lt;td&gt;1600&lt;/td&gt;
      &lt;td&gt;300&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7521&lt;/td&gt;
      &lt;td&gt;WARD&lt;/td&gt;
      &lt;td&gt;SALESMAN&lt;/td&gt;
      &lt;td&gt;7698&lt;/td&gt;
      &lt;td&gt;22FEB1981&lt;/td&gt;
      &lt;td&gt;1250&lt;/td&gt;
      &lt;td&gt;500&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7566&lt;/td&gt;
      &lt;td&gt;JONES&lt;/td&gt;
      &lt;td&gt;MANAGER&lt;/td&gt;
      &lt;td&gt;7839&lt;/td&gt;
      &lt;td&gt;02APR1981&lt;/td&gt;
      &lt;td&gt;2975&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7654&lt;/td&gt;
      &lt;td&gt;MARTIN&lt;/td&gt;
      &lt;td&gt;SALESMAN&lt;/td&gt;
      &lt;td&gt;7698&lt;/td&gt;
      &lt;td&gt;28SEP1981&lt;/td&gt;
      &lt;td&gt;1250&lt;/td&gt;
      &lt;td&gt;1400&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7698&lt;/td&gt;
      &lt;td&gt;BLAKE&lt;/td&gt;
      &lt;td&gt;MANAGER&lt;/td&gt;
      &lt;td&gt;7839&lt;/td&gt;
      &lt;td&gt;01MAY1981&lt;/td&gt;
      &lt;td&gt;2850&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7788&lt;/td&gt;
      &lt;td&gt;SCOTT&lt;/td&gt;
      &lt;td&gt;ANALYST&lt;/td&gt;
      &lt;td&gt;7566&lt;/td&gt;
      &lt;td&gt;09DEC1982&lt;/td&gt;
      &lt;td&gt;3000&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7844&lt;/td&gt;
      &lt;td&gt;TURNER&lt;/td&gt;
      &lt;td&gt;SALESMAN&lt;/td&gt;
      &lt;td&gt;7698&lt;/td&gt;
      &lt;td&gt;08SEP1981&lt;/td&gt;
      &lt;td&gt;1500&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7876&lt;/td&gt;
      &lt;td&gt;ADAMS&lt;/td&gt;
      &lt;td&gt;CLERK&lt;/td&gt;
      &lt;td&gt;7788&lt;/td&gt;
      &lt;td&gt;12JAN1983&lt;/td&gt;
      &lt;td&gt;1100&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7900&lt;/td&gt;
      &lt;td&gt;JAMES&lt;/td&gt;
      &lt;td&gt;CLERK&lt;/td&gt;
      &lt;td&gt;7698&lt;/td&gt;
      &lt;td&gt;03DEC1981&lt;/td&gt;
      &lt;td&gt;950&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7902&lt;/td&gt;
      &lt;td&gt;FORD&lt;/td&gt;
      &lt;td&gt;ANALYST&lt;/td&gt;
      &lt;td&gt;7566&lt;/td&gt;
      &lt;td&gt;03DEC1981&lt;/td&gt;
      &lt;td&gt;3000&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7521&lt;/td&gt;
      &lt;td&gt;WARD&lt;/td&gt;
      &lt;td&gt;SALESMAN&lt;/td&gt;
      &lt;td&gt;7698&lt;/td&gt;
      &lt;td&gt;22FEB1981&lt;/td&gt;
      &lt;td&gt;1250&lt;/td&gt;
      &lt;td&gt;500&lt;/td&gt;
      &lt;td&gt;30&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Требуется выяснить, имеются ли в этом представлении такие же данные, как и в таблице EMP.&lt;/p&gt;

&lt;h5 id=&quot;db2-и-postgresql&quot;&gt;DB2 и PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  (
    select empno, ename , job, mgr, hiredate, sal, comm, deptno, count(*) as cnt
    from V
    group by empno, ename, job, mgr, hiredate, sal, comm, deptno
    
    except
    
    select empno, ename, job, mgr, hiredate, sal, comm, deptno, count(*) as cnt
    from emp
    group by empno, ename, job, mgr, hiredate, sal, comm, deptno
  )
     
  union all
     
  (
    select empno, ename, job, mgr, hiredate, sal, comm, deptno, count(*) as cnt
    from emp
    group by empno, ename, job, mgr, hiredate, sal, comm, deptno
    
    except
    
    select empno, ename, job, mgr, hiredate, sal, comm, deptno, count(*) as cnt
    from v
    group by empno, ename, job, mgr, hiredate, sal, comm, deptno
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;mysql-и-sql-server-1&quot;&gt;MySQL и SQL Server&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select *
  from (
    select e.empno, e.ename, e.job, e.mgr, e.hiredate, e.sal, e.comm, e.deptno, count(*) as cnt
    from emp e
    group by empno, ename, job, mgr, hiredate, sal, comm, deptno
  ) e
  where not exists (
    select null
    from (
      select v.empno, v.ename, v.job, v.mgr, v.hiredate, v.sal, v.comm, v.deptno, count(*) as cnt
      from v
      group by empno, ename, job, mgr, hiredate, sal, comm, deptno
    ) v
    where v.empno = e.empno
      and v.ename = e.ename
      and v.job = e.job
      and v.mgr = e.mgr
      and v.hiredate = e.hiredate
      and v.sal = e.sal
      and v.deptno = e.deptno
      and v.cnt = e.cnt
      and coalesce(v.comm,0) = coalesce(e.comm,0)
  )

  union all

  select *
  from (
    select v.empno, v.ename, v.job, v.mgr, v.hiredate, v.sal, v.comm, v.deptno, count(*) as cnt
    from v
    group by empno, ename, job, mgr, hiredate, sal, comm, deptno
  ) v
  where not exists (
    select null
    from (
      select e.empno, e.ename, e.job, e.mgr, e.hiredate, e.sal, e.comm, e.deptno, count(*) as cnt
      from emp e
      group by empno, ename, job, mgr, hiredate, sal, comm, deptno
    ) e
    where v.empno = e.empno
      and v.ename = e.ename
      and v.job = e.job
      and v.mgr = e.mgr
      and v.hiredate = e.hiredate
      and v.sal = e.sal
      and v.deptno = e.deptno
      and v.cnt = e.cnt
      and coalesce(v.comm,0) = coalesce(e.comm,0)
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;идентификация-и-устранение-некорректного-использования-декартова-произведения-стр-83&quot;&gt;Идентификация и устранение некорректного использования декартова произведения (стр. 83)&lt;/h4&gt;

&lt;p&gt;Требуется возвратить имя каждого служащего 10!го отдела и местонахождение отдела.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select e.ename, d.loc
  from emp e, dept d
  where e.deptno = 10
    and d.deptno = e.deptno
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Обычно, чтобы не происходило прямого (декартова) произведения, применяется правило n–1, где n представляет количество таблиц в FROM, а n–1 – минимальное число объединений, необходимое во избежание прямого произведения.&lt;/p&gt;

&lt;h4 id=&quot;осуществление-объединений-при-использовании-агрегатных-функций-стр-85&quot;&gt;Осуществление объединений при использовании агрегатных функций (стр. 85)&lt;/h4&gt;

&lt;p&gt;Необходимо быть очень аккуратным при совместном использовании агрегатных функций и объединений. Обычно избежать ошибок, обусловленных дублированием строк, возникающим при объединении, можно двумя способами: или просто использовать в вызове агрегатной функции ключевое слово &lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt;, чтобы в вычислении участвовали только уникальные экземпляры значений, или сначала провести агрегацию (во вложенном запросе), а потом объединение.&lt;/p&gt;

&lt;h5 id=&quot;mysql-и-postgresql&quot;&gt;MySQL и PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select deptno,
         sum(distinct sal) as total_sal,
         sum(bonus) as total_bonus
  from (
    select e.empno,
           e.ename,
           e.sal,
           e.deptno,
           e.sal*case when eb.type = 1 then .1
            when eb.type = 2 then .2
            else .3
          end as bonus
    from emp e, emp_bonus eb
    where e.empno = eb.empno
      and e.deptno = 10
  ) x
  group by deptno
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;db2-oracle-и-sql-server&quot;&gt;DB2, Oracle и SQL Server&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select distinct deptno, total_sal, total_bonus
  from (
    select e.empno,
           e.ename,
           sum(distinct e.sal) over (partition by e.deptno) as total_sal,
           e.deptno,
           sum(e.sal*case when eb.type = 1 then .1
            when eb.type = 2 then .2
            else .3 end) over(partition by deptno) as total_bonus
    from emp e, emp_bonus eb
    where e.empno = eb.empno
    and e.deptno = 10
  ) x
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;внешнее-объединение-при-использовании-агрегатных-функций-стр-90&quot;&gt;Внешнее объединение при использовании агрегатных функций (стр. 90)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select deptno,
         sum(distinct sal) as total_sal,
         sum(bonus) as total_bonus
  from (
    select e.empno,
     e.ename,
     e.sal,
     e.deptno,
     e.sal*case when eb.type is null then 0
      when eb.type = 1 then .1
      when eb.type = 2 then .2
      else .3
    end as bonus
    from emp e left outer join emp_bonus eb
      on (e.empno = eb.empno)
    where e.deptno = 10
  )
  group by deptno
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Можно также использовать оконную функцию &lt;code class=&quot;highlighter-rouge&quot;&gt;SUM OVER&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select distinct deptno, total_sal, total_bonus
  from (
    select e.empno,
      e.ename,
      sum(distinct e.sal) over(partition by e.deptno) as total_sal,
      e.deptno,
      sum(e.sal*case when eb.type is null then 0
        when eb.type = 1 then .1
        when eb.type = 2 then .2
        else .3
      end) over (partition by deptno) as total_bonus
  from emp e left outer join emp_bonus eb
    on (e.empno = eb.empno)
  where e.deptno = 10
  ) x
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;возвращение-отсутствующих-данных-из-нескольких-таблиц-стр-93&quot;&gt;Возвращение отсутствующих данных из нескольких таблиц (стр. 93)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select d.deptno,d.dname,e.ename
  from dept d full outer join emp e
    on (d.deptno=e.deptno)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select d.deptno, d.dname, e.ename
    from dept d right outer join emp e
      on (d.deptno=e.deptno)

  union

  select d.deptno,d.dname,e.ename
  from dept d left outer join emp e
    on (d.deptno=e.deptno)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;значения-null-в-операциях-и-сравнениях-стр-97&quot;&gt;Значения NULL в операциях и сравнениях (стр. 97)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename,comm
  from emp
  where coalesce(comm,0) &amp;lt; ( select comm
    from emp
    where ename = 'WARD' )
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;вставка-обновление-удаление-стр-99&quot;&gt;Вставка, обновление, удаление (стр. 99)&lt;/h3&gt;

&lt;h4 id=&quot;вставка-новой-записи-стр-100&quot;&gt;Вставка новой записи (стр. 100)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  insert into dept (deptno, dname, loc) values (50, 'PROGRAMMING', 'BALTIMORE')
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;вставка-значений-по-умолчанию-стр-100&quot;&gt;Вставка значений по умолчанию (стр. 100)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  insert into D values (default)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;переопределение-значения-по-умолчанию-значением-null-стр-102&quot;&gt;Переопределение значения по умолчанию значением NULL (стр. 102)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  insert into d (id, foo) values (null, 'Brighten')
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;копирование-строк-из-одной-таблицы-в-другую-стр-103&quot;&gt;Копирование строк из одной таблицы в другую (стр. 103)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  insert into dept_east (deptno, dname, loc)
    select deptno, dname, loc
    from dept
    where loc in ( 'NEW YORK', 'BOSTON' )
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;копирование-описания-таблицы-стр-103&quot;&gt;Копирование описания таблицы (стр. 103)&lt;/h4&gt;

&lt;h5 id=&quot;db2&quot;&gt;DB2&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  create table dept_2 like dept
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;oracle-mysql-и-postgresql&quot;&gt;Oracle, MySQL и PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  create table dept_2 as select * from dept where 1 = 0
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;вставка-в-несколько-таблиц-одновременно-стр-104&quot;&gt;Вставка в несколько таблиц одновременно (стр. 104)&lt;/h4&gt;

&lt;h5 id=&quot;oracle-1&quot;&gt;Oracle&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  insert all
    when loc in ('NEW YORK','BOSTON') then
      into dept_east (deptno,dname,loc) values (deptno,dname,loc)
    when loc = 'CHICAGO' then
      into dept_mid (deptno,dname,loc) values (deptno,dname,loc)
    else
      into dept_west (deptno,dname,loc) values (deptno,dname,loc)
  select deptno,dname,loc
  from dept
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;mysql-postgresql-и-sql-server&quot;&gt;MySQL, PostgreSQL и SQL Server&lt;/h5&gt;

&lt;p&gt;На момент написания данной книги эти производители не поддерживали вставки в несколько таблиц.&lt;/p&gt;

&lt;h4 id=&quot;блокировка-вставки-в-определенные-столбцы-стр-106&quot;&gt;Блокировка вставки в определенные столбцы (стр. 106)&lt;/h4&gt;

&lt;p&gt;Создайте представление, базированное на данной таблице, содержащее столбцы, доступные для вставки. Затем обеспечьте, чтобы вся вставка осуществлялась только посредством этого представления.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  create view new_emps as
    select empno, ename, job
    from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;изменение-записей-в-таблице-стр-107&quot;&gt;Изменение записей в таблице (стр. 107)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  update emp
    set sal = sal*1.10
  where deptno = 20
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;обновление-в-случае-существования-соответствующих-строк-в-другой-таблице-стр-109&quot;&gt;Обновление в случае существования соответствующих строк в другой таблице (стр. 109)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  update emp
  set sal=sal*1.20
  where empno in ( select empno from emp_bonus )
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;обновление-значениями-из-другой-таблицы-стр-109&quot;&gt;Обновление значениями из другой таблицы (стр. 109)&lt;/h4&gt;

&lt;h5 id=&quot;db2-и-mysql&quot;&gt;DB2 и MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  update emp e set (e.sal,e.comm) = (select ns.sal, ns.sal/2
    from new_sal ns
    where ns.deptno=e.deptno)
  where exists ( select null
    from new_sal ns
    where ns.deptno = e.deptno )
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;postgresql&quot;&gt;PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  update emp
  set sal = ns.sal, comm = ns.sal/2
  from new_sal ns
  where ns.deptno = emp.deptno
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;слияние-записей-стр-113&quot;&gt;Слияние записей (стр. 113)&lt;/h4&gt;

&lt;p&gt;В настоящее время Oracle является единственной СУБД1, имеющей выражение для решения этой задачи. Это выражение – &lt;code class=&quot;highlighter-rouge&quot;&gt;MERGE&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  merge into emp_commission ec
  using (select * from emp) emp on (ec.empno=emp.empno)
    when matched then
      update set ec.comm = 1000
      delete where (sal &amp;lt; 2000)
    when not matched then
      insert (ec.empno,ec.ename,ec.deptno,ec.comm)
      values (emp.empno,emp.ename,emp.deptno,emp.comm)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;удаление-всех-записей-из-таблицы-стр-115&quot;&gt;Удаление всех записей из таблицы (стр. 115)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  delete from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;удаление-определенных-записей-стр-116&quot;&gt;Удаление определенных записей (стр. 116)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  delete from emp where deptno = 10
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;удаление-одной-записи-стр-116&quot;&gt;Удаление одной записи (стр. 116)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  delete from emp where empno = 7782
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;удаление-записей-которые-нарушают-ссылочную-целостность-стр-117&quot;&gt;Удаление записей, которые нарушают ссылочную целостность (стр. 117)&lt;/h4&gt;

&lt;p&gt;Требуется удалить записи из таблицы, если они ссылаются на несуществующие записи другой таблицы.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  delete from emp
  where not exists (
    select * from dept
    where dept.deptno = emp.deptno
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  delete from emp
  where deptno not in (select deptno from dept)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;уничтожение-дублирующихся-записей-стр-118&quot;&gt;Уничтожение дублирующихся записей (стр. 118)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  delete from dupes
  where id not in ( select min(id)
    from dupes
    group by name )
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;удаление-записей-на-которые-есть-ссылки-в-другой-таблице-стр-119&quot;&gt;Удаление записей, на которые есть ссылки в другой таблице (стр. 119)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  delete from emp
  where deptno in ( select deptno
    from dept_accidents
    group by deptno
    having count(*) &amp;gt;= 3 )
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;5-запросы-на-получение-метаданных-стр-121&quot;&gt;5 Запросы на получение метаданных (стр. 121)&lt;/h3&gt;

&lt;h4 id=&quot;как-получить-список-таблиц-схемы-стр-121&quot;&gt;Как получить список таблиц схемы (стр. 121)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select table_name
  from information_schema.tables
  where table_schema = 'SMEAGOL'
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;как-получить-список-столбцов-таблицы-стр-122&quot;&gt;Как получить список столбцов таблицы (стр. 122)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select column_name, data_type, ordinal_position
  from information_schema.columns
  where table_schema = 'SMEAGOL'
  and table_name = 'EMP'
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;как-получить-список-индексированных-столбцов-таблицы-стр-123&quot;&gt;Как получить список индексированных столбцов таблицы (стр. 123)&lt;/h4&gt;

&lt;h4 id=&quot;mysql&quot;&gt;MySQL&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select a.tablename,a.indexname,b.column_name
  from pg_catalog.pg_indexes a, information_schema.columns b
  where a.schemaname = 'SMEAGOL'
  and a.tablename = b.table_name
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;postgresql-1&quot;&gt;PostgreSQL&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  show index from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;как-получить-список-ограничений-наложенных-на-таблицу-стр-125&quot;&gt;Как получить список ограничений, наложенных на таблицу (стр. 125)&lt;/h4&gt;

&lt;h5 id=&quot;postgresql-mysql-и-sql-server&quot;&gt;PostgreSQL, MySQL и SQL Server&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select a.table_name,
    a.constraint_name,
    b.column_name,
    a.constraint_type
  from information_schema.table_constraints a,
    information_schema.key_column_usage b
  where a.table_name = 'EMP'
    and a.table_schema = 'SMEAGOL'
    and a.table_name = b.table_name
    and a.table_schema = b.table_schema
    and a.constraint_name = b.constraint_name
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;6-работа-со-строками-стр-134&quot;&gt;6 Работа со строками (стр. 134)&lt;/h3&gt;

&lt;h4 id=&quot;проход-строки-стр-135&quot;&gt;Проход строки (стр. 135)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select substr(e.ename,iter.pos,1) as C
    from (select ename from emp where ename = 'KING') e,
      (select id as pos from t10) iter where iter.pos &amp;lt;= length(e.ename)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;как-вставить-кавычки-в-строковые-литералы-стр-135&quot;&gt;Как вставить кавычки в строковые литералы (стр. 135)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select 'g''day mate' qmarks from t1
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select 'beavers'' teeth' from t1
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select '''' from t1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;как-подсчитать-сколько-раз-символ-встречается-в-строке-стр-138&quot;&gt;Как подсчитать, сколько раз символ встречается в строке (стр. 138)&lt;/h4&gt;

&lt;p&gt;Чтобы определить количество запятых в строке, &lt;code class=&quot;highlighter-rouge&quot;&gt;10,CLARK,MANAGER&lt;/code&gt; вычтем ее длину без
запятых из исходной длины.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select (length('10,CLARK,MANAGER') - length(replace('10,CLARK,MANAGER',',','')))/length(',')
  as cnt
  from t1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;удаление-из-строки-ненужных-символов-стр-139&quot;&gt;Удаление из строки ненужных символов (стр. 139)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-и-sql-server-2&quot;&gt;MySQL и SQL Server&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename,
    replace(
      replace(
        replace(
          replace(
            replace(ename,'A',''),'E',''),'I',''),'O',''),'U','')
    as stripped1,
    sal,
    replace(sal,0,'') stripped2
  from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;oracle-и-postgresql&quot;&gt;Oracle и PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename, replace(translate(ename,'AEIOU','aaaaa'),'a')
    as stripped1,
    sal,
    replace(sal,0,'') as stripped2
  from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;разделение-числовых-и-символьных-данных-стр-141&quot;&gt;Разделение числовых и символьных данных (стр. 141)&lt;/h4&gt;

&lt;h5 id=&quot;postgresql-2&quot;&gt;PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select replace(
    translate(data,'0123456789','0000000000'),'0','') as ename,
    cast(
      replace(
        translate(lower(data),
          'abcdefghijklmnopqrstuvwxyz',
          rpad('z',26,'z')),'z','') as integer) as sal
  from (
    select ename||sal as data
    from emp
  ) x
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;извлечение-инициалов-из-имени-стр-150&quot;&gt;Извлечение инициалов из имени (стр. 150)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-1&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select case
    when cnt = 2 then
      trim(trailing '.' from
        concat_ws('.', substr(substring_index(name,' ',1),1,1), substr(name,
          length(substring_index(name,' ',1))+2,1),
          substr(substring_index(name,' ',1),1,1),
          '.'))
    else
      trim(trailing '.' from
        concat_ws('.',
          substr(substring_index(name,' ',1),1,1),
          substr(substring_index(name,' ',1),1,1)
        )
      )
    end as initials
  from (
    select name,length(name)length(replace(name,' ','')) as cnt
    from (
      select replace('Stewie Griffin','.','') as name from t1
    )y
  )x
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;oracle-и-postgresql-1&quot;&gt;Oracle и PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select replace(
    replace(
      translate(replace('Stewie Griffin', '.', ''),
      'abcdefghijklmnopqrstuvwxyz',
    rpad('#',26,'#') ), '#','' ),' ','.' ) ||'.'
  from t1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;упорядочивание-по-частям-строки-стр-154&quot;&gt;Упорядочивание по частям строки (стр. 154)&lt;/h4&gt;

&lt;p&gt;Требуется упорядочить строки по последним двум символам имени&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename
  from emp
  order by substr(ename,length(ename)1,2)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;упорядочивание-по-числу-в-строке-стр-155&quot;&gt;Упорядочивание по числу в строке (стр. 155)&lt;/h4&gt;

&lt;h5 id=&quot;postgresql-3&quot;&gt;PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select data
  from V
  order by
  cast(
    replace(
    translate(data,
      replace(
        translate(data,'0123456789','##########'),
          '#',''),rpad('#',20,'#')),'#','') as integer)
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&quot;mysql-и-sql-server-3&quot;&gt;MySQL и SQL Server&lt;/h5&gt;

&lt;p&gt;На момент написания данной книги ни один из данных производителей не поддерживает функцию TRANSLATE.&lt;/p&gt;

&lt;h4 id=&quot;создание-списка-с-разделителями-из-строк-таблицы-стр-161&quot;&gt;Создание списка с разделителями из строк таблицы (стр. 161)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-2&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select deptno,
    group_concat(ename order by empno separator ',') as emps
  from emp
  group by deptno
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;преобразование-данных-с-разделителями-в-список-оператора-in-со-множеством-значений-стр-168&quot;&gt;Преобразование данных с разделителями в список оператора IN со множеством значений (стр. 168)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-3&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select empno, ename, sal, deptno
  from emp
  where empno in (
    select substring_index(
      substring_index(list.vals,',',iter.pos),',',1) empno
    from (select id pos from t10) as iter,
      (select '7654,7698,7782,7788' as vals
      from t1) list
      where iter.pos &amp;lt;= (length(list.vals)length(replace(list.vals,',','')))+1
  ) x
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;упорядочение-строки-в-алфавитном-порядке-стр-174&quot;&gt;Упорядочение строки в алфавитном порядке (стр. 174)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-4&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename, group_concat(c order by c separator '')
  from (
    select ename, substr(a.ename,iter.pos,1) c
    from emp a,
    ( select id pos from t10 ) iter
    where iter.pos &amp;lt;= length(a.ename)
  ) x
  group by ename
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;выявление-строк-которые-могут-быть-интерпретированы-как-числа-стр-180&quot;&gt;Выявление строк, которые могут быть интерпретированы как числа (стр. 180)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-5&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select cast(group_concat(c order by pos separator '') as unsigned) as MIXED1
  from (
    select v.mixed, iter.pos, substr(v.mixed,iter.pos,1) as c
    from V,
    ( select id pos from t10 ) iter
      where iter.pos &amp;lt;= length(v.mixed) and ascii(substr(v.mixed,iter.pos,1)) between 48 and 57
    ) y
  group by mixed
  order by 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;извлечение-nной-подстроки-с-разделителями-стр-187&quot;&gt;Извлечение nной подстроки с разделителями (стр. 187)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-6&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select name
  from (
    select iter.pos,
      substring_index(
        substring_index(src.name,',',iter.pos),',',1) name
    from V src,
      (select id pos from t10) iter,
      where iter.pos &amp;lt;= length(src.name)length(replace(src.name,',',''))
    ) x
  where pos = 2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;7-работа-с-числами&quot;&gt;7 Работа с числами&lt;/h3&gt;

&lt;h4 id=&quot;вычисление-среднего&quot;&gt;Вычисление среднего&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select avg(sal) as avg_sal from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;поиск-минимальногомаксимального-значения-столбца&quot;&gt;Поиск минимального/максимального значения столбца&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select min(sal) as min_sal, max(sal) as max_sal from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;вычисление-суммы-значений-столбца&quot;&gt;Вычисление суммы значений столбца&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select sum(sal) from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;вычисление-моды-стр-213&quot;&gt;Вычисление моды (стр. 213)&lt;/h4&gt;

&lt;p&gt;мода (mode) в математике – это наиболее часто встречающийся элемент рассматриваемого множества данных&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select sal
  from emp
  where deptno = 20
  group by sal
  having count(*) &amp;gt;= all ( select count(*)
    from emp
    where deptno = 20
    group by sal )
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;вычисление-медианы-стр-216&quot;&gt;Вычисление медианы (стр. 216)&lt;/h4&gt;

&lt;p&gt;медиана (median) – это значение среднего члена множества упорядоченных элементов&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select avg(sal)
  from (
    select e.sal
    from emp e, emp d
    where e.deptno = d.deptno and e.deptno = 20
    group by e.sal
    having sum(case when e.sal = d.sal then 1 else 0 end) &amp;gt;= abs(sum(sign(e.sal  d.sal)))
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;вычисление-доли-от-целого-в-процентном-выражении-стр-220&quot;&gt;Вычисление доли от целого в процентном выражении (стр. 220)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select (sum(case when deptno = 10 then sal end)/sum(sal))*100 as pct
  from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;агрегация-столбцов-которые-могут-содержать-null-значения-стр-223&quot;&gt;Агрегация столбцов, которые могут содержать NULL значения (стр. 223)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select avg(coalesce(comm,0)) as avg_comm
  from emp
  where deptno=30
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;вычисление-среднего-без-учета-наибольшего-и-наименьшего-значений-стр-224&quot;&gt;Вычисление среднего без учета наибольшего и наименьшего значений (стр. 224)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;select avg(sal)
from emp
where sal not in (
  (select min(sal) from emp),
  (select max(sal) from emp)
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;преобразование-буквенноцифровых-строк-в-числа-стр-226&quot;&gt;Преобразование буквенноцифровых строк в числа (стр. 226)&lt;/h4&gt;

&lt;h5 id=&quot;oracle-и-postgresql-2&quot;&gt;Oracle и PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select cast(
    replace(
      translate( 'paul123f321', 'abcdefghijklmnopqrstuvwxyz', rpad('#',26,'#')),'#','') as integer ) as num
  from t1
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;mysql-and-sql-server&quot;&gt;MySQL and SQL Server&lt;/h5&gt;
&lt;p&gt;Решение не предоставляется, поскольку на момент написания данной книги ни один из этих производителей не поддерживает функцию &lt;code class=&quot;highlighter-rouge&quot;&gt;TRANSLATE&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;изменение-значений-в-текущей-сумме-стр-228&quot;&gt;Изменение значений в текущей сумме (стр. 228)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select
    case when v1.trx = 'PY'
      then 'PAYMENT'
      else 'PURCHASE'
    end as trx_type,
    v1.amt,
    (select sum(
      case when v2.trx = 'PY'
      then v2.amt else v2.amt
    end
    )
  from V v2
  where v2.id &amp;lt;= v1.id) as balance
  from V v1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;8-арифметика-дат&quot;&gt;8 Арифметика дат&lt;/h3&gt;

&lt;h4 id=&quot;добавление-и-вычитание-дней-месяцев-и-лет-стр-231&quot;&gt;Добавление и вычитание дней, месяцев и лет (стр. 231)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-7&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;
  select hiredate - interval 5 day as hd_minus_5D,
    hiredate + interval 5 day as hd_plus_5D,
    hiredate - interval 5 month as hd_minus_5M,
    hiredate + interval 5 month as hd_plus_5M,
    hiredate - interval 5 year as hd_minus_5Y,
    hiredate + interval 5 year as hd_plus_5Y
  from emp
  where deptno=10

&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;определение-количества-дней-между-двумя-датами-стр-234&quot;&gt;Определение количества дней между двумя датами (стр. 234)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-8&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select datediff(day,allen_hd,ward_hd)
  from (
    select hiredate as ward_hd
    from emp
    where ename = 'WARD'
  ) x,
  (
    select hiredate as allen_hd
    from emp
    where ename = 'ALLEN'
  ) y
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;определение-количества-рабочих-дней-между-двумя-датами-стр-236&quot;&gt;Определение количества рабочих дней между двумя датами (стр. 236)&lt;/h4&gt;

&lt;p&gt;Для формирования необходимого числа строк (дней) между двумя датами используйте сводную таблицу T500. Затем подсчитайте количество дней, не являющихся выходными. Добавление дней к каждой дате реализуйте с помощью функции &lt;code class=&quot;highlighter-rouge&quot;&gt;DATE_ADD&lt;/code&gt;. Воспользуйтесь функцией &lt;code class=&quot;highlighter-rouge&quot;&gt;DATE_FORMAT&lt;/code&gt; (формат даты) для получения названия дня недели для каждой даты:&lt;/p&gt;

&lt;h5 id=&quot;mysql-9&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select sum(
    case when date_format(date_add(jones_hd, interval t500.id1 DAY),'%a') in ( 'Sat','Sun' )
    then 0 else 1
  end) as days
  from (
    select 
      max(case when ename = 'BLAKE'
        then hiredate
      end) as blake_hd,
      max(case when ename = 'JONES'
        then hiredate
      end) as jones_hd
    from emp
  where ename in ( 'BLAKE','JONES' )
  ) x,
  t500
  where t500.id &amp;lt;= datediff(blake_hd,jones_hd)+1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;определение-количества-месяцев-или-лет-между-двумя-датами-стр-241&quot;&gt;Определение количества месяцев или лет между двумя датами (стр. 241)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-10&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select mnth, mnth/12
  from (
    select (year(max_hd)  year(min_hd))*12 + (month(max_hd)  month(min_hd)) as mnth
    from (
      select min(hiredate) as min_hd, max(hiredate) as max_hd
      from emp
    ) x
  ) y
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;как-подсчитать-сколько-раз-в-году-повторяется-каждый-день-недели-стр-246&quot;&gt;Как подсчитать, сколько раз в году повторяется каждый день недели (стр. 246)&lt;/h4&gt;

&lt;p&gt;Чтобы найти, сколько раз повторяется каждый день недели за год, необходимо:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Сгенерировать все возможные даты года.&lt;/li&gt;
  &lt;li&gt;Отформатировать даты таким образом, чтобы в них был указан со!
ответствующий день недели.&lt;/li&gt;
  &lt;li&gt;Подсчитать, сколько раз за год встречается название каждого дня
недели.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;определение-интервала-времени-в-днях-между-текущей-и-следующей-записями-стр-258&quot;&gt;Определение интервала времени в днях между текущей и следующей записями (стр. 258)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select x.*, datediff(day,x.hiredate,x.next_hd) diff
  from (
    select e.deptno, e.ename, e.hiredate,
      (select min(d.hiredate) from emp d
        where d.hiredate &amp;gt; e.hiredate) next_hd
        from emp e
    where e.deptno = 10
  ) x
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;9-работа-с-датами-стр-264&quot;&gt;9 Работа с датами (стр. 264)&lt;/h3&gt;

&lt;h4 id=&quot;как-определить-является-ли-год-високосным-стр-265&quot;&gt;Как определить, является ли год високосным (стр. 265)&lt;/h4&gt;

&lt;p&gt;проверяется последний день февраля; если он является 29м днем, то текущий год – високосный.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select day(
    last_day(
      date_add(
        date_add(
          date_add(current_date,
            interval dayofyear(current_date) day),
              interval 1 day),
                interval 1 month))) dy
  from t1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;как-определить-количество-дней-в-году-стр-272&quot;&gt;Как определить количество дней в году (стр. 272)&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Определение первого дня текущего года.&lt;/li&gt;
  &lt;li&gt;Добавление одного года к этой дате (для получения первого дня следующего года).&lt;/li&gt;
  &lt;li&gt;Вычитание текущего года из результата шага 2.&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select datediff((curr_year + interval 1 year),curr_year)
  from (
    select adddate(current_date,dayofyear(current_date)+1) curr_year
    from t1
  ) x
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;извлечение-единиц-времени-из-даты-стр-275&quot;&gt;Извлечение единиц времени из даты (стр. 275)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-11&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select date_format(current_timestamp,'%k') hr,
    date_format(current_timestamp,'%i') min,
    date_format(current_timestamp,'%s') sec,
    date_format(current_timestamp,'%d') dy,
    date_format(current_timestamp,'%m') mon,
    date_format(current_timestamp,'%Y') yr
  from t1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;определение-первого-и-последнего-дней-месяца-стр-277&quot;&gt;Определение первого и последнего дней месяца (стр. 277)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-12&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select date_add(current_date,
    interval -day(current_date)+1 day) firstday,
    last_day(current_date) lastday
  from t1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;выбор-всех-дат-года-выпадающих-на-определенный-день-недели-стр-280&quot;&gt;Выбор всех дат года, выпадающих на определенный день недели (стр. 280)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-13&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select dy
  from (
    select adddate(x.dy,interval t500.id1 day) dy
    from (
      select dy, year(dy) yr
        from (
          select adddate(
            adddate(current_date,
             interval dayofyear(current_date) day),
               interval 1 day ) dy
          from t1
        ) tmp1
      ) x,
      t500
    where year(adddate(x.dy,interval t500.id1 day)) = x.yr
    ) tmp2
  where dayname(dy) = 'Friday'
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;определение-дат-первого-и-последнего-появления-заданного-дня-недели-стр-287&quot;&gt;Определение дат первого и последнего появления заданного дня недели (стр. 287)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-14&quot;&gt;MySQL&lt;/h5&gt;

&lt;p&gt;Используйте функцию &lt;code class=&quot;highlighter-rouge&quot;&gt;ADDDATE&lt;/code&gt;, чтобы получить первый день месяца. После этого путем простых вычислений над числовыми значениями дней недели (Вс.–Сб. соответствуют 1–7) находите первый и последний понедельники текущего месяца:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select first_monday,
    case month(adddate(first_monday,28))
    when mth then adddate(first_monday,28)
    else adddate(first_monday,21)
  end last_monday
  from (
    select case sign(dayofweek(dy)2)
      when 0 then dy
      when 1 then adddate(dy,abs(dayofweek(dy)2))
      when 1 then adddate(dy,(7(dayofweek(dy)2)))
    end first_monday, mth
    from (
      select adddate(adddate(current_date,day(current_date)),1) dy, month(current_date) mth
      from t1
    ) x
  ) y
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;создание-календаря-стр-295&quot;&gt;Создание календаря (стр. 295)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-15&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select max(case dw when 2 then dm end) as Mo,
    max(case dw when 3 then dm end) as Tu,
    max(case dw when 4 then dm end) as We,
    max(case dw when 5 then dm end) as Th,
    max(case dw when 6 then dm end) as Fr,
    max(case dw when 7 then dm end) as Sa,
    max(case dw when 1 then dm end) as Su
  from (
    select date_format(dy,'%u') wk,
      date_format(dy,'%d') dm,
      date_format(dy,'%w')+1 dw
    from (
      select adddate(x.dy,t500.id1) dy,
        x.mth
      from (
        select adddate(current_date,dayofmonth(current_date)+1) dy,
          date_format(
          adddate(current_date,
          dayofmonth(current_date)+1),
          '%m') mth
        from t1
      ) x, t500
    where t500.id &amp;lt;= 31 and date_format(adddate(x.dy,t500.id1),'%m') = x.mth ) y ) z
  group by wk
  order by wk
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;получение-дат-начала-и-конца-кварталов-года-стр-314&quot;&gt;Получение дат начала и конца кварталов года (стр. 314)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-16&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select quarter(adddate(dy,1)) QTR, date_add(dy,interval 3 month) Q_start, adddate(dy,1) Q_end
  from (
    select date_add(dy,interval (3*id) month) dy
    from (
      select id, adddate(current_date,dayofyear(current_date)+1) dy
      from t500
      where id &amp;lt;= 4
    ) x
  ) y
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;определение-дат-начала-и-окончания-заданного-квартала-стр-320&quot;&gt;Определение дат начала и окончания заданного квартала (стр. 320)&lt;/h4&gt;

&lt;p&gt;Год и квартал заданы в формате YYYYQ (четыре разряда – год, один разряд – квартал)&lt;/p&gt;

&lt;h5 id=&quot;mysql-17&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select date_add(adddate(q_end,day(q_end)+1),
    interval 2 month) q_start,
    q_end
  from (
    select last_day(str_to_date(concat(substr(yrq,1,4),mod(yrq,10)*3),'%Y%m')) q_end
    from (
      select 20051 as yrq from t1 union all
      select 20052 as yrq from t1 union all
      select 20053 as yrq from t1 union all
      select 20054 as yrq from t1
    ) x
  ) y
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;дополнение-отсутствующих-дат-стр-327&quot;&gt;Дополнение отсутствующих дат (стр. 327)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-18&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select z.mth, count(e.hiredate) num_hired
  from (
    select date_add(min_hd,interval t500.id1 month) mth
    from (
      select min_hd, date_add(max_hd,interval 11 month) max_hd
      from (
        select adddate(min(hiredate),dayofyear(min(hiredate))+1) min_hd,
          adddate(max(hiredate),dayofyear(max(hiredate))+1) max_hd
        from emp
      ) x
    ) y, t500
  where date_add(min_hd,interval t500.id1 month) &amp;lt;= max_hd) z 
  left join emp e on (z.mth = adddate(date_add(last_day(e.hiredate),interval 1 month),1))
  group by z.mth
  order by 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;поиск-по-заданным-единицам-времени-стр-337&quot;&gt;Поиск по заданным единицам времени (стр. 337)&lt;/h4&gt;

&lt;h5 id=&quot;db2-и-mysql-1&quot;&gt;DB2 и MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename
  from emp
  where monthname(hiredate) in ('February','December') or dayname(hiredate) = 'Tuesday'
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;сравнение-строк-по-определенной-части-даты-стр-339&quot;&gt;Сравнение строк по определенной части даты (стр. 339)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-19&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select concat(a.ename, ' was hired on the same month and weekday as ', b.ename) msg
  from emp a, emp b
  where date_format(a.hiredate,'%w%M') = date_format(b.hiredate,'%w%M')
    and a.empno &amp;lt; b.empno
  order by a.ename
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;выявление-наложений-диапазонов-дат-стр-342&quot;&gt;Выявление наложений диапазонов дат (стр. 342)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-20&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select a.empno,a.ename,concat('project ',b.proj_id,' overlaps project ',a.proj_id) as msg
  from emp_project a,emp_project b
  where a.empno = b.empno
    and b.proj_start &amp;gt;= a.proj_start
    and b.proj_start &amp;lt;= a.proj_end
    and a.proj_id != b.proj_id
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;10-работа-с-диапазонами-данных-стр-348&quot;&gt;10 Работа с диапазонами данных (стр. 348)&lt;/h3&gt;

&lt;h4 id=&quot;поиск-диапазона-последовательных-значений-стр-348&quot;&gt;Поиск диапазона последовательных значений (стр. 348)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select v1.proj_id,
  v1.proj_start,
  v1.proj_end
  from V v1, V v2
  where v1.proj_end = v2.proj_start
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;вычисление-разности-между-значениями-строк-одной-группы-или-сегмента-стр-354&quot;&gt;Вычисление разности между значениями строк одной группы или сегмента (стр. 354)&lt;/h4&gt;

&lt;h5 id=&quot;db2-mysql-postgresql-и-sql-server&quot;&gt;DB2, MySQL, PostgreSQL и SQL Server&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select deptno,ename,hiredate,sal,coalesce(cast(salnext_sal as char(10)),'N/A') as diff
  from (
    select e.deptno,e.ename,e.hiredate,e.sal,
      (select min(sal) from emp d
      where d.deptno=e.deptno
        and d.hiredate =
          (select min(hiredate) from emp d
            where e.deptno=d.deptno and d.hiredate &amp;gt; e.hiredate)) as next_sal
    from emp e
  ) x
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;oracle-2&quot;&gt;Oracle&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select deptno,ename,sal,hiredate,lpad(nvl(to_char(salnext_sal),'N/A'),10) diff
  from (
    select deptno,ename,sal,hiredate,lead(sal)over(partition by deptno order by hiredate) next_sal
  from emp
  )
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;определение-начала-и-конца-диапазона-последовательных-значений-стр-363&quot;&gt;Определение начала и конца диапазона последовательных значений (стр. 363)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  create view v2
  as
  select a.*,
    case
      when (
        select b.proj_id
        from V b
        where a.proj_start = b.proj_end
      )
      is not null then 0 else 1
    end as flag
  from V a


  select proj_grp,min(proj_start) as proj_start,max(proj_end) as proj_end
  from (
  select a.proj_id,a.proj_start,a.proj_end,
    (select sum(b.flag)
      from V2 b
      where b.proj_id &amp;lt;= a.proj_id) as proj_grp
      from V2 a
    ) x
  group by proj_grp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;вставка-пропущенных-значений-диапазона-стр-368&quot;&gt;Вставка пропущенных значений диапазона (стр. 368)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select y.yr, coalesce(x.cnt,0) as cnt
  from (
    select min_yearmod(cast(min_year as int),10)+rn as yr
    from (
      select (select min(extract(year from hiredate))
      from emp) as min_year,id1 as rn
  from t10) a) y
  left join
    (
      select extract(year from hiredate) as yr, count(*) as cnt
      from emp
      group by extract(year from hiredate)
    ) x
  on ( y.yr = x.yr )
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;формирование-последовательности-числовых-значений-стр-373&quot;&gt;Формирование последовательности числовых значений (стр. 373)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  with x (id) as (
    select 1
    from t1

    union all

    select id+1
    from x
    where id+1 &amp;lt;= 10
  )

  select * from x
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;расширенный-поиск-стр-378&quot;&gt;Расширенный поиск (стр. 378)&lt;/h3&gt;

&lt;h4 id=&quot;разбиение-результирующего-множества-на-страницы-стр-378&quot;&gt;Разбиение результирующего множества на страницы (стр. 378)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select sal
  from emp
  order by sal limit 5 offset 0
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;как-пропустить-n-строк-таблицы-стр-381&quot;&gt;Как пропустить n строк таблицы (стр. 381)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select x.ename
  from (
    select a.ename,
      (select count(*)
      from emp b
      where b.ename &amp;lt;= a.ename) as rn
    from emp a
  ) x
  where mod(x.rn,2) = 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;использование-логики-or-во-внешних-объединениях-стр-384&quot;&gt;Использование логики OR во внешних объединениях (стр. 384)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select e.ename, d.deptno, d.dname, d.loc
  from dept d left join emp e
    on (d.deptno = e.deptno
    and (e.deptno=10 or e.deptno=20))
  order by 2
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;выявление-строк-со-взаимообратными-значениями-стр-387&quot;&gt;Выявление строк со взаимообратными значениями (стр. 387)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select distinct v1.*
  from V v1, V v2
  where v1.test1 = v2.test2
    and v1.test2 = v2.test1
    and v1.test1 &amp;lt;= v1.test2
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;как-выбрать-записи-с-nым-количеством-наивысших-значений-стр-389&quot;&gt;Как выбрать записи с nым количеством наивысших значений (стр. 389)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;select ename,sal
from (
  select (select count(distinct b.sal)
    from emp b
    where a.sal &amp;lt;= b.sal) as rnk,
  a.sal,a.ename
  from emp a
)
where rnk &amp;lt;= 5
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;как-найти-записи-с-наибольшим-и-наименьшим-значениями-стр-391&quot;&gt;Как найти записи с наибольшим и наименьшим значениями (стр. 391)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename
  from emp
  where sal in ( (select min(sal) from emp), (select max(sal) from emp) )
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;сбор-информации-из-последующих-строк-стр-393&quot;&gt;Сбор информации из последующих строк (стр. 393)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;select ename, sal, hiredate
from (
  select a.ename, a.sal, a.hiredate,
    (select min(hiredate) from emp b
    where b.hiredate &amp;gt; a.hiredate
      and b.sal &amp;gt; a.sal ) as next_sal_grtr,
    (select min(hiredate) from emp b
    where b.hiredate &amp;gt; a.hiredate) as next_hire
from emp a ) x
where next_sal_grtr = next_hire
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;смещение-значений-строк-стр-396&quot;&gt;Смещение значений строк (стр. 396)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select e.ename, e.sal,
    coalesce(
      (select min(sal) from emp d where d.sal &amp;gt; e.sal),
      (select min(sal) from emp)
    ) as forward,
    coalesce(
      (select max(sal) from emp d where d.sal &amp;lt; e.sal),
      (select max(sal) from emp)
    ) as rewind
  from emp e
  order by 2
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;ранжирование-результатов-стр-400&quot;&gt;Ранжирование результатов (стр. 400)&lt;/h4&gt;

&lt;h5 id=&quot;db2-oracle-и-sql-server-1&quot;&gt;DB2, Oracle и SQL Server&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt; select dense_rank() over(order by sal) rnk, sal from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;mysql-и-postgresql-1&quot;&gt;MySQL и PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select (select count(distinct b.sal)
    from emp b
    where b.sal &amp;lt;= a.sal) as rnk,
    a.sal
  from emp a
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;исключение-дубликатов-стр-401&quot;&gt;Исключение дубликатов (стр. 401)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select distinct job from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select job from emp group by job
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;ход-конем-стр-403&quot;&gt;Ход конем (стр. 403)&lt;/h4&gt;

&lt;p&gt;Требуется получить множество, содержащее имя каждого служащего, отдел, в котором он работает, его заработную плату, дату его приема на работу и заработную плату сотрудника, принятого на работу последним в отделе.
  Значения столбца &lt;strong&gt;LATEST_SAL&lt;/strong&gt; определяются в результате «хода конем», поскольку схема поиска их в таблице 
аналогична схеме перемещения шахматного коня.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select e.deptno,
    e.ename,
    e.sal,
    e.hiredate,
    (select max(d.sal)
    from emp d
    where d.deptno = e.deptno
      and d.hiredate =
      (select max(f.hiredate)
      from emp f
      where f.deptno = e.deptno)) as latest_sal
  from emp e
  order by 1, 4 desc
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;формирование-простых-прогнозов-стр-411&quot;&gt;Формирование простых прогнозов (стр. 411)&lt;/h4&gt;

&lt;p&gt;Исходя из текущих данных требуется получить дополнительные строки и столбцы, представляющие будущие действия.
Для каждой строки результирующего множества требуется возвратить три строки (строка плюс две дополнительные строки для каждого заказа). Кроме дополнительных строк, должны быть добавлены столбцы с предполагаемыми датами обработки заказов.&lt;/p&gt;

&lt;h5 id=&quot;postgresql-4&quot;&gt;PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select id, order_date, process_date,
    case when gs.n &amp;gt;= 2
      then process_date+1
      else null
    end as verified,
    case when gs.n = 3
      then process_date+2
      else null
    end as shipped
  from (
    select gs.id,
      current_date+gs.id as order_date,
      current_date+gs.id+2 as process_date
    from generate_series(1,3) gs (id)
  ) orders,
  generate_series(1,3)gs(n)
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;mysql-21&quot;&gt;MySQL&lt;/h5&gt;

&lt;p&gt;MySQL не поддерживает функцию для автоматического формирования строк.&lt;/p&gt;

&lt;h3 id=&quot;12-составление-отчетов-и-управление-хранилищами-данных-стр-420&quot;&gt;12 Составление отчетов и управление хранилищами данных (стр. 420)&lt;/h3&gt;

&lt;h4 id=&quot;разворачивание-результирующего-множества-в-одну-строку-стр-420&quot;&gt;Разворачивание результирующего множества в одну строку (стр. 420)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select sum(case when deptno=10 then 1 else 0 end) as deptno_10,
    sum(case when deptno=20 then 1 else 0 end) as deptno_20,
    sum(case when deptno=30 then 1 else 0 end) as deptno_30
  from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select max(case when deptno=10 then empcount else null end) as deptno_10
    max(case when deptno=20 then empcount else null end) as deptno_20,
    max(case when deptno=30 then empcount else null end) as deptno_30
  from (
    select deptno, count(*) as empcount
    from emp
    group by deptno
  ) x
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;разворачивание-результирующего-множества-в-несколько-строк-стр-423&quot;&gt;Разворачивание результирующего множества в несколько строк (стр. 423)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select 
    max(case when job='CLERK'
      then ename else null end) as clerks,
    max(case when job='ANALYST'
      then ename else null end) as analysts,
    max(case when job='MANAGER'
      then ename else null end) as mgrs,
    max(case when job='PRESIDENT'
      then ename else null end) as prez,
    max(case when job='SALESMAN'
      then ename else null end) as sales
  from (
    select e.job,
      e.ename,
      (select count(*) from emp d
      where e.job=d.job and e.empno &amp;lt; d.empno) as rnk
      from emp e
    ) x
  group by rnk
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;обратное-разворачивание-результирующего-множества-стр-431&quot;&gt;Обратное разворачивание результирующего множества (стр. 431)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select dept.deptno,
    case dept.deptno
      when 10 then emp_cnts.deptno_10
      when 20 then emp_cnts.deptno_20
      when 30 then emp_cnts.deptno_30
    end as counts_by_dept
  from (
    select sum(case when deptno=10 then 1 else 0 end) as deptno_10,
      sum(case when deptno=20 then 1 else 0 end) as deptno_20,
      sum(case when deptno=30 then 1 else 0 end) as deptno_30
    from emp
  ) emp_cnts,
  (select deptno from dept where deptno &amp;lt;= 30) dept
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;обратное-разворачивание-результирующего-множества-в-один-столбец-стр-433&quot;&gt;Обратное разворачивание результирующего множества в один столбец (стр. 433)&lt;/h4&gt;

&lt;h5 id=&quot;db2-oracle-и-sql-server-2&quot;&gt;DB2, Oracle и SQL Server&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select case rn
    when 1 then ename
    when 2 then job
    when 3 then cast(sal as char(4))
  end emps
  from (
    select e.ename,e.job,e.sal,
      row_number()over(partition by e.empno
    order by e.empno) rn
    from emp e,
    (select *
    from emp where job='CLERK') four_rows
    where e.deptno=10
  ) x
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;postgresql-и-mysql&quot;&gt;PostgreSQL и MySQL&lt;/h5&gt;

&lt;p&gt;Данный рецепт призван обратить внимание на применение ранжирующих функций для ранжирования строк,
которое затем используется при разворачивании таблицы. На момент написания данной книги ни PostgreSQL, ни MySQL не поддерживают ранжирующие функции.&lt;/p&gt;

&lt;h4 id=&quot;разворачивание-результирующего-множества-для-упрощения-вычислений-стр-440&quot;&gt;Разворачивание результирующего множества для упрощения вычислений (стр. 440)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select d20_sal - d10_sal as d20_10_diff,
    d20_sal - d30_sal as d20_30_diff
  from (
    select sum(case when deptno=10 then sal end) as d10_sal,
      sum(case when deptno=20 then sal end) as d20_sal,
      sum(case when deptno=30 then sal end) as d30_sal
    from emp
  ) totals_by_dept
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;создание-блоков-данных-фиксированного-размера-стр-441&quot;&gt;Создание блоков данных фиксированного размера (стр. 441)&lt;/h4&gt;

&lt;h5 id=&quot;db2-oracle-и-sql-server-3&quot;&gt;DB2, Oracle и SQL Server&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ceil(row_number()over(order by empno)/5.0) grp, empno, ename from emp
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&quot;postgresql-и-mysql-1&quot;&gt;PostgreSQL и MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ceil(rnk/5.0) as grp, empno, ename
  from (
    select e.empno, e.ename,
    (select count(*) from emp d
    where e.empno &amp;lt; d.empno)+1 as rnk
    from emp e
  ) x
  order by grp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;создание-заданного-количества-блоков-стр-445&quot;&gt;Создание заданного количества блоков (стр. 445)&lt;/h4&gt;

&lt;h5 id=&quot;oracle-и-sql-server&quot;&gt;Oracle и SQL Server&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ntile(4)over(order by empno) grp, empno, ename from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&quot;mysql-и-postgresql-2&quot;&gt;MySQL и PostgreSQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select mod(count(*),4)+1 as grp,e.empno,e.ename
  from emp e, emp d
  where e.empno &amp;gt;= d.empno
  group by e.empno,e.ename
  order by 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;создание-горизонтальных-гистограмм-стр-451&quot;&gt;Создание горизонтальных гистограмм (стр. 451)&lt;/h4&gt;

&lt;h5 id=&quot;oracle-postgresql-и-mysql&quot;&gt;Oracle, PostgreSQL и MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select deptno, lpad('*',count(*),'*') as cnt
  from emp
  group by deptno 
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;создание-вертикальных-гистограмм-стр-453&quot;&gt;Создание вертикальных гистограмм (стр. 453)&lt;/h4&gt;

&lt;h5 id=&quot;postgresql-и-mysql-2&quot;&gt;PostgreSQL и MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select max(deptno_10) as d10,
    max(deptno_20) as d20,
    max(deptno_30) as d30
  from (
    select case when e.deptno=10 then '*' else null end deptno_10,
      case when e.deptno=20 then '*' else null end deptno_20,
      case when e.deptno=30 then '*' else null end deptno_30,
      (select count(*) from emp d
      where e.deptno=d.deptno and e.empno &amp;lt; d.empno ) as rnk
    from emp e
  ) x
  group by rnk
  order by 1 desc, 2 desc, 3 desc
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;как-возвратить-столбцы-не-перечисленные-в-операторе-group-by-стр-456&quot;&gt;Как возвратить столбцы, не перечисленные в операторе GROUP BY (стр. 456)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select deptno,ename,job,sal,
    case when sal = max_by_dept
      then 'TOP SAL IN DEPT'
    when sal = min_by_dept
      then 'LOW SAL IN DEPT'
    end as dept_status,
    case when sal = max_by_job
      then 'TOP SAL IN JOB'
    when sal = min_by_job
      then 'LOW SAL IN JOB'
    end as job_status
  from (
    select e.deptno,e.ename,e.job,e.sal,
      (select max(sal) from emp d
      where d.deptno = e.deptno) as max_by_dept,
      (select max(sal) from emp d
      where d.job = e.job) as max_by_job,
      (select min(sal) from emp d
      where d.deptno = e.deptno) as min_by_dept,
      (select min(sal) from emp d
      where d.job = e.job) as min_by_job
    from emp e
  ) x
  where sal in (max_by_dept,max_by_job,
  min_by_dept,min_by_job)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;вычисление-простых-подсумм-стр-462&quot;&gt;Вычисление простых подсумм (стр. 462)&lt;/h4&gt;

&lt;p&gt;В данном рецепте под «простой подсуммой» подразумевается результирующее множество, содержащее значения, полученные в результате агрегации одного столбца, и общую сумму таблицы.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select coalesce(job,'TOTAL') job,
  sum(sal) sal
  from emp
  group by job with rollup
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;вычисление-подсумм-для-всех-возможных-сочетаний-стр-466&quot;&gt;Вычисление подсумм для всех возможных сочетаний (стр. 466)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select deptno, job, 'TOTAL BY DEPT AND JOB' as category, sum(sal) as sal
  from emp
  group by deptno, job

  union all

  select null, job, 'TOTAL BY JOB', sum(sal)
  from emp
  group by job

  union all

  select deptno, null, 'TOTAL BY DEPT', sum(sal)
  from emp
  group by deptno

  union all

  select null,null,'GRAND TOTAL FOR TABLE', sum(sal)
  from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;использование-выражений-case-для-маркировки-строк-стр-478&quot;&gt;Использование выражений &lt;code class=&quot;highlighter-rouge&quot;&gt;CASE&lt;/code&gt; для маркировки строк (стр. 478)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ename,
    case when job = 'CLERK'
      then 1 else 0
    end as is_clerk,
    case when job = 'SALESMAN'
      then 1 else 0
    end as is_sales,
    case when job = 'MANAGER'
      then 1 else 0
    end as is_mgr,
    case when job = 'ANALYST'
      then 1 else 0
    end as is_analyst,
    case when job = 'PRESIDENT'
      then 1 else 0
    end as is_prez
  from emp
  order by 2,3,4,5,6
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;создание-разреженной-матрицы-стр-480&quot;&gt;Создание разреженной матрицы (стр. 480)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select case deptno when 10 then ename end as d10,
    case deptno when 20 then ename end as d20,
    case deptno when 30 then ename end as d30,
    case job when 'CLERK' then ename end as clerks,
    case job when 'MANAGER' then ename end as mgrs,
    case job when 'PRESIDENT' then ename end as prez,
    case job when 'ANALYST' then ename end as anals,
    case job when 'SALESMAN' then ename end as sales
  from emp
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;группировка-строк-по-интервалам-времени-стр-481&quot;&gt;Группировка строк по интервалам времени (стр. 481)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select ceil(trx_id/5.0) as grp,
    min(trx_date) as trx_start,
    max(trx_date) as trx_end,
    sum(trx_cnt) as total
  from trx_log
  group by ceil(trx_id/5.0)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;агрегация-разных-группсегментов-одновременно-стр-485&quot;&gt;Агрегация разных групп/сегментов одновременно (стр. 485)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select e.ename,
    e.deptno,
    (select count(*) from emp d
    where d.deptno = e.deptno) as deptno_cnt,
    job,
    (select count(*) from emp d
    where d.job = e.job) as job_cnt,
    (select count(*) from emp) as total
  from emp e
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;агрегация-скользящего-множества-значений-стр-487&quot;&gt;Агрегация скользящего множества значений (стр. 487)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select e.hiredate,e.sal,
    (select sum(sal) from emp d
  where d.hiredate between e.hiredate90
    and e.hiredate) as spending_pattern
  from emp e
  order by 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;иерархические-запросы-стр-500&quot;&gt;Иерархические запросы (стр. 500)&lt;/h3&gt;

&lt;h4 id=&quot;представление-отношений-родительпотомок-стр-501&quot;&gt;Представление отношений родительпотомок (стр. 501)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select concat(a.ename, ' works for ',b.ename) as emps_and_mgrs
  from emp a, emp b
  where a.mgr = b.empno
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;представление-отношений-потомокродительпрародитель-стр-505&quot;&gt;Представление отношений потомокродительпрародитель (стр. 505)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select a.ename||'&amp;gt;'||b.ename||'&amp;gt;'||c.ename as leaf___branch___root
  from emp a, emp b, emp c
  where a.ename = 'MILLER'
  and a.mgr = b.empno
  and b.mgr = c.empno
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;создание-иерархического-представления-таблицы-стр-510&quot;&gt;Создание иерархического представления таблицы (стр. 510)&lt;/h4&gt;

&lt;h5 id=&quot;mysql-22&quot;&gt;MySQL&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select emp_tree
  from (
    select ename as emp_tree
    from emp
    where mgr is null

  union

  select concat(a.ename,'  ',b.ename)
  from emp a
  join
    emp b on (a.empno=b.mgr)
  where a.mgr is null

  union

  select concat(a.ename,'  ',b.ename,'  ',c.ename)
  from emp a
  join
    emp b on (a.empno=b.mgr)
  left join
    emp c on (b.empno=c.mgr)
  where a.ename = 'KING'

  union

  select concat(a.ename,'  ',b.ename,'  ',c.ename,'  ',d.ename)
  from emp a
  join
    emp b on (a.empno=b.mgr)
  join
    emp c on (b.empno=c.mgr)
  left join
    emp d on (c.empno=d.mgr)
  where a.ename = 'KING'
  ) x
  where tree is not null
  order by 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;выбор-всех-дочерних-строк-для-заданной-строки-стр-519&quot;&gt;Выбор всех дочерних строк для заданной строки (стр. 519)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;/* находим EMPNO служащего JONES */
select ename,empno,mgr
from emp
where ename = 'JONES'
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ENAME&lt;/th&gt;
      &lt;th&gt;EMPNO&lt;/th&gt;
      &lt;th&gt;MGR&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;JONES&lt;/td&gt;
      &lt;td&gt;7566&lt;/td&gt;
      &lt;td&gt;7839&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;/* есть ли служащие, находящиеся в прямом подчинении у JONES? */
select count(*)
from emp
where mgr = 7566
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;COUNT(*)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;/* у JONES двое подчиненных, найдем их EMPNO */
select ename,empno,mgr
from emp
where mgr = 7566
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ENAME | EMPNO | MGR
—– | —– | —&lt;br /&gt;
SCOTT | 7788 | 7566
FORD | 7902 | 7566&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;/* есть ли подчиненные у SCOTT или FORD? */
select count(*)
from emp
where mgr in (7788,7902)
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;COUNT(*)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;/* у SCOTT и FORD двое подчиненных, находим их EMPNO */
select ename,empno,mgr
from emp
where mgr in (7788,7902)
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ENAME&lt;/th&gt;
      &lt;th&gt;EMPNO&lt;/th&gt;
      &lt;th&gt;MGR&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SMITH&lt;/td&gt;
      &lt;td&gt;7369&lt;/td&gt;
      &lt;td&gt;7902&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ADAMS&lt;/td&gt;
      &lt;td&gt;7876&lt;/td&gt;
      &lt;td&gt;7788&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;/* есть ли подчиненные у SMITH или ADAMS? */
select count(*)
from emp
where mgr in (7369,7876)
&lt;/code&gt;&lt;/pre&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;COUNT(*)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Теперь, когда известна глубина, можно приступать к обходу иерархии сверху вниз. Сначала дважды выполним рефлексивное объединение таблицы EMP. Затем произведем обратное разворачивание вложенного представления Х, чтобы преобразовать три столбца и две строки в один столбец и шесть строк&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select distinct
    case t100.id
      when 1 then root
      when 2 then branch
      else leaf
    end as JONES_SUBORDINATES
  from (
    select a.ename as root,
      b.ename as branch,
      c.ename as leaf
    from emp a, emp b, emp c
    where a.ename = 'JONES'
      and a.empno = b.mgr
      and b.empno = c.mgr
  ) x,
  t100
  where t100.id &amp;lt;= 6
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;определение-узлов-ветвления-концевого-корневого-стр-523&quot;&gt;Определение узлов: ветвления, концевого, корневого (стр. 523)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;select e.ename,
  (select sign(count(*)) from emp d
    where 0 =
    (select count(*) from emp f
    where f.mgr = e.empno)) as is_leaf,
  (select sign(count(*)) from emp d
  where d.mgr = e.empno
    and e.mgr is not null) as is_branch,
  (select sign(count(*)) from emp d
  where d.empno = e.empno
    and d.mgr is null) as is_root
  from emp e
  order by 4 desc,3 desc
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;14-всякая-всячина--стр-532&quot;&gt;14 Всякая всячина  (стр. 532)&lt;/h3&gt;

&lt;h4 id=&quot;создание-отчетов-с-перекрестными-ссылками-с-помощью-оператора-sql-server-pivot-стр-532&quot;&gt;Создание отчетов с перекрестными ссылками с помощью оператора SQL Server &lt;code class=&quot;highlighter-rouge&quot;&gt;PIVOT&lt;/code&gt; (стр. 532)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select [10] as dept_10,
    [20] as dept_20,
    [30] as dept_30,
    [40] as dept_40
  from (select deptno, empno from emp) driver
  pivot (
    count(driver.empno)
    for driver.deptno in ( [10],[20],[30],[40] )
  ) as empPivot
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;обратное-разворачивание-отчета-с-помощью-оператора-sql-server-unpivot-стр-534&quot;&gt;Обратное разворачивание отчета с помощью оператора SQL Server &lt;code class=&quot;highlighter-rouge&quot;&gt;UNPIVOT&lt;/code&gt; (стр. 534)&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  select DNAME, CNT
  from (
    select [ACCOUNTING] as ACCOUNTING,
      [SALES] as SALES,
      [RESEARCH] as RESEARCH,
      [OPERATIONS] as OPERATIONS
    from (
      select d.dname, e.empno
      from emp e,dept d
      where e.deptno=d.deptno
 
  ) driver
  pivot (
    count(driver.empno)
    for driver.dname in
     ([ACCOUNTING],[SALES],[RESEARCH],[OPERATIONS])
  ) as empPivot
  ) new_driver
  unpivot (cnt for dname in (ACCOUNTING,SALES,RESEARCH,OPERATIONS)
  ) as un_pivot
&lt;/code&gt;&lt;/pre&gt;</content><author><name></name></author><summary type="html">Mollinaro - SQL Cookbook notes</summary></entry><entry><title type="html">Тезисы</title><link href="https://sd-kin.github.io/instamart-academic-plan/2018/11/11/groff-complete-guide.html" rel="alternate" type="text/html" title="Тезисы" /><published>2018-11-11T20:53:21+03:00</published><updated>2018-11-11T20:53:21+03:00</updated><id>https://sd-kin.github.io/instamart-academic-plan/2018/11/11/groff-complete-guide</id><content type="html" xml:base="https://sd-kin.github.io/instamart-academic-plan/2018/11/11/groff-complete-guide.html">&lt;p&gt;&lt;strong&gt;SQL&lt;/strong&gt; появился как исследовательский продукт  фирмы IBM. Изначально назывался &lt;strong&gt;SEQUEL&lt;/strong&gt; - &lt;strong&gt;S&lt;/strong&gt;tructured &lt;strong&gt;E&lt;/strong&gt;nglish &lt;strong&gt;Que&lt;/strong&gt;ry &lt;strong&gt;L&lt;/strong&gt;anguage но был переименован из-за конфликта прав.&lt;/p&gt;

&lt;p&gt;Возможности:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Определение данных&lt;/strong&gt; позволяет определить структуру и оргинизацию хранимых данных&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Выборка данных&lt;/strong&gt; позволяет извлекать данные&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Обработка данных&lt;/strong&gt; позволяет добавлять, изменять и удалять данные&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Управление доступом&lt;/strong&gt; ограничивает возможности выборки и изменения&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Совместное использование&lt;/strong&gt; одновременное редактирование без потери данных&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Контроль целостности&lt;/strong&gt; защита от несогласованного изменения или отказа системы&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SQL - декларативный язык&lt;/p&gt;

&lt;h3 id=&quot;ключевые-свойства&quot;&gt;Ключевые свойства:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Независимость&lt;/strong&gt; от конкретной СУБД&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Межплатформенная переносимость&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Наличие стандартов&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;поддержка IBM&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;поддержка Microsoft&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Реляционная модель&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Похож на естественный язык&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Интерактивные запросы&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Програмный доступ к БД&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Возможность различного представления данных&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Полноценность&lt;/strong&gt; в качестве языка работы с БД&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Возможность динамического определения данных&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Поддержка архитектуры клиент/сервер&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Поддержка приложений уровня предприятия&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Расширяемость&lt;/strong&gt; и поддержка объектно-ориентированных технологий&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Возможность доступа к данным в интернете&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;JDBC&lt;/strong&gt; Интеграция м Java&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Поддержка открытого кода&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Промышленная инфраструктура&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SQL обеспечивает независимость от конкретных СУБД&lt;/p&gt;

&lt;p&gt;Microsoft поддерживает SQL через ODBC - Open Database Connectivity&lt;/p&gt;

&lt;h3 id=&quot;проблемы-переносимости&quot;&gt;Проблемы переносимости&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Типы данных&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Обратная совместимость&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Системные таблицы&lt;/strong&gt; - информация о структуре БД&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Програмный интерфейс&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Семантические отличия&lt;/strong&gt; - разные результаты выполнения одного запроса&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Репликация и зеркалирование&lt;/strong&gt; - реализрваны по разному&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Коды ошибок&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Структура&lt;/strong&gt; - именование и установка подключений&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;архитектура&quot;&gt;Архитектура&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Централизованная&lt;/strong&gt; - Приложение и БД на одном сервере. Плохо масштабируется&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Файловый сервер&lt;/strong&gt; - Одна база на сервере и СУБД на каждом клиенте&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Клиент/Сервер&lt;/strong&gt; - БД и СУБД на сервере, клиент передаёт запросы&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;многоуровневая-архитектура&quot;&gt;Многоуровневая архитектура&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Клиентский уровень&lt;/strong&gt; тонкий клиент - сайт, мобильное приложение&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Прикладной уровень&lt;/strong&gt; Веб-сервер, сервер приложения&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Серверный уровень&lt;/strong&gt; Сервер баз данных&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;модели-данных&quot;&gt;Модели данных&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Иерархическая&lt;/strong&gt; - записи организованы в структуру предок-потомок
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Доступ к записям&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;Найти по ID&lt;/li&gt;
          &lt;li&gt;Перейти к предку&lt;/li&gt;
          &lt;li&gt;Перейти к потомку&lt;/li&gt;
          &lt;li&gt;Перейти к соседу&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Характеристики&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;Производительность&lt;/li&gt;
          &lt;li&gt;Простая структура&lt;/li&gt;
          &lt;li&gt;ассоциация предок-потомок через указатель&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Сетевая&lt;/strong&gt; - одна запись может быть частью нескольких отношений предок-потомок (принадлежит множеству)
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Доступ к данным&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;Найти по ID&lt;/li&gt;
          &lt;li&gt;перейти к первому потомку множества&lt;/li&gt;
          &lt;li&gt;перейти по горизонтали внутри множества&lt;/li&gt;
          &lt;li&gt;перейти вверх в другое множество&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Характеристики&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;Гибкость структуры&lt;/li&gt;
          &lt;li&gt;Стандартизация (стандарт CODASYL)&lt;/li&gt;
          &lt;li&gt;Производительность&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;недостатки-сетевой-и-иерархической-модели&quot;&gt;Недостатки сетевой и иерархической модели&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Сложные статистические запросы&lt;/li&gt;
  &lt;li&gt;Реализация каждого запроса отдельной программой&lt;/li&gt;
  &lt;li&gt;Жёсткая структура&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;реляционная-модель---табличная-структура-данных&quot;&gt;&lt;strong&gt;Реляционная модель&lt;/strong&gt; - табличная структура данных&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Реляционной&lt;/strong&gt; называется БД в которой все данные организованны в виде таблиц и все операции выполняются над этими таблицами.&lt;/p&gt;

&lt;p&gt;Отношение предок-потомок реализовано через значения в таблицах&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Домен столбца&lt;/strong&gt; - множество значений, которые могут в нём содержаться&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Отношение&lt;/strong&gt; (relation) - мат. термин для таблицы, все строки которой различны между собой (в бд достигается за счёт уникального внешнего ключа)&lt;/p&gt;

&lt;h3 id=&quot;12-правил-кодда-тед-кодд---создатель-реляционной-модели&quot;&gt;12 Правил Кодда (Тед Кодд - создатель реляционной модели)&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Правило представления информации&lt;/strong&gt; - Вся информация представлена только на логическом уровне и только в виде значений таблиц&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Правило гарантированного доступа&lt;/strong&gt; - Доступ к каждому элементу данных возможен по комбинации имени таблицы, столбца и ID&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Систематическая трактовка значений NULL&lt;/strong&gt; - используются для обозначения неизвестной или неприменимой информации и ничему не равны&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Правило динамического католога, основанного на реляционной модели&lt;/strong&gt; - Описание БД на логическом уровне должно быть представлено в том же виде, что и данные, и могло быть изменено с помощью того жу языка&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Правило исчерпывающего подъязыка данных&lt;/strong&gt; - система может поддерживать несколько языков, хотя бы один, инструкции которого можно представить в виде строк символов в соответствии с точно определённым синтаксисом и который поддерживает:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Определение данных&lt;/li&gt;
      &lt;li&gt;Определение представлений&lt;/li&gt;
      &lt;li&gt;Обработку данных&lt;/li&gt;
      &lt;li&gt;Ограничение целостности данных&lt;/li&gt;
      &lt;li&gt;Авторизацию&lt;/li&gt;
      &lt;li&gt;Границы транзакций (Начало, фиксацию и откат)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Правило обновления представлений&lt;/strong&gt; - Все представления, которые можно обновить, должны быть доступны для обновления&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Правило высокоуровневого обновления, добавления и удаления&lt;/strong&gt; - операции вставки, обновления и удаления должны быть применимы к отношению в целом&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Правило физической независимости данных&lt;/strong&gt; - Прикладные программы и утилиты должны оставаться независимыми при изменении способов хранения данных или методов доступа к ним&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Правило логической независимости данных&lt;/strong&gt; -  Прикладные программы и утилиты должны оставаться нетронутыми при внесении в базовые таблицы любых изменений&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Правило независимости контроля целостности&lt;/strong&gt; - Вся информация, необходимая для поддержания целостности, должна находиться в БД. Язык для работы с данными должен выполнять проверку входных данных и автоматически поддерживать целостность данных&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Независимость от расположения&lt;/strong&gt; - БД может быть распределённой, может находиться на нескольких компьютерах, и это не должно оказывать влияния на приложения. Перенос базы данных на другой компьютер не должен оказывать влияния на приложения.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Согласование языковых уровней&lt;/strong&gt; - Если используется низкоуровневый язык доступа к данным, он не должен игнорировать правила безопасности и правила целостности, которые поддерживаются языком более высокого уровня.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;выборка-данных&quot;&gt;Выборка данных&lt;/h3&gt;

&lt;p&gt;В операторе &lt;code class=&quot;highlighter-rouge&quot;&gt;LIKE&lt;/code&gt; управляющий символ может быть задан явно &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE ... LIKE 'A$%BC' ESCAPE '$'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NATURAL JOIN&lt;/code&gt; - соединение по всем одноимённым столбцам, &lt;code class=&quot;highlighter-rouge&quot;&gt;JOIN USING(A, B)&lt;/code&gt; соединение по перечисленным одноимённым столбцам&lt;/p&gt;

&lt;p&gt;Декартово произведение таблиц - таблица из всех возможных пар строк обеих таблиц&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;T1&lt;/th&gt;
      &lt;th&gt;T2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;a&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;b&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;T3&lt;/th&gt;
      &lt;th&gt;T4&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;c&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;d&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;T1&lt;/th&gt;
      &lt;th&gt;T2&lt;/th&gt;
      &lt;th&gt;T3&lt;/th&gt;
      &lt;th&gt;T4&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;a&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;c&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;d&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;b&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;c&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;b&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;d&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Соединением таблиц является их произведение, из которого исключены некоторые строки&lt;/p&gt;

&lt;p&gt;Перекрёстное соединение (&lt;code class=&quot;highlighter-rouge&quot;&gt;CROSS JOIN&lt;/code&gt;) - декартово произведение таблиц, равнозначно &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM A,B&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Соединение возможно по неравенству &lt;code class=&quot;highlighter-rouge&quot;&gt;JOIN ON A &amp;gt; B&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UNION JOIN&lt;/code&gt; (не поддерживается ни одной БД) - Полное внешнее соединение минус внутреннее&lt;/p&gt;

&lt;h5 id=&quot;girls&quot;&gt;GIRLS&lt;/h5&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;surname&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Lisa&lt;/td&gt;
      &lt;td&gt;Smitt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ann&lt;/td&gt;
      &lt;td&gt;Wessonn&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h6 id=&quot;boys&quot;&gt;BOYS&lt;/h6&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;surname&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Joue&lt;/td&gt;
      &lt;td&gt;Doue&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;John&lt;/td&gt;
      &lt;td&gt;Daniels&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GIRLS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BOYS&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;surname&lt;/th&gt;
      &lt;th&gt;name&lt;/th&gt;
      &lt;th&gt;surname&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Lisa&lt;/td&gt;
      &lt;td&gt;Smitt&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Ann&lt;/td&gt;
      &lt;td&gt;Wessonn&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;Joue&lt;/td&gt;
      &lt;td&gt;Doue&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;John&lt;/td&gt;
      &lt;td&gt;Daniels&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;По стандарту SQL1&lt;/p&gt;

&lt;p&gt;Статистические функции не могут быть вложенными&lt;/p&gt;

&lt;p&gt;Нельзя одновременно вывести столбец и статистическую функцию&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT name, SUM(age)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;NULL Игнорируется статистическими функциями (но есть исключения)&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;A&lt;/th&gt;
      &lt;th&gt;B&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT COUNT(*)&lt;/code&gt; =&amp;gt; 3
&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT COUNT(A)&lt;/code&gt; =&amp;gt; 3 
&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT COUNT(B)&lt;/code&gt; =&amp;gt; 2&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SUM(A) + SUM(B)&lt;/code&gt; =&amp;gt; 15
&lt;code class=&quot;highlighter-rouge&quot;&gt;SUM(A + B)&lt;/code&gt; =&amp;gt; 13 (2 + NULL = NULL)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt; можно использовать внутри статистической функции чтобы применить её к неповторяющимся значениям&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt; можно использовать только один раз за запрос&lt;/p&gt;

&lt;h4 id=&quot;общая-сумма-заказов-для-каждого-клиента-по-каждому-служащему&quot;&gt;Общая сумма заказов для каждого клиента по каждому служащему&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;  
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CUST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CUST&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;REP&lt;/th&gt;
      &lt;th&gt;CUST&lt;/th&gt;
      &lt;th&gt;SUM(AMOUNT)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;2102&lt;/td&gt;
      &lt;td&gt;3978&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;2108&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;2113&lt;/td&gt;
      &lt;td&gt;22500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;102&lt;/td&gt;
      &lt;td&gt;2106&lt;/td&gt;
      &lt;td&gt;4026&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;102&lt;/td&gt;
      &lt;td&gt;2114&lt;/td&gt;
      &lt;td&gt;15000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;102&lt;/td&gt;
      &lt;td&gt;2120&lt;/td&gt;
      &lt;td&gt;3750&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;2111&lt;/td&gt;
      &lt;td&gt;2700&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;общая-сумма-заказов-по-каждому-клиенту-для-каждого-служащего-с-промежуточными-итогами-для-каждого-служащего&quot;&gt;Общая сумма заказов по каждому клиенту для каждого служащего с промежуточными итогами для каждого служащего&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CUST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CUST&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLLUP&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;REP&lt;/th&gt;
      &lt;th&gt;CUST&lt;/th&gt;
      &lt;th&gt;SUM(AMOUNT)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;2102&lt;/td&gt;
      &lt;td&gt;3978&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;2108&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;2113&lt;/td&gt;
      &lt;td&gt;22500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;26628&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;102&lt;/td&gt;
      &lt;td&gt;2106&lt;/td&gt;
      &lt;td&gt;4026&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;102&lt;/td&gt;
      &lt;td&gt;2114&lt;/td&gt;
      &lt;td&gt;15000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;102&lt;/td&gt;
      &lt;td&gt;2120&lt;/td&gt;
      &lt;td&gt;3750&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;102&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;22776&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;2111&lt;/td&gt;
      &lt;td&gt;2700&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;2700&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;сумма-заказов-для-каждого-служащего-с-промежуточными-итогами-для-каждого-служащего-и-клиента&quot;&gt;Сумма заказов для каждого служащего с промежуточными итогами для каждого служащего и клиента&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CUST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AMOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ORDERS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GROUP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CUST&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CUBE&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;REP&lt;/th&gt;
      &lt;th&gt;CUST&lt;/th&gt;
      &lt;th&gt;SUM(AMOUNT)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;26628&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;2102&lt;/td&gt;
      &lt;td&gt;3978&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;2108&lt;/td&gt;
      &lt;td&gt;150&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;101&lt;/td&gt;
      &lt;td&gt;2113&lt;/td&gt;
      &lt;td&gt;22500&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;102&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;2276&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;102&lt;/td&gt;
      &lt;td&gt;2106&lt;/td&gt;
      &lt;td&gt;4026&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;102&lt;/td&gt;
      &lt;td&gt;2114&lt;/td&gt;
      &lt;td&gt;15000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;102&lt;/td&gt;
      &lt;td&gt;2120&lt;/td&gt;
      &lt;td&gt;3750&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;2700&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;103&lt;/td&gt;
      &lt;td&gt;2111&lt;/td&gt;
      &lt;td&gt;2700&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;247691&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;2101&lt;/td&gt;
      &lt;td&gt;1458&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;2102&lt;/td&gt;
      &lt;td&gt;3978&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;2103&lt;/td&gt;
      &lt;td&gt;35582&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;2106&lt;/td&gt;
      &lt;td&gt;4026&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NULL&lt;/td&gt;
      &lt;td&gt;2107&lt;/td&gt;
      &lt;td&gt;23132&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;GROUP BY считает что &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL = NULL&lt;/code&gt; при условии равенства всех остальных значений в строке&lt;/p&gt;

&lt;p&gt;В подзапросе внешним называется значение, которое берётся из внешнего запроса&lt;/p&gt;

&lt;p&gt;При одинаковом имени столбца в запросе и подзапросе выражение будет относиться к ближайшему &lt;code class=&quot;highlighter-rouge&quot;&gt;FROM&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Стандарт SQL1&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ограничивается простыми запросами (&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;GROUP BY&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;HAVING&lt;/code&gt;, подзапросы)&lt;/li&gt;
  &lt;li&gt;Отсутствуют средства принятия решений (&lt;code class=&quot;highlighter-rouge&quot;&gt;IF/ELSE&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;CASE WHEN&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Ограничения на подзапросы - нельзя сравнивать между собой, подзапрос всегда должен быть справа от оператора сравнения&lt;/li&gt;
  &lt;li&gt;Ограничены выражения со строками таблицы, нельзя выбрать строки подходящие под одно условие из списка (только через цепочку &lt;code class=&quot;highlighter-rouge&quot;&gt;AND/OR&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;нельзя включать подзапросы в &lt;code class=&quot;highlighter-rouge&quot;&gt;FROM&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM (SELECT ... )&lt;/code&gt; )&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Скалярные значения:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Значение отдельного столбца отдельной строки (“ячейки”)&lt;/li&gt;
  &lt;li&gt;Литерал - &lt;code class=&quot;highlighter-rouge&quot;&gt;'abc'&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;123&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Значение ввода пользователя&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;способы-вставки&quot;&gt;Способы вставки&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Однострочная инструкция &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Многострочная инструкция &lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Пакетная загрузка&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Условия целостности данных&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Обязательное наличие данных (&lt;code class=&quot;highlighter-rouge&quot;&gt;NOT NULL CONSTRAINT&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Условия на допустимые значения столбца&lt;/li&gt;
  &lt;li&gt;Логическая целостность данных (Уникальность идентификатора)&lt;/li&gt;
  &lt;li&gt;Ссылочная целостность - внешний ключ должен указывать на существующую строку&lt;/li&gt;
  &lt;li&gt;Другие ограничения (специально заданные правила)&lt;/li&gt;
  &lt;li&gt;Бизнес-правила&lt;/li&gt;
  &lt;li&gt;Непротиворечивость&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Правила удаления и обновления для отношения предок-потомок&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;RESTRICT&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;NO ACTION&lt;/code&gt;) - запрещает удаление строки у которой есть потомки&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CASCADE&lt;/code&gt; - удаляет потомков вместе с родителем&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SET NULL&lt;/code&gt; - при удалении родителя дочерние ключи выставляются в NULL&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SET DEFAULT&lt;/code&gt; - при удалении родителя дочерние ключи выставляются в заданное значение&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SET NULL&lt;/code&gt; выставляет в &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; только те столбцы, для которых это значение допустимо, столбцы с ограничением &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT NULL&lt;/code&gt; останутся без изменений&lt;/p&gt;

&lt;p&gt;Составной ключ, одно из значений которого &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;, считается удовлетворяющим значению ссылочной целостности независимо от остальных значений. При создании таблицы можно установить режим обеспечения целостности данных: &lt;code class=&quot;highlighter-rouge&quot;&gt;MATCH FULL&lt;/code&gt; - полное соответствие, в ключах не должно быть значений &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;; &lt;code class=&quot;highlighter-rouge&quot;&gt;MATCH PARTIAL&lt;/code&gt; - допускаются значения &lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; в ключе если остальная часть ключа присутствует в таблице предке.&lt;/p&gt;

&lt;p&gt;Расширенные возможности ограничений&lt;/p&gt;

&lt;p&gt;Ограничения столбцов - ограничивают значения, которые может содержать столбец.
Домены - форма ограничения столбца, например тип данных с условием (любые &lt;code class=&quot;highlighter-rouge&quot;&gt;INTEGER &amp;gt; 10&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Ограничения таблицы - ограничивают значения строк таблицы.&lt;/p&gt;

&lt;p&gt;Утверждения - определяют взаимосвязь между значениями таблиц одной БД (&lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE ASSERTION&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Отложенная проверка ограничений - происходит после завершения транзакции.
&lt;code class=&quot;highlighter-rouge&quot;&gt;DEFFERABLE&lt;/code&gt; - проверка может быть отложена
&lt;code class=&quot;highlighter-rouge&quot;&gt;NON DEFFERABLE&lt;/code&gt; - проверка не может быть отложена&lt;/p&gt;

&lt;p&gt;Ограничения могут быть:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;INITIALLY IMMEDIATE&lt;/code&gt; - выполняется после каждой SQL инструкции (по умолчанию)
&lt;code class=&quot;highlighter-rouge&quot;&gt;INITIALLY DEFFERED&lt;/code&gt; - проверка по окончанию транзакции&lt;/p&gt;

&lt;p&gt;инструкция &lt;code class=&quot;highlighter-rouge&quot;&gt;SET CONSTRAINS&lt;/code&gt; позволяет динамически изменять способ обработки ограничения - например в рамках текущей транзакции можно проверить выполнение ограничения в конце транзакции, хотя по умолчанию оно проверяется после каждой инструкции, но только если ограничение может быть отложено&lt;/p&gt;

&lt;p&gt;Триггеры запускают набор инструкций при выполнении условия&lt;/p&gt;

&lt;p&gt;Недостатки:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Сложность базы данных&lt;/li&gt;
  &lt;li&gt;Скрытые правила&lt;/li&gt;
  &lt;li&gt;Скрытое влияние на производительность&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;acid&quot;&gt;ACID&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt; - Atomic (Атомарность) транзакция применяется целиком или не применяется совсем&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;C&lt;/strong&gt; - Consistent (Целостность) транзакция переводит БД из одного согласованного состояния в другое согласованное состояние, все ограничения и проверки должны выполняться&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;I&lt;/strong&gt; - Isolated (Изоляция) каждая транзакция выполняется независимо от других транзакций&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D&lt;/strong&gt; - Durable (Постоянство) По завершении транзакции данные должны быть сохранены и оставаться в согласованном состоянии даже в случае системного или аппаратного сбоя&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;инструкции в модели &lt;code class=&quot;highlighter-rouge&quot;&gt;ANSI/ISO&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;START TRANSACTION&lt;/code&gt; - устанавливает свойства для новой транзакции и запускает её
&lt;code class=&quot;highlighter-rouge&quot;&gt;SET TRANSACTION&lt;/code&gt; - устанавливает свойства очередной выполняемой транзакции не влияя на текущую (управляет следующей транзакцией)
&lt;code class=&quot;highlighter-rouge&quot;&gt;SET CONSTRAINS&lt;/code&gt; - устанавливает режим ограничений транзакций (выполнять проверки сразу или откладывать)
&lt;code class=&quot;highlighter-rouge&quot;&gt;SAVEPOIN&lt;/code&gt; - создаёт точку сохранения в пределах транзакции, которая будет промежуточной точкой отката транзакции
&lt;code class=&quot;highlighter-rouge&quot;&gt;RELEASE SAVEPOINT&lt;/code&gt; - освобождает точку сохранения и все ресурсы
&lt;code class=&quot;highlighter-rouge&quot;&gt;COMMIT&lt;/code&gt; - завершает транзакцию и сохраняет изменения в БД.
&lt;code class=&quot;highlighter-rouge&quot;&gt;ROLLBACK&lt;/code&gt; - откатывает транзакцию к ближайшей точке сохранения или началу транзакции. При возврате к точке сохранения транзакция может быть продолжена&lt;/p&gt;

&lt;h3 id=&quot;свойства-транзакций&quot;&gt;Свойства транзакций&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Уровень доступа - может ли транзакция содержать модифицирующие инструкции (&lt;code class=&quot;highlighter-rouge&quot;&gt;READ WRITE&lt;/code&gt;) или только запросы на выборку данных (&lt;code class=&quot;highlighter-rouge&quot;&gt;READ ONLY&lt;/code&gt; - по умолчанию)&lt;/li&gt;
  &lt;li&gt;Уровень изоляции - насколько транзация изолирована от других (&lt;code class=&quot;highlighter-rouge&quot;&gt;READ UNCOMMITED&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;READ COMMITED&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;REPEATABLE READ&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;SERIALIZABLE&lt;/code&gt;) по умолчанию &lt;code class=&quot;highlighter-rouge&quot;&gt;SERIALIZABLE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Размер диагностики - размер области для сообщений, генерируемых при выполненнии SQL (никем не реализована)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Для обеспечения атомарности в рамках транзакции в журнал транзакций сохраняются состояния строк до изменения и после&lt;/p&gt;

&lt;h3 id=&quot;проблемы-многопользовательских-транзакций&quot;&gt;Проблемы многопользовательских транзакций&lt;/h3&gt;

&lt;h4 id=&quot;пропавшее-обновление&quot;&gt;Пропавшее обновление&lt;/h4&gt;

&lt;p&gt;Две транзакции параллельно считывают и изменяют результат&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;T1&lt;/th&gt;
      &lt;th&gt;T2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;COUNT = 100&lt;/td&gt;
      &lt;td&gt;COUNT = 100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COUNT -= 50&lt;/td&gt;
      &lt;td&gt;COUNT -= 60&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COMMIT&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COUNT =&amp;gt; 50&lt;/td&gt;
      &lt;td&gt;COMMIT&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;COUNT =&amp;gt; 40&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;От 100 в двух парралельных транзакциях вычитаем 50 и 60, получаем 40&lt;/p&gt;

&lt;h4 id=&quot;проблема-промежуточных-данных&quot;&gt;Проблема промежуточных данных&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;T1&lt;/th&gt;
      &lt;th&gt;T2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;COUNT = 100&lt;/td&gt;
      &lt;td&gt;COUNT = 100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COUNT -= 50&lt;/td&gt;
      &lt;td&gt;COUNT =&amp;gt; 50&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;COUNT += 10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;COUNT =&amp;gt; 60&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ROLLBACK&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COUNT =&amp;gt; 100&lt;/td&gt;
      &lt;td&gt;COUNT =&amp;gt; 100&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Изменения применились к промежуточному значению, которое не было сохранено&lt;/p&gt;

&lt;h4 id=&quot;проблема-несогласованности-данных&quot;&gt;Проблема несогласованности данных&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;T1&lt;/th&gt;
      &lt;th&gt;T2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;COUNT = 100&lt;/td&gt;
      &lt;td&gt;COUNT = 100&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;COUNT -= 50&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COUNT =&amp;gt; 50&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;В рамках одной транзакции значение меняется, хотя никаких операций над ним не производилось&lt;/p&gt;

&lt;h4 id=&quot;проблема-строк-призраков&quot;&gt;Проблема строк-призраков&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;T1&lt;/th&gt;
      &lt;th&gt;T2&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;SELECT COUNT(ROW) =&amp;gt; 10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;INSERT …&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;SELECT COUNT(ROW) =&amp;gt; 11&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;в рамках одной транзакции меняется количество существующих строк&lt;/p&gt;

&lt;p&gt;Когда транзакции выполняются параллельно СУБД гарантирует что результат будет таким же как если бы они применялись в определённом порядке&lt;/p&gt;

&lt;p&gt;Для обработки параллельных транзакций может применятся механизм блокировки чтобы предоставить транзакции монопольный доступ к данным&lt;/p&gt;

&lt;p&gt;Уровни блокировки:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;База данных&lt;/li&gt;
  &lt;li&gt;Таблица&lt;/li&gt;
  &lt;li&gt;Страница (часть таблицы)&lt;/li&gt;
  &lt;li&gt;Строка&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Блокировка может быть:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;С обеспечением совместного доступа (&lt;code class=&quot;highlighter-rouge&quot;&gt;SHARED LOCK&lt;/code&gt;) - другая транзакция может извлечь заблокированные данные&lt;/li&gt;
  &lt;li&gt;Монопольная (&lt;code class=&quot;highlighter-rouge&quot;&gt;EXCLUSIVE LOCK&lt;/code&gt;) Заблокированные данные не доступны другим транзакциям&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Если данные уже заблокированы &lt;code class=&quot;highlighter-rouge&quot;&gt;SHARED LOCK&lt;/code&gt; нельзя заблокировать их &lt;code class=&quot;highlighter-rouge&quot;&gt;EXCLUSIVE LOCK&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Для предотвращения взаимоблокировок СУБД периодически проверяет все блокировки и при нахождении взаимоблокировки отменяет одну произвольную транзакцию&lt;/p&gt;

&lt;p&gt;Усовершенствованные методы блокировки&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Явная блокировка&lt;/li&gt;
  &lt;li&gt;Уровни изоляции&lt;/li&gt;
  &lt;li&gt;Параметры блокировки&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;-&lt;/th&gt;
      &lt;th&gt;пропавшее обновление&lt;/th&gt;
      &lt;th&gt;промежуточные данные&lt;/th&gt;
      &lt;th&gt;несогласованные данные&lt;/th&gt;
      &lt;th&gt;строки-призраки&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SERIALIZABLE&lt;/td&gt;
      &lt;td&gt;нет&lt;/td&gt;
      &lt;td&gt;нет&lt;/td&gt;
      &lt;td&gt;нет&lt;/td&gt;
      &lt;td&gt;нет&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;REPEATABLE READ&lt;/td&gt;
      &lt;td&gt;нет&lt;/td&gt;
      &lt;td&gt;нет&lt;/td&gt;
      &lt;td&gt;нет&lt;/td&gt;
      &lt;td&gt;возможно&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;READ COMMITED&lt;/td&gt;
      &lt;td&gt;нет&lt;/td&gt;
      &lt;td&gt;нет&lt;/td&gt;
      &lt;td&gt;возможно&lt;/td&gt;
      &lt;td&gt;возможно&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;READ UNCOMMITED&lt;/td&gt;
      &lt;td&gt;нет&lt;/td&gt;
      &lt;td&gt;возможно&lt;/td&gt;
      &lt;td&gt;возможно&lt;/td&gt;
      &lt;td&gt;возможно&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;управление-версиями&quot;&gt;Управление версиями&lt;/h3&gt;

&lt;p&gt;Когда в рамках транзакции изменяется строка создаётся её копия. В текущей транзакции используется изменённое значение, в других значение до изменения&lt;/p&gt;

&lt;p&gt;Схема БД это ключевой высокоуровневый контейнер объектов в структуре БД. Он представляет собой именованную сущность в БД и включает в себя определение следующих объектов:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Таблицы вместе со связанными с ними структурами (столбцами, первичными и внешними ключами и т.п.)&lt;/li&gt;
  &lt;li&gt;Представления - виртуальные таблицы, создаваемые на основе реальных&lt;/li&gt;
  &lt;li&gt;Домены - расширенные типы данных для определения столбцов в таблицах схемы&lt;/li&gt;
  &lt;li&gt;Утверждения - проверки целостности БД, относящиеся ко всей базе&lt;/li&gt;
  &lt;li&gt;Привелегии - возможности пользователя для доступа к данным&lt;/li&gt;
  &lt;li&gt;наборы символов - представления нелатинских символов&lt;/li&gt;
  &lt;li&gt;порядки сортировки - правила сортировки текста для различных наборов символов&lt;/li&gt;
  &lt;li&gt;правила конвертирования текста - правила перевода текста между различными наборами символов и сравнения текстовых данных использующих различные наборы символов&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;представления&quot;&gt;Представления&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Позволяют по разному показывать БД разным пользователям&lt;/li&gt;
  &lt;li&gt;Позволяют дать пользователю доступ к части таблицы&lt;/li&gt;
  &lt;li&gt;Упрощают структуру БД для уаждого пользователя&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Материализованные представления - результат выборки сохранённый во временную таблицу&lt;/p&gt;

&lt;p&gt;Преимущества представлений:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Безопасность - проще разграничить доступ пользователей&lt;/li&gt;
  &lt;li&gt;Простота запросов - к нескольким таблицам можно обращаться как к одной&lt;/li&gt;
  &lt;li&gt;Структурная простота - для каждого пользователя можно создать собственную структуру&lt;/li&gt;
  &lt;li&gt;Защита от изменений - интерфейс доступа к данным не зависит от структуры данных, имён таблиц и столбцов&lt;/li&gt;
  &lt;li&gt;Целостность данных - автоматическая проверка целостности&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Недостатки:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Производительность - простой запрос к представлению это запрос к нескольким таблицам&lt;/li&gt;
  &lt;li&gt;Управляемость - взаимосвязанные представления сложны в поддержке&lt;/li&gt;
  &lt;li&gt;Ограничения на обновления - сложные представления нельзя обновлять&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Виды представлений:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Горизонтальное - включает все столбцы таблицы но только часть строк (таблица отфильтрована по критерию)&lt;/li&gt;
  &lt;li&gt;Вертикальное - все строки но только часть столбцов&lt;/li&gt;
  &lt;li&gt;Сгруппированные - результат запроса с группировкой&lt;/li&gt;
  &lt;li&gt;Соединённые - результат объединения таблиц&lt;/li&gt;
  &lt;li&gt;Смешанное&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Для обновления представления СУБД должна иметь возможность однозначно сопоставить строки и столбцы представления со строками и столбцами исходных таблиц&lt;/p&gt;

&lt;p&gt;Можно создать дополнительные правила для проверки добавляемых в представление данных при его создании (WITH CHECK) - пользователь не сможет ввести данные, которые не подходят под условие выборки в представление&lt;/p&gt;

&lt;p&gt;Материализованное представление - запрос на выборку, результат которого сохраняются в таблицу и синхронизируются с исходными таблицами&lt;/p&gt;

&lt;p&gt;Привелегии пользователей:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DELETE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;расширенные привелегии - могут относиться к отдельным столбцам а не всей таблице, добавляются&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;REFERENCES&lt;/code&gt; - позволяет делать столбец внешним ключом&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;USAGE&lt;/code&gt; - управляет доступом к пользовательским наборам символов, правилам сортировки, доменам&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Передача привелегий - &lt;code class=&quot;highlighter-rouge&quot;&gt;GRANT ... WITH GRANT OPTION&lt;/code&gt; - право на передачу привелегий другому пользователю&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;REVOKE&lt;/code&gt; - отменяет привелегии, но может отменить только те, которые были даны выполняющим пользователем&lt;/p&gt;

&lt;p&gt;Роль - именованный набор привелегий&lt;/p&gt;

&lt;p&gt;Системный каталог - набор таблиц, хранящий служебную информацию о БД&lt;/p&gt;

&lt;p&gt;Таблицы системного каталога хранят:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Таблицы - имя, владелец …&lt;/li&gt;
  &lt;li&gt;Столбцы - имя, таблица …&lt;/li&gt;
  &lt;li&gt;Пользователи&lt;/li&gt;
  &lt;li&gt;Представления&lt;/li&gt;
  &lt;li&gt;Привелегии&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;хранимые процедуры&lt;/strong&gt; - набор инструкций, реализующий какой-либо процесс
&lt;strong&gt;функция&lt;/strong&gt; - программа, возвращающая одно значение для каждой строки. Может быть использована внутри
SQL инструкций практически везде где может быть использовано имя столбца или константа
&lt;strong&gt;триггеры&lt;/strong&gt; - код, запускающий на выполнение процедуру при выполнении заданных условий&lt;/p&gt;

&lt;h3 id=&quot;язык-хранимых-процедур-spl---stored-procedure-language---набор-элементов-реализующий&quot;&gt;Язык хранимых процедур (SPL - Stored Procedure Language) - набор элементов, реализующий:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Условное выполнение&lt;/strong&gt; - &lt;code class=&quot;highlighter-rouge&quot;&gt;IF ... THEN ... ELSE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Циклы&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;WHILE&lt;/code&gt; или &lt;code class=&quot;highlighter-rouge&quot;&gt;FOR&lt;/code&gt; либо иная подобная структура&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Блочная структура&lt;/strong&gt; Последовательность инструкций SQL может быть сгруппирована и использована в других управляющих конструкциях&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Именованные переменные&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Именованные процедуры&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Выходные параметры&lt;/strong&gt; - используются для возврата результатов процедуры, передаются в процедуру явно&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;  &lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;procedure&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_cust_info&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_num&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nteger&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;с&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r_name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;c_num&lt;/code&gt; - входной параметр, передаётся извне
&lt;code class=&quot;highlighter-rouge&quot;&gt;с_name&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;r_name&lt;/code&gt; - выходные параметры, туда должны быть переданы проинициализированные переменные,
в которые будет записан результат выполнения&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;  &lt;span class=&quot;k&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the_name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;the_rep&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_cust_info&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2111&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the_rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;передано&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;значение&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;и&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;переменные&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;для&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;возврата&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;значений&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_cust_info&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;ошибка&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;не&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;переданы&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;переменные&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;для&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;возврата&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;значений&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_cust_info&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2111&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12222&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the_rep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;ошибка&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;вместо&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;переменной&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;передано&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;значение&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;преимущества-хранимых-процедур&quot;&gt;Преимущества хранимых процедур&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Производительность - хранимые процедуры компилируются (автоматически или по запросу) и за счёт этого
выполняются быстрее чем аналогичный набор инструкций&lt;/li&gt;
  &lt;li&gt;Повторное использование -  можно вызывать из любых приложений&lt;/li&gt;
  &lt;li&gt;Сокращение сетевого трафика - передаётся только название процедуры а не весь набор инструкций&lt;/li&gt;
  &lt;li&gt;Безопасность - можно назначить отдельные привилегии, при этом привилегии на таблицы, с которыми
 работает процедура необязательны&lt;/li&gt;
  &lt;li&gt;Инкапсуляция - можно создать публичный интерфейс для работы с данными&lt;/li&gt;
  &lt;li&gt;Простота доступа - вызвать существующую процедуру проще чем писать аналогичные запросы&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Обеспечение бизнес-правил - если базой пользуются несколько приложений можно обеспечить выполнение 
бизнес-правил на уровне бд&lt;/p&gt;

    &lt;p&gt;Внешняя хранимая процедура - процедура, написанная на одном из традиционных языков программирования и скомпилированная вне СУБД&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;триггер&lt;/strong&gt; - это особая хранимая процедура, которая вызывается в ответ на модификацию содержимого базы данных.&lt;/p&gt;

&lt;h3 id=&quot;функции-триггеров&quot;&gt;Функции триггеров&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Контроль изменений&lt;/strong&gt; Триггер может отслеживать и отменять определенные изменения, не разрешаемые в конкретной базе данных.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Каскадные операции&lt;/strong&gt; Триггер может обнаруживать определенные операции (например, удаление сведений о клиенте или служащем) и автоматически вносить соответствующие изменения в другие таблицы базы&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Поддержка целостности&lt;/strong&gt; Триггер может померживать более сложные
связи между данными, чем те, которые могут быть выражены ограничениями на значения столбцов и условиями ссылочной целостности&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Вызов хранимых процедур&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Обнаружение системных событий&lt;/strong&gt; В СУБД с помержкой триггеровдля системных событий триггер может отслеживать, например, подключение к базе данных определенного пользователя.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Главным недостатком триггеров является их влияние на производительность операций с базой данных.&lt;/p&gt;

&lt;p&gt;Хранилище данных - СУБД, оптимизированная для хранения больших объёмов данных и выполнения аналитических запросов на них&lt;/p&gt;

&lt;h3 id=&quot;загрузка-данных-в-хранилище&quot;&gt;Загрузка данных в хранилище&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Извлечение данных&lt;/strong&gt; получение данных из разных источников&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Очистка данных&lt;/strong&gt; фильтрация, проверка целостности&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Перекрестная проверка данных&lt;/strong&gt; проверка согласованности данных из разных источников&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Переформатирование&lt;/strong&gt; приведение данных к одному формату, разделение по таблицам&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Вставка/обновление данных&lt;/strong&gt; обычно осуществляется без транзакций с помощью специальных пакетных механизмов&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Создание/обновление индексов&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;производитеьность-запросов&quot;&gt;Производитеьность запросов&lt;/h3&gt;

&lt;p&gt;Для повышения производительности запросов, связанных с деловым анализом,
используется несколько технологий&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Специализированные схемы индексации&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Технологии параллельной обработки&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Специализированные алгоритмы оптимизации&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Разбиение таблиц и индексов&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Тесная интеграция программного и аппаратного обеспечения&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;характеристики-объектно-ориентированной-базы-данных&quot;&gt;Характеристики объектно-ориентированной базы данных&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Объекты&lt;/strong&gt; В ООБД любая сущность является объектом и обрабатывается как объект.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Классы&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Наследование&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Атрибуты&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Сообщения и методы&lt;/strong&gt; Объекты взаимодействуют друг с другом посредством сообщений. Когда объект получает сообщение, он отвечает на него, выполняя метод - подпрограмму, хранимую внуrри объекта, которая определяет способ обработки сообщения.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Инкапсуляция&lt;/strong&gt; Внуrренняя структура и данные объектов скрыты от внешнего мира за набором строго определенных интерфейсов.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Идентификаторы объектов&lt;/strong&gt; объект указывает на другой объект с помощью дескриптора, который он хранит в одном из своих атрибутов.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;основные-объектные-расширения-уже-имеющиеся-в-современных-бд&quot;&gt;основные объектные расширения, уже имеющиеся в современных БД&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Большие объекты данных&lt;/strong&gt; могут хранить мультимедиа файлы&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Структурированные/абстрактные типы данных&lt;/strong&gt; ROW - структура, например адресс, который состоит из города улицы и дома&lt;/p&gt;

    &lt;pre&gt;&lt;code class=&quot;language-SQL&quot;&gt;  ADDRESS ROW (STREET VARCHAR (35), CITY VARCНAR (15), STATE СНАR ( 2 ))
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Пользовательские типы данных&lt;/strong&gt; именованные абстрактные типы, которые можно переиспользовать&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Таблицы в таблицах&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Последовательности, множества и массивы&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Хранимые процедуры&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Дескрипторы и идентификаторы объектов&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;характеристики-встраиваемых-баз-данных&quot;&gt;Характеристики встраиваемых баз данных&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Малое потребление памяти&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Отсутствие администрирования&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Поддержка нетрадиционного хранения&lt;/strong&gt; данные могут храниться в оперативной памяти,в энергонезависимой намяти, на USВ-диске или еще где-то&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ограниченная поддержка SQL&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Статическая схема базы данных&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Однопользовательская работа&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">SQL появился как исследовательский продукт фирмы IBM. Изначально назывался SEQUEL - Structured English Query Language но был переименован из-за конфликта прав.</summary></entry></feed>